#!/bin/bash

# save and run
# . nginx_builder

PARENTF=`pwd`
NGINXV='nginx-1.16.1'
IS_LOCAL=1



function main {
    notice "builder for $NGINXV"
    notice "from parent folder $PARENTF"
    
    if [ $IS_LOCAL == 1 ]; then
        warn "run for LOCAL operations"
    fi
    
    #root_prepare
    repo_get
    luajit2_git_prepare
    lua_addition_prepare
    nginx_get
    make_configure
    #make_service
    #make_run_schedule
    #prepare_for_archive
}

# ------------------------------------------------------------------------------

function prepare_for_archive {
    
    notice "prepare_for_archive"
    
    for mfold in echo-nginx-module.git form-input-nginx-module.git headers-more-nginx-module.git \
        luajit2.git lua-nginx-module.git memc-nginx-module.git naxsi.git nginx-upload-module.git \
        ngx_cache_purge.git ngx_devel_kit.git redis2-nginx-module.git set-misc-nginx-module.git
    do
        echo "remove [$mfold/.git] folder"
        rm -rf "$mfold/.git"
    done
    
    if [ $IS_LOCAL == 1 ]; then
        for mfold in opt/lua-cjson.git opt/lua-resty-cookie.git opt/lua-resty-core.git opt/lua-resty-lrucache.git \
            opt/lua-resty-redis.git
        do
            echo "remove [$mfold/.git] folder"
            rm -rf "$mfold/.git"
        done
    fi
    
    cd luajit2.git && make clean && rm -rf build && cd ..
    cd opt/lua-cjson.git && make clean && cd ../../
    
    rm -rf $NGINXV
    tar xf $NGINXV.tar.gz
    rm $NGINXV.tar.gz
}

# ------------------------------------------------------------------------------

function root_prepare {
    
    notice "root_prepare"
    
    if ! whoami | grep -q root; then
        err 'root required. exit.'
    fi
    
    if ! grep -q "nginx" /etc/passwd; then
        groupadd nginx
        useradd -M -g nginx nginx   
    fi
    
    if cat /etc/*release* | grep -q 'openSUSE Leap 15.1'; then
        warn 'openSUSE Leap 15.1 detected.'
        zypper in -t pattern -y devel_C_C++ devel_basis devel_perl console
        zypper in -y pcre-devel libopenssl-devel gd-devel libGeoIP-devel libatomic_ops-devel
    fi
    
    if [ $IS_LOCAL == 0 ]; then
        rm -rf /usr/local/$NGINXV
        rm -rf /var/lib/nginx/
        mkdir -p /var/lib/nginx/{fastcgi,proxy,scgi,tmp,uwsgi,cache}
        chown -R nginx:nginx /var/lib/nginx/

        mkdir -p /var/run/nginx
        chown -R nginx:nginx /var/run/nginx

        mkdir /var/log/nginx/
    fi
}

# ------------------------------------------------------------------------------

function repo_get {
    
    notice "repo_get"
    
    get_github 'openresty' 'memc-nginx-module.git'
    get_github 'chaoslawful' 'lua-nginx-module.git'
    get_github 'simplresty' 'ngx_devel_kit.git'
    get_github 'openresty' 'redis2-nginx-module.git'
    get_github 'openresty' 'echo-nginx-module.git'
    get_github 'calio' 'form-input-nginx-module.git'
    get_github 'openresty' 'set-misc-nginx-module.git'
    get_github 'Austinb' 'nginx-upload-module.git'
    get_github 'FRiCKLE' 'ngx_cache_purge.git'
    get_github 'openresty' 'headers-more-nginx-module.git'
    get_github 'nbs-system' 'naxsi.git'
}

# ------------------------------------------------------------------------------

function luajit2_git_prepare {
    
    notice "luajit2_git_prepare"
    
    get_github 'openresty' 'luajit2.git'
    pushd 'luajit2.git'
        make clean
        mkdir build
        
        make -j2 PREFIX=$PARENTF/luajit2.git/build
        make install PREFIX=$PARENTF/luajit2.git/build
    popd
}

# ------------------------------------------------------------------------------

function lua_addition_prepare {
    
    notice "lua_addition_prepare"
    local folderName=''
    
    if [ $IS_LOCAL == 1 ]; then
        mkdir opt ; cd opt
    else
        cd /opt
    fi
    
    get_github 'openresty' 'lua-resty-core.git'
    get_github 'openresty' 'lua-resty-lrucache.git'
    get_github 'openresty' 'lua-cjson.git'
    
    pushd 'lua-cjson.git'
        if [ $IS_LOCAL == 1 ]; then
            echo
            echo "export LUA_INCLUDE_DIR=\"$PARENTF/luajit2.git/src\" && make"
            echo
            export LUA_INCLUDE_DIR="$PARENTF/luajit2.git/src" && make
        else
            echo
            echo "export LUA_INCLUDE_DIR=\"/opt/luajit2.git/src\" && make"
            echo
            export LUA_INCLUDE_DIR="/opt/luajit2.git/src" && make
        fi
    popd
    
    get_github 'openresty' 'lua-resty-redis.git'
    get_github 'cloudflare' 'lua-resty-cookie.git'
    
    
    echo
    notice "save these strings:"
    if [ $IS_LOCAL == 1 ]; then
        echo "lua_package_path \"$PARENTF/opt/lua-resty-core.git/lib/?.lua;$PARENTF/opt/lua-resty-lrucache.git/lib/?.lua;$PARENTF/opt/lua-resty-redis.git/lib/?.lua;;\";"
        echo "lua_package_cpath \"$PARENTF/opt/lua-cjson.git/?.so;;\";"
    else
        echo "lua_package_path \"/opt/lua-resty-core.git/lib/?.lua;/opt/lua-resty-lrucache.git/lib/?.lua;/opt/lua-resty-redis.git/lib/?.lua;;\";"
        echo "lua_package_cpath \"/opt/lua-cjson.git/?.so;;\";"
    fi
    echo
    read -p "Press [Enter] key to continue..."
    
    cd $PARENTF
}


# ------------------------------------------------------------------------------

function nginx_get {
    
    notice "nginx_get"
    
    rm -rf $NGINXV
    
    if [ ! -f $NGINXV.tar.gz ]; then
        wget https://nginx.org/download/$NGINXV.tar.gz
    fi
    
    tar xf $NGINXV.tar.gz
}

# ------------------------------------------------------------------------------

function make_configure {
    
    notice "make_configure"
    
    local PREFIX=""
    local CONF_PATH=""
    local PID_PATH=""
    local ERROR_LOG=""
    local HTTP_LOG=""
    local CLIENT_BODY_TEMP=""
    local PROXY_TEMP_PATH=""
    local FASTCGI_TEMP_PATH=""
    local UWSGI_TEMP_PATH=""
    local SCGI_TEMP_PATH=""
    
    if [ $IS_LOCAL == 1 ]; then
        mkdir -p $PARENTF/build/{tmp,proxy,fastcgi,uwsgi,scgi}
        PREFIX="$PARENTF/build/"
        CONF_PATH="$PREFIX/conf/nginx.conf"
        PID_PATH="$PREFIX/logs/nginx.pid"
        ERROR_LOG="$PREFIX/logs/error.log"
        HTTP_LOG="$PREFIX/logs/access.log"
        CLIENT_BODY_TEMP="$PREFIX/tmp/"
        PROXY_TEMP_PATH="$PREFIX/proxy/"
        FASTCGI_TEMP_PATH="$PREFIX/fastcgi/"
        UWSGI_TEMP_PATH="$PREFIX/uwsgi/"
        SCGI_TEMP_PATH="$PREFIX/scgi/"
    else
        PREFIX="/usr/local/$NGINXV"
        CONF_PATH="/etc/$NGINXV/nginx.conf"
        PID_PATH="/var/run/nginx/nginx.pid"
        ERROR_LOG="/var/log/nginx/error.log"
        HTTP_LOG="/var/log/nginx/access.log"
        CLIENT_BODY_TEMP="/var/lib/nginx/tmp/"
        PROXY_TEMP_PATH="/var/lib/nginx/proxy/"
        FASTCGI_TEMP_PATH="/var/lib/nginx/fastcgi/"
        UWSGI_TEMP_PATH="/var/lib/nginx/uwsgi/"
        SCGI_TEMP_PATH="/var/lib/nginx/scgi/"
    fi
    
    
cat << L10HEREDOC > $NGINXV/nginx_configuration
#!/bin/bash

./configure \\
--with-cc-opt="-Wno-sign-compare -Wno-string-plus-int -Wno-deprecated-declarations -Wno-unused-parameter -Wno-unused-const-variable -Wno-conditional-uninitialized -Wno-mismatched-tags -Wno-sometimes-uninitialized -Wno-parentheses-equality -Wno-tautological-compare -Wno-self-assign -Wno-deprecated-register -Wno-deprecated -Wno-invalid-source-encoding -Wno-pointer-sign -Wno-parentheses -Wno-enum-conversion -Wno-c++11-compat-deprecated-writable-strings -Wno-write-strings" \\
--with-ld-opt="-Wl,-rpath,../luajit2.git/build/lib" \\
--prefix=$PREFIX \\
--conf-path=$CONF_PATH \\
--pid-path=$PID_PATH \\
--error-log-path=$ERROR_LOG \\
--http-log-path=$HTTP_LOG \\
--http-client-body-temp-path=$CLIENT_BODY_TEMP \\
--http-proxy-temp-path=$PROXY_TEMP_PATH \\
--http-fastcgi-temp-path=$FASTCGI_TEMP_PATH \\
--http-uwsgi-temp-path=$UWSGI_TEMP_PATH \\
--http-scgi-temp-path=$SCGI_TEMP_PATH \\
--user=nginx \\
--group=nginx \\
--with-http_v2_module \\
--with-file-aio \\
--with-http_ssl_module \\
--with-http_realip_module \\
--with-http_addition_module \\
--with-http_image_filter_module \\
--with-http_geoip_module \\
--with-http_sub_module \\
--with-http_gzip_static_module \\
--with-http_random_index_module \\
--with-http_secure_link_module \\
--with-http_stub_status_module \\
--with-pcre \\
--with-pcre-jit \\
--with-libatomic \\
--add-module=../memc-nginx-module.git/ \\
--add-module=../lua-nginx-module.git/ \\
--add-module=../ngx_devel_kit.git/ \\
--add-module=../redis2-nginx-module.git/ \\
--add-module=../echo-nginx-module.git/ \\
--add-module=../form-input-nginx-module.git/ \\
--add-module=../set-misc-nginx-module.git/ \\
--add-module=../nginx-upload-module.git/ \\
--add-module=../ngx_cache_purge.git/ \\
--add-module=../headers-more-nginx-module.git/ \\
--add-module=../naxsi.git/naxsi_src/ \\


L10HEREDOC
    
    chmod +x "$NGINXV/nginx_configuration"
    
    notice
    notice "export LUAJIT_LIB=../luajit2.git/build/lib && export LUAJIT_INC=../luajit2.git/src"
    notice
    
    notice 'run ./nginx_configuration'
    notice 'make -j4 && make install'
    
    cd $NGINXV && exec bash
}

# ------------------------------------------------------------------------------

function make_service {
    
    notice "make_service"
    
    if ! whoami | grep -q root; then
        echo 'root required. exit.'
        exit 1
    fi

cat << L11HEREDOC > /etc/systemd/system/nginx.service

[Unit]
Description=$NGINXV
Wants=network.target nss-lookup.target
After=syslog.target network.target remote-fs.target nss-lookup.target
Before=getty@tty1.service plymouth-quit.service xdm.service

[Service]
Type=forking
PIDFile=/var/run/nginx/nginx.pid
ExecStartPre=/usr/local/$NGINXV/sbin/nginx -t
ExecStart=/usr/local/$NGINXV/sbin/nginx
ExecReload=/bin/kill -s HUP \$MAINPID
ExecStop=/bin/kill -s QUIT \$MAINPID
PrivateTmp=true

[Install]
WantedBy=multi-user.target runlevel3.target

L11HEREDOC

    systemctl daemon-reload
    systemctl status nginx.service
    systemctl enable nginx.service
}

# ------------------------------------------------------------------------------

function make_run_schedule {
    
    notice "make_run_schedule"
    
    if ! whoami | grep -q root; then
        echo 'root required. exit.'
        exit 1
    fi

cat << L12HEREDOC > /usr/lib/tmpfiles.d/nginx.conf

d /run/nginx 0755 nginx nginx - -

L12HEREDOC

}

# ------------------------------------------------------------------------------

function notice {
    builtin echo -en "\033[1m"
    echo "NOTICE: $@"
    builtin echo -en "\033[0m"
}

function success {
    builtin echo -en "\033[1;32m"
    echo "SUCCESS: $@"
    builtin echo -en "\033[0m"
}

function warn {
    builtin echo -en "\033[1;33m"
    echo "WARN: $@"
    builtin echo -en "\033[0m"
}

function err {
    builtin echo -en "\033[1;31m"
    echo "ERR: $@"
    builtin echo -en "\033[0m"
    exit 1
}

function fatal {
    builtin echo -en "\033[1;31m"
    echo "FATAL: $@"
    builtin echo -en "\033[0m"
    exit 1
}

function get_github {
    notice "get_github ($1, $2) => github.com/$1/$2"
    local folderName=$2
    
    if [ -d $folderName ]; then
        cd $folderName
        pwd
        git pull
        cd ..
    else
        git clone https://github.com/$1/$folderName $folderName
    fi
    pushd $folderName
        git describe --tags --abbrev=0
    popd
}

# ------------------------------------------------------------------------------

main
