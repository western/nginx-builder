#! /bin/sh
# Generated by configure.
# Run this file to recreate the current configuration.
# Compiler output produced by configure, useful for debugging
# configure, is in config.log if it exists.

debug=false
ac_cs_recheck=false
ac_cs_silent=false

SHELL=${CONFIG_SHELL-/bin/sh}
export SHELL
## -------------------- ##
## M4sh Initialization. ##
## -------------------- ##

# Be more Bourne compatible
DUALCASE=1; export DUALCASE # for MKS sh
if test -n "${ZSH_VERSION+set}" && (emulate sh) >/dev/null 2>&1; then :
  emulate sh
  NULLCMD=:
  # Pre-4.2 versions of Zsh do word splitting on ${1+"$@"}, which
  # is contrary to our usage.  Disable this feature.
  alias -g '${1+"$@"}'='"$@"'
  setopt NO_GLOB_SUBST
else
  case `(set -o) 2>/dev/null` in #(
  *posix*) :
    set -o posix ;; #(
  *) :
     ;;
esac
fi


as_nl='
'
export as_nl
# Printing a long string crashes Solaris 7 /usr/bin/printf.
as_echo='\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'
as_echo=$as_echo$as_echo$as_echo$as_echo$as_echo
as_echo=$as_echo$as_echo$as_echo$as_echo$as_echo$as_echo
# Prefer a ksh shell builtin over an external printf program on Solaris,
# but without wasting forks for bash or zsh.
if test -z "$BASH_VERSION$ZSH_VERSION" \
    && (test "X`print -r -- $as_echo`" = "X$as_echo") 2>/dev/null; then
  as_echo='print -r --'
  as_echo_n='print -rn --'
elif (test "X`printf %s $as_echo`" = "X$as_echo") 2>/dev/null; then
  as_echo='printf %s\n'
  as_echo_n='printf %s'
else
  if test "X`(/usr/ucb/echo -n -n $as_echo) 2>/dev/null`" = "X-n $as_echo"; then
    as_echo_body='eval /usr/ucb/echo -n "$1$as_nl"'
    as_echo_n='/usr/ucb/echo -n'
  else
    as_echo_body='eval expr "X$1" : "X\\(.*\\)"'
    as_echo_n_body='eval
      arg=$1;
      case $arg in #(
      *"$as_nl"*)
	expr "X$arg" : "X\\(.*\\)$as_nl";
	arg=`expr "X$arg" : ".*$as_nl\\(.*\\)"`;;
      esac;
      expr "X$arg" : "X\\(.*\\)" | tr -d "$as_nl"
    '
    export as_echo_n_body
    as_echo_n='sh -c $as_echo_n_body as_echo'
  fi
  export as_echo_body
  as_echo='sh -c $as_echo_body as_echo'
fi

# The user is always right.
if test "${PATH_SEPARATOR+set}" != set; then
  PATH_SEPARATOR=:
  (PATH='/bin;/bin'; FPATH=$PATH; sh -c :) >/dev/null 2>&1 && {
    (PATH='/bin:/bin'; FPATH=$PATH; sh -c :) >/dev/null 2>&1 ||
      PATH_SEPARATOR=';'
  }
fi


# IFS
# We need space, tab and new line, in precisely that order.  Quoting is
# there to prevent editors from complaining about space-tab.
# (If _AS_PATH_WALK were called with IFS unset, it would disable word
# splitting by setting IFS to empty value.)
IFS=" ""	$as_nl"

# Find who we are.  Look in the path if we contain no directory separator.
case $0 in #((
  *[\\/]* ) as_myself=$0 ;;
  *) as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $PATH
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
    test -r "$as_dir/$0" && as_myself=$as_dir/$0 && break
  done
IFS=$as_save_IFS

     ;;
esac
# We did not find ourselves, most probably we were run as `sh COMMAND'
# in which case we are not to be found in the path.
if test "x$as_myself" = x; then
  as_myself=$0
fi
if test ! -f "$as_myself"; then
  $as_echo "$as_myself: error: cannot find myself; rerun with an absolute file name" >&2
  exit 1
fi

# Unset variables that we do not need and which cause bugs (e.g. in
# pre-3.0 UWIN ksh).  But do not cause bugs in bash 2.01; the "|| exit 1"
# suppresses any "Segmentation fault" message there.  '((' could
# trigger a bug in pdksh 5.2.14.
for as_var in BASH_ENV ENV MAIL MAILPATH
do eval test x\${$as_var+set} = xset \
  && ( (unset $as_var) || exit 1) >/dev/null 2>&1 && unset $as_var || :
done
PS1='$ '
PS2='> '
PS4='+ '

# NLS nuisances.
LC_ALL=C
export LC_ALL
LANGUAGE=C
export LANGUAGE

# CDPATH.
(unset CDPATH) >/dev/null 2>&1 && unset CDPATH


# as_fn_error ERROR [LINENO LOG_FD]
# ---------------------------------
# Output "`basename $0`: error: ERROR" to stderr. If LINENO and LOG_FD are
# provided, also output the error to LOG_FD, referencing LINENO. Then exit the
# script with status $?, using 1 if that was 0.
as_fn_error ()
{
  as_status=$?; test $as_status -eq 0 && as_status=1
  if test "$3"; then
    as_lineno=${as_lineno-"$2"} as_lineno_stack=as_lineno_stack=$as_lineno_stack
    $as_echo "$as_me:${as_lineno-$LINENO}: error: $1" >&$3
  fi
  $as_echo "$as_me: error: $1" >&2
  as_fn_exit $as_status
} # as_fn_error


# as_fn_set_status STATUS
# -----------------------
# Set $? to STATUS, without forking.
as_fn_set_status ()
{
  return $1
} # as_fn_set_status

# as_fn_exit STATUS
# -----------------
# Exit the shell with STATUS, even in a "trap 0" or "set -e" context.
as_fn_exit ()
{
  set +e
  as_fn_set_status $1
  exit $1
} # as_fn_exit

# as_fn_unset VAR
# ---------------
# Portably unset VAR.
as_fn_unset ()
{
  { eval $1=; unset $1;}
}
as_unset=as_fn_unset
# as_fn_append VAR VALUE
# ----------------------
# Append the text in VALUE to the end of the definition contained in VAR. Take
# advantage of any shell optimizations that allow amortized linear growth over
# repeated appends, instead of the typical quadratic growth present in naive
# implementations.
if (eval "as_var=1; as_var+=2; test x\$as_var = x12") 2>/dev/null; then :
  eval 'as_fn_append ()
  {
    eval $1+=\$2
  }'
else
  as_fn_append ()
  {
    eval $1=\$$1\$2
  }
fi # as_fn_append

# as_fn_arith ARG...
# ------------------
# Perform arithmetic evaluation on the ARGs, and store the result in the
# global $as_val. Take advantage of shells that can avoid forks. The arguments
# must be portable across $(()) and expr.
if (eval "test \$(( 1 + 1 )) = 2") 2>/dev/null; then :
  eval 'as_fn_arith ()
  {
    as_val=$(( $* ))
  }'
else
  as_fn_arith ()
  {
    as_val=`expr "$@" || test $? -eq 1`
  }
fi # as_fn_arith


if expr a : '\(a\)' >/dev/null 2>&1 &&
   test "X`expr 00001 : '.*\(...\)'`" = X001; then
  as_expr=expr
else
  as_expr=false
fi

if (basename -- /) >/dev/null 2>&1 && test "X`basename -- / 2>&1`" = "X/"; then
  as_basename=basename
else
  as_basename=false
fi

if (as_dir=`dirname -- /` && test "X$as_dir" = X/) >/dev/null 2>&1; then
  as_dirname=dirname
else
  as_dirname=false
fi

as_me=`$as_basename -- "$0" ||
$as_expr X/"$0" : '.*/\([^/][^/]*\)/*$' \| \
	 X"$0" : 'X\(//\)$' \| \
	 X"$0" : 'X\(/\)' \| . 2>/dev/null ||
$as_echo X/"$0" |
    sed '/^.*\/\([^/][^/]*\)\/*$/{
	    s//\1/
	    q
	  }
	  /^X\/\(\/\/\)$/{
	    s//\1/
	    q
	  }
	  /^X\/\(\/\).*/{
	    s//\1/
	    q
	  }
	  s/.*/./; q'`

# Avoid depending upon Character Ranges.
as_cr_letters='abcdefghijklmnopqrstuvwxyz'
as_cr_LETTERS='ABCDEFGHIJKLMNOPQRSTUVWXYZ'
as_cr_Letters=$as_cr_letters$as_cr_LETTERS
as_cr_digits='0123456789'
as_cr_alnum=$as_cr_Letters$as_cr_digits

ECHO_C= ECHO_N= ECHO_T=
case `echo -n x` in #(((((
-n*)
  case `echo 'xy\c'` in
  *c*) ECHO_T='	';;	# ECHO_T is single tab character.
  xy)  ECHO_C='\c';;
  *)   echo `echo ksh88 bug on AIX 6.1` > /dev/null
       ECHO_T='	';;
  esac;;
*)
  ECHO_N='-n';;
esac

rm -f conf$$ conf$$.exe conf$$.file
if test -d conf$$.dir; then
  rm -f conf$$.dir/conf$$.file
else
  rm -f conf$$.dir
  mkdir conf$$.dir 2>/dev/null
fi
if (echo >conf$$.file) 2>/dev/null; then
  if ln -s conf$$.file conf$$ 2>/dev/null; then
    as_ln_s='ln -s'
    # ... but there are two gotchas:
    # 1) On MSYS, both `ln -s file dir' and `ln file dir' fail.
    # 2) DJGPP < 2.04 has no symlinks; `ln -s' creates a wrapper executable.
    # In both cases, we have to default to `cp -p'.
    ln -s conf$$.file conf$$.dir 2>/dev/null && test ! -f conf$$.exe ||
      as_ln_s='cp -p'
  elif ln conf$$.file conf$$ 2>/dev/null; then
    as_ln_s=ln
  else
    as_ln_s='cp -p'
  fi
else
  as_ln_s='cp -p'
fi
rm -f conf$$ conf$$.exe conf$$.dir/conf$$.file conf$$.file
rmdir conf$$.dir 2>/dev/null


# as_fn_mkdir_p
# -------------
# Create "$as_dir" as a directory, including parents if necessary.
as_fn_mkdir_p ()
{

  case $as_dir in #(
  -*) as_dir=./$as_dir;;
  esac
  test -d "$as_dir" || eval $as_mkdir_p || {
    as_dirs=
    while :; do
      case $as_dir in #(
      *\'*) as_qdir=`$as_echo "$as_dir" | sed "s/'/'\\\\\\\\''/g"`;; #'(
      *) as_qdir=$as_dir;;
      esac
      as_dirs="'$as_qdir' $as_dirs"
      as_dir=`$as_dirname -- "$as_dir" ||
$as_expr X"$as_dir" : 'X\(.*[^/]\)//*[^/][^/]*/*$' \| \
	 X"$as_dir" : 'X\(//\)[^/]' \| \
	 X"$as_dir" : 'X\(//\)$' \| \
	 X"$as_dir" : 'X\(/\)' \| . 2>/dev/null ||
$as_echo X"$as_dir" |
    sed '/^X\(.*[^/]\)\/\/*[^/][^/]*\/*$/{
	    s//\1/
	    q
	  }
	  /^X\(\/\/\)[^/].*/{
	    s//\1/
	    q
	  }
	  /^X\(\/\/\)$/{
	    s//\1/
	    q
	  }
	  /^X\(\/\).*/{
	    s//\1/
	    q
	  }
	  s/.*/./; q'`
      test -d "$as_dir" && break
    done
    test -z "$as_dirs" || eval "mkdir $as_dirs"
  } || test -d "$as_dir" || as_fn_error "cannot create directory $as_dir"


} # as_fn_mkdir_p
if mkdir -p . 2>/dev/null; then
  as_mkdir_p='mkdir -p "$as_dir"'
else
  test -d ./-p && rmdir ./-p
  as_mkdir_p=false
fi

if test -x / >/dev/null 2>&1; then
  as_test_x='test -x'
else
  if ls -dL / >/dev/null 2>&1; then
    as_ls_L_option=L
  else
    as_ls_L_option=
  fi
  as_test_x='
    eval sh -c '\''
      if test -d "$1"; then
	test -d "$1/.";
      else
	case $1 in #(
	-*)set "./$1";;
	esac;
	case `ls -ld'$as_ls_L_option' "$1" 2>/dev/null` in #((
	???[sx]*):;;*)false;;esac;fi
    '\'' sh
  '
fi
as_executable_p=$as_test_x

# Sed expression to map a string onto a valid CPP name.
as_tr_cpp="eval sed 'y%*$as_cr_letters%P$as_cr_LETTERS%;s%[^_$as_cr_alnum]%_%g'"

# Sed expression to map a string onto a valid variable name.
as_tr_sh="eval sed 'y%*+%pp%;s%[^_$as_cr_alnum]%_%g'"


exec 6>&1
## ----------------------------------- ##
## Main body of $CONFIG_STATUS script. ##
## ----------------------------------- ##
# Save the log message, to keep $0 and so on meaningful, and to
# report actual input values of CONFIG_FILES etc. instead of their
# values after options handling.
ac_log="
This file was extended by drizzle7 $as_me 7, which was
generated by GNU Autoconf 2.65.  Invocation command line was

  CONFIG_FILES    = $CONFIG_FILES
  CONFIG_HEADERS  = $CONFIG_HEADERS
  CONFIG_LINKS    = $CONFIG_LINKS
  CONFIG_COMMANDS = $CONFIG_COMMANDS
  $ $0 $@

on `(hostname || uname -n) 2>/dev/null | sed 1q`
"

# Files that config.status was made for.
config_files=" drizzled/module/load_list.h Makefile tests/Makefile drizzled/plugin/version.h support-files/drizzle7.pc support-files/libdrizzle-1.0.pc support-files/libdrizzle-2.0.pc support-files/smf/install.sh support-files/smf/drizzle.xml support-files/smf/drizzle"
config_headers=" config.h"
config_commands=" depfiles libtool po-directories po/stamp-it"

ac_cs_usage="\
\`$as_me' instantiates files and other configuration actions
from templates according to the current configuration.  Unless the files
and actions are specified as TAGs, all are instantiated by default.

Usage: $0 [OPTION]... [TAG]...

  -h, --help       print this help, then exit
  -V, --version    print version number and configuration settings, then exit
      --config     print configuration, then exit
  -q, --quiet, --silent
                   do not print progress messages
  -d, --debug      don't remove temporary files
      --recheck    update $as_me by reconfiguring in the same conditions
      --file=FILE[:TEMPLATE]
                   instantiate the configuration file FILE
      --header=FILE[:TEMPLATE]
                   instantiate the configuration header FILE

Configuration files:
$config_files

Configuration headers:
$config_headers

Configuration commands:
$config_commands

Report bugs to <http://bugs.launchpad.net/drizzle>."

ac_cs_config="'--without-server' '--prefix=/home/andrey/Code/nginx-builder.git/etc_src/drizzle7-2011.07.21/build'"
ac_cs_version="\
drizzle7 config.status 7
configured by ./configure, generated by GNU Autoconf 2.65,
  with options \"$ac_cs_config\"

Copyright (C) 2009 Free Software Foundation, Inc.
This config.status script is free software; the Free Software Foundation
gives unlimited permission to copy, distribute and modify it."

ac_pwd='/home/andrey/Code/nginx-builder.git/etc_src/drizzle7-2011.07.21'
srcdir='.'
INSTALL='/usr/bin/install -c'
MKDIR_P='/usr/bin/mkdir -p'
AWK='gawk'
test -n "$AWK" || AWK=awk
# The default lists apply if the user does not specify any file.
ac_need_defaults=:
while test $# != 0
do
  case $1 in
  --*=*)
    ac_option=`expr "X$1" : 'X\([^=]*\)='`
    ac_optarg=`expr "X$1" : 'X[^=]*=\(.*\)'`
    ac_shift=:
    ;;
  *)
    ac_option=$1
    ac_optarg=$2
    ac_shift=shift
    ;;
  esac

  case $ac_option in
  # Handling of the options.
  -recheck | --recheck | --rechec | --reche | --rech | --rec | --re | --r)
    ac_cs_recheck=: ;;
  --version | --versio | --versi | --vers | --ver | --ve | --v | -V )
    $as_echo "$ac_cs_version"; exit ;;
  --config | --confi | --conf | --con | --co | --c )
    $as_echo "$ac_cs_config"; exit ;;
  --debug | --debu | --deb | --de | --d | -d )
    debug=: ;;
  --file | --fil | --fi | --f )
    $ac_shift
    case $ac_optarg in
    *\'*) ac_optarg=`$as_echo "$ac_optarg" | sed "s/'/'\\\\\\\\''/g"` ;;
    esac
    as_fn_append CONFIG_FILES " '$ac_optarg'"
    ac_need_defaults=false;;
  --header | --heade | --head | --hea )
    $ac_shift
    case $ac_optarg in
    *\'*) ac_optarg=`$as_echo "$ac_optarg" | sed "s/'/'\\\\\\\\''/g"` ;;
    esac
    as_fn_append CONFIG_HEADERS " '$ac_optarg'"
    ac_need_defaults=false;;
  --he | --h)
    # Conflict between --help and --header
    as_fn_error "ambiguous option: \`$1'
Try \`$0 --help' for more information.";;
  --help | --hel | -h )
    $as_echo "$ac_cs_usage"; exit ;;
  -q | -quiet | --quiet | --quie | --qui | --qu | --q \
  | -silent | --silent | --silen | --sile | --sil | --si | --s)
    ac_cs_silent=: ;;

  # This is an error.
  -*) as_fn_error "unrecognized option: \`$1'
Try \`$0 --help' for more information." ;;

  *) as_fn_append ac_config_targets " $1"
     ac_need_defaults=false ;;

  esac
  shift
done

ac_configure_extra_args=

if $ac_cs_silent; then
  exec 6>/dev/null
  ac_configure_extra_args="$ac_configure_extra_args --silent"
fi

if $ac_cs_recheck; then
  set X '/bin/sh' './configure'  '--without-server' '--prefix=/home/andrey/Code/nginx-builder.git/etc_src/drizzle7-2011.07.21/build' $ac_configure_extra_args --no-create --no-recursion
  shift
  $as_echo "running CONFIG_SHELL=/bin/sh $*" >&6
  CONFIG_SHELL='/bin/sh'
  export CONFIG_SHELL
  exec "$@"
fi

exec 5>>config.log
{
  echo
  sed 'h;s/./-/g;s/^.../## /;s/...$/ ##/;p;x;p;x' <<_ASBOX
## Running $as_me. ##
_ASBOX
  $as_echo "$ac_log"
} >&5

#
# INIT-COMMANDS
#
AMDEP_TRUE="" ac_aux_dir="config"


# The HP-UX ksh and POSIX shell print the target directory to stdout
# if CDPATH is set.
(unset CDPATH) >/dev/null 2>&1 && unset CDPATH

sed_quote_subst='s/\(["`$\\]\)/\\\1/g'
double_quote_subst='s/\(["`\\]\)/\\\1/g'
delay_variable_subst='s/\\\\\\\\\\\$/\\\\\\$/g'
enable_static='no'
macro_version='2.2.6b'
macro_revision='1.3017'
enable_shared='yes'
pic_mode='default'
enable_fast_install='needless'
host_alias=''
host='x86_64-unknown-linux-gnu'
host_os='linux-gnu'
build_alias=''
build='x86_64-unknown-linux-gnu'
build_os='linux-gnu'
SED='/usr/bin/sed'
Xsed='/usr/bin/sed -e 1s/^X//'
GREP='/usr/bin/grep'
EGREP='/usr/bin/grep -E'
FGREP='/usr/bin/grep -F'
LD='/usr/x86_64-suse-linux/bin/ld -m elf_x86_64'
NM='/usr/bin/nm -B'
LN_S='ln -s'
max_cmd_len='1572864'
ac_objext='o'
exeext=''
lt_unset='unset'
lt_SP2NL='tr \040 \012'
lt_NL2SP='tr \015\012 \040\040'
reload_flag=' -r'
reload_cmds='$LD$reload_flag -o $output$reload_objs'
OBJDUMP='objdump'
deplibs_check_method='pass_all'
file_magic_cmd='$MAGIC_CMD'
AR='ar'
AR_FLAGS='cru'
STRIP='strip'
RANLIB='ranlib'
old_postinstall_cmds='chmod 644 $oldlib~$RANLIB $oldlib'
old_postuninstall_cmds=''
old_archive_cmds='$AR $AR_FLAGS $oldlib$oldobjs~$RANLIB $oldlib'
CC='gcc -std=gnu99'
CFLAGS=''
compiler='g++'
GCC='yes'
lt_cv_sys_global_symbol_pipe='sed -n -e '\''s/^.*[	 ]\([ABCDGIRSTW][ABCDGIRSTW]*\)[	 ][	 ]*\([_A-Za-z][_A-Za-z0-9]*\)$/\1 \2 \2/p'\'''
lt_cv_sys_global_symbol_to_cdecl='sed -n -e '\''s/^T .* \(.*\)$/extern int \1();/p'\'' -e '\''s/^[ABCDGIRSTW]* .* \(.*\)$/extern char \1;/p'\'''
lt_cv_sys_global_symbol_to_c_name_address='sed -n -e '\''s/^: \([^ ]*\) $/  {\"\1\", (void *) 0},/p'\'' -e '\''s/^[ABCDGIRSTW]* \([^ ]*\) \([^ ]*\)$/  {"\2", (void *) \&\2},/p'\'''
lt_cv_sys_global_symbol_to_c_name_address_lib_prefix='sed -n -e '\''s/^: \([^ ]*\) $/  {\"\1\", (void *) 0},/p'\'' -e '\''s/^[ABCDGIRSTW]* \([^ ]*\) \(lib[^ ]*\)$/  {"\2", (void *) \&\2},/p'\'' -e '\''s/^[ABCDGIRSTW]* \([^ ]*\) \([^ ]*\)$/  {"lib\2", (void *) \&\2},/p'\'''
objdir='.libs'
SHELL='/bin/sh'
ECHO='echo'
MAGIC_CMD='file'
lt_prog_compiler_no_builtin_flag=' -fno-builtin'
lt_prog_compiler_wl='-Wl,'
lt_prog_compiler_pic=' -fPIC -DPIC'
lt_prog_compiler_static=''
lt_cv_prog_compiler_c_o='yes'
need_locks='no'
DSYMUTIL=''
NMEDIT=''
LIPO=''
OTOOL=''
OTOOL64=''
libext='a'
shrext_cmds='.so'
extract_expsyms_cmds=''
archive_cmds_need_lc='no'
enable_shared_with_static_runtimes='no'
export_dynamic_flag_spec='${wl}--export-dynamic'
whole_archive_flag_spec='${wl}--whole-archive$convenience ${wl}--no-whole-archive'
compiler_needs_object='no'
old_archive_from_new_cmds=''
old_archive_from_expsyms_cmds=''
archive_cmds='$CC -shared $libobjs $deplibs $compiler_flags ${wl}-soname $wl$soname -o $lib'
archive_expsym_cmds='echo "{ global:" > $output_objdir/$libname.ver~
	    cat $export_symbols | sed -e "s/\(.*\)/\1;/" >> $output_objdir/$libname.ver~
	    echo "local: *; };" >> $output_objdir/$libname.ver~
	    $CC -shared $libobjs $deplibs $compiler_flags ${wl}-soname $wl$soname ${wl}-version-script ${wl}$output_objdir/$libname.ver -o $lib'
module_cmds=''
module_expsym_cmds=''
with_gnu_ld='yes'
allow_undefined_flag=''
no_undefined_flag=''
hardcode_libdir_flag_spec='${wl}-rpath ${wl}$libdir'
hardcode_libdir_flag_spec_ld=''
hardcode_libdir_separator=''
hardcode_direct='no'
hardcode_direct_absolute='no'
hardcode_minus_L='no'
hardcode_shlibpath_var='unsupported'
hardcode_automatic='no'
inherit_rpath='no'
link_all_deplibs='no'
fix_srcfile_path=''
always_export_symbols='no'
export_symbols_cmds='$NM $libobjs $convenience | $global_symbol_pipe | $SED '\''s/.* //'\'' | sort | uniq > $export_symbols'
exclude_expsyms='_GLOBAL_OFFSET_TABLE_|_GLOBAL__F[ID]_.*'
include_expsyms=''
prelink_cmds=''
file_list_spec=''
variables_saved_for_relink='PATH LD_LIBRARY_PATH LD_RUN_PATH GCC_EXEC_PREFIX COMPILER_PATH LIBRARY_PATH'
need_lib_prefix='no'
need_version='no'
version_type='linux'
runpath_var='LD_RUN_PATH'
shlibpath_var='LD_LIBRARY_PATH'
shlibpath_overrides_runpath='yes'
libname_spec='lib$name'
library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}$major $libname${shared_ext}'
soname_spec='${libname}${release}${shared_ext}$major'
postinstall_cmds=''
postuninstall_cmds=''
finish_cmds='PATH="\$PATH:/sbin" ldconfig -n $libdir'
finish_eval=''
hardcode_into_libs='yes'
sys_lib_search_path_spec='/usr/lib64/gcc/x86_64-suse-linux/7 /usr/lib64 /lib64 /usr/x86_64-suse-linux/lib'
sys_lib_dlsearch_path_spec='/lib /usr/lib /usr/local/lib64 /usr/local/lib /usr/lib64/graphviz /usr/lib64/graphviz/sharp /usr/lib64/graphviz/java /usr/lib64/graphviz/perl /usr/lib64/graphviz/php /usr/lib64/graphviz/ocaml /usr/lib64/graphviz/python /usr/lib64/graphviz/lua /usr/lib64/graphviz/tcl /usr/lib64/graphviz/guile /usr/lib64/graphviz/ruby /usr/lib64/sssd/modules '
hardcode_action='immediate'
enable_dlopen='unknown'
enable_dlopen_self='unknown'
enable_dlopen_self_static='unknown'
old_striplib='strip --strip-debug'
striplib='strip --strip-unneeded'
compiler_lib_search_dirs=''
predep_objects=''
postdep_objects=''
predeps=''
postdeps=''
compiler_lib_search_path=''
LD_CXX='/usr/x86_64-suse-linux/bin/ld -m elf_x86_64'
old_archive_cmds_CXX='$AR $AR_FLAGS $oldlib$oldobjs~$RANLIB $oldlib'
compiler_CXX='g++'
GCC_CXX='yes'
lt_prog_compiler_no_builtin_flag_CXX=' -fno-builtin'
lt_prog_compiler_wl_CXX='-Wl,'
lt_prog_compiler_pic_CXX=' -fPIC -DPIC'
lt_prog_compiler_static_CXX=''
lt_cv_prog_compiler_c_o_CXX='yes'
archive_cmds_need_lc_CXX='no'
enable_shared_with_static_runtimes_CXX='no'
export_dynamic_flag_spec_CXX='${wl}--export-dynamic'
whole_archive_flag_spec_CXX='${wl}--whole-archive$convenience ${wl}--no-whole-archive'
compiler_needs_object_CXX='no'
old_archive_from_new_cmds_CXX=''
old_archive_from_expsyms_cmds_CXX=''
archive_cmds_CXX='$CC -shared -nostdlib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags ${wl}-soname $wl$soname -o $lib'
archive_expsym_cmds_CXX='$CC -shared -nostdlib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags ${wl}-soname $wl$soname ${wl}-retain-symbols-file $wl$export_symbols -o $lib'
module_cmds_CXX=''
module_expsym_cmds_CXX=''
with_gnu_ld_CXX='yes'
allow_undefined_flag_CXX=''
no_undefined_flag_CXX=''
hardcode_libdir_flag_spec_CXX='${wl}-rpath ${wl}$libdir'
hardcode_libdir_flag_spec_ld_CXX=''
hardcode_libdir_separator_CXX=''
hardcode_direct_CXX='no'
hardcode_direct_absolute_CXX='no'
hardcode_minus_L_CXX='no'
hardcode_shlibpath_var_CXX='unsupported'
hardcode_automatic_CXX='no'
inherit_rpath_CXX='no'
link_all_deplibs_CXX='no'
fix_srcfile_path_CXX=''
always_export_symbols_CXX='no'
export_symbols_cmds_CXX='$NM $libobjs $convenience | $global_symbol_pipe | $SED '\''s/.* //'\'' | sort | uniq > $export_symbols'
exclude_expsyms_CXX='_GLOBAL_OFFSET_TABLE_|_GLOBAL__F[ID]_.*'
include_expsyms_CXX=''
prelink_cmds_CXX=''
file_list_spec_CXX=''
hardcode_action_CXX='immediate'
compiler_lib_search_dirs_CXX='/usr/lib64/gcc/x86_64-suse-linux/7 /usr/lib64/gcc/x86_64-suse-linux/7/../../../../lib64 /lib/../lib64 /usr/lib/../lib64 /usr/lib64/gcc/x86_64-suse-linux/7/../../../../x86_64-suse-linux/lib /usr/lib64/gcc/x86_64-suse-linux/7/../../..'
predep_objects_CXX='/usr/lib64/gcc/x86_64-suse-linux/7/../../../../lib64/crti.o /usr/lib64/gcc/x86_64-suse-linux/7/crtbeginS.o'
postdep_objects_CXX='/usr/lib64/gcc/x86_64-suse-linux/7/crtendS.o /usr/lib64/gcc/x86_64-suse-linux/7/../../../../lib64/crtn.o'
predeps_CXX=''
postdeps_CXX='-lstdc++ -lm -lgcc_s -lc -lgcc_s'
compiler_lib_search_path_CXX='-L/usr/lib64/gcc/x86_64-suse-linux/7 -L/usr/lib64/gcc/x86_64-suse-linux/7/../../../../lib64 -L/lib/../lib64 -L/usr/lib/../lib64 -L/usr/lib64/gcc/x86_64-suse-linux/7/../../../../x86_64-suse-linux/lib -L/usr/lib64/gcc/x86_64-suse-linux/7/../../..'

LTCC='gcc'
LTCFLAGS='-g -O2'
compiler='gcc'

# Quote evaled strings.
for var in SED GREP EGREP FGREP LD NM LN_S lt_SP2NL lt_NL2SP reload_flag OBJDUMP deplibs_check_method file_magic_cmd AR AR_FLAGS STRIP RANLIB CC CFLAGS compiler lt_cv_sys_global_symbol_pipe lt_cv_sys_global_symbol_to_cdecl lt_cv_sys_global_symbol_to_c_name_address lt_cv_sys_global_symbol_to_c_name_address_lib_prefix SHELL ECHO lt_prog_compiler_no_builtin_flag lt_prog_compiler_wl lt_prog_compiler_pic lt_prog_compiler_static lt_cv_prog_compiler_c_o need_locks DSYMUTIL NMEDIT LIPO OTOOL OTOOL64 shrext_cmds export_dynamic_flag_spec whole_archive_flag_spec compiler_needs_object with_gnu_ld allow_undefined_flag no_undefined_flag hardcode_libdir_flag_spec hardcode_libdir_flag_spec_ld hardcode_libdir_separator fix_srcfile_path exclude_expsyms include_expsyms file_list_spec variables_saved_for_relink libname_spec library_names_spec soname_spec finish_eval old_striplib striplib compiler_lib_search_dirs predep_objects postdep_objects predeps postdeps compiler_lib_search_path LD_CXX compiler_CXX lt_prog_compiler_no_builtin_flag_CXX lt_prog_compiler_wl_CXX lt_prog_compiler_pic_CXX lt_prog_compiler_static_CXX lt_cv_prog_compiler_c_o_CXX export_dynamic_flag_spec_CXX whole_archive_flag_spec_CXX compiler_needs_object_CXX with_gnu_ld_CXX allow_undefined_flag_CXX no_undefined_flag_CXX hardcode_libdir_flag_spec_CXX hardcode_libdir_flag_spec_ld_CXX hardcode_libdir_separator_CXX fix_srcfile_path_CXX exclude_expsyms_CXX include_expsyms_CXX file_list_spec_CXX compiler_lib_search_dirs_CXX predep_objects_CXX postdep_objects_CXX predeps_CXX postdeps_CXX compiler_lib_search_path_CXX; do
    case `eval \\$ECHO "X\\$$var"` in
    *[\\\`\"\$]*)
      eval "lt_$var=\\\"\`\$ECHO \"X\$$var\" | \$Xsed -e \"\$sed_quote_subst\"\`\\\""
      ;;
    *)
      eval "lt_$var=\\\"\$$var\\\""
      ;;
    esac
done

# Double-quote double-evaled strings.
for var in reload_cmds old_postinstall_cmds old_postuninstall_cmds old_archive_cmds extract_expsyms_cmds old_archive_from_new_cmds old_archive_from_expsyms_cmds archive_cmds archive_expsym_cmds module_cmds module_expsym_cmds export_symbols_cmds prelink_cmds postinstall_cmds postuninstall_cmds finish_cmds sys_lib_search_path_spec sys_lib_dlsearch_path_spec old_archive_cmds_CXX old_archive_from_new_cmds_CXX old_archive_from_expsyms_cmds_CXX archive_cmds_CXX archive_expsym_cmds_CXX module_cmds_CXX module_expsym_cmds_CXX export_symbols_cmds_CXX prelink_cmds_CXX; do
    case `eval \\$ECHO "X\\$$var"` in
    *[\\\`\"\$]*)
      eval "lt_$var=\\\"\`\$ECHO \"X\$$var\" | \$Xsed -e \"\$double_quote_subst\" -e \"\$sed_quote_subst\" -e \"\$delay_variable_subst\"\`\\\""
      ;;
    *)
      eval "lt_$var=\\\"\$$var\\\""
      ;;
    esac
done

# Fix-up fallback echo if it was mangled by the above quoting rules.
case $lt_ECHO in
*'\$0 --fallback-echo"')  lt_ECHO=`$ECHO "X$lt_ECHO" | $Xsed -e 's/\\\\\\\$0 --fallback-echo"$/$0 --fallback-echo"/'`
  ;;
esac

ac_aux_dir='config'
xsi_shell='yes'
lt_shell_append='yes'

# See if we are running on zsh, and set the options which allow our
# commands through without removal of \ escapes INIT.
if test -n "${ZSH_VERSION+set}" ; then
   setopt NO_GLOB_SUBST
fi


    PACKAGE='drizzle7'
    VERSION='7'
    TIMESTAMP=''
    RM='rm -f'
    ofile='libtool'





# Capture the value of obsolete ALL_LINGUAS because we need it to compute
    # POFILES, UPDATEPOFILES, DUMMYPOFILES, GMOFILES, CATALOGS. But hide it
    # from automake < 1.5.
    eval 'OBSOLETE_ALL_LINGUAS''=""'
    # Capture the value of LINGUAS because we need it to compute CATALOGS.
    LINGUAS="%UNSET%"



# Handling of arguments.
for ac_config_target in $ac_config_targets
do
  case $ac_config_target in
    "config.h") CONFIG_HEADERS="$CONFIG_HEADERS config.h" ;;
    "depfiles") CONFIG_COMMANDS="$CONFIG_COMMANDS depfiles" ;;
    "libtool") CONFIG_COMMANDS="$CONFIG_COMMANDS libtool" ;;
    "po-directories") CONFIG_COMMANDS="$CONFIG_COMMANDS po-directories" ;;
    "po/Makefile.in") CONFIG_FILES="$CONFIG_FILES po/Makefile.in" ;;
    "drizzled/module/load_list.h") CONFIG_FILES="$CONFIG_FILES drizzled/module/load_list.h" ;;
    "Makefile") CONFIG_FILES="$CONFIG_FILES Makefile" ;;
    "tests/Makefile") CONFIG_FILES="$CONFIG_FILES tests/Makefile" ;;
    "drizzled/plugin/version.h") CONFIG_FILES="$CONFIG_FILES drizzled/plugin/version.h" ;;
    "support-files/drizzle7.pc") CONFIG_FILES="$CONFIG_FILES support-files/drizzle7.pc" ;;
    "support-files/libdrizzle-1.0.pc") CONFIG_FILES="$CONFIG_FILES support-files/libdrizzle-1.0.pc" ;;
    "support-files/libdrizzle-2.0.pc") CONFIG_FILES="$CONFIG_FILES support-files/libdrizzle-2.0.pc" ;;
    "support-files/smf/install.sh") CONFIG_FILES="$CONFIG_FILES support-files/smf/install.sh" ;;
    "support-files/smf/drizzle.xml") CONFIG_FILES="$CONFIG_FILES support-files/smf/drizzle.xml" ;;
    "support-files/smf/drizzle") CONFIG_FILES="$CONFIG_FILES support-files/smf/drizzle" ;;
    "po/stamp-it") CONFIG_COMMANDS="$CONFIG_COMMANDS po/stamp-it" ;;

  *) as_fn_error "invalid argument: \`$ac_config_target'" "$LINENO" 5;;
  esac
done


# If the user did not use the arguments to specify the items to instantiate,
# then the envvar interface is used.  Set only those that are not.
# We use the long form for the default assignment because of an extremely
# bizarre bug on SunOS 4.1.3.
if $ac_need_defaults; then
  test "${CONFIG_FILES+set}" = set || CONFIG_FILES=$config_files
  test "${CONFIG_HEADERS+set}" = set || CONFIG_HEADERS=$config_headers
  test "${CONFIG_COMMANDS+set}" = set || CONFIG_COMMANDS=$config_commands
fi

# Have a temporary directory for convenience.  Make it in the build tree
# simply because there is no reason against having it here, and in addition,
# creating and moving files from /tmp can sometimes cause problems.
# Hook for its removal unless debugging.
# Note that there is a small window in which the directory will not be cleaned:
# after its creation but before its name has been assigned to `$tmp'.
$debug ||
{
  tmp=
  trap 'exit_status=$?
  { test -z "$tmp" || test ! -d "$tmp" || rm -fr "$tmp"; } && exit $exit_status
' 0
  trap 'as_fn_exit 1' 1 2 13 15
}
# Create a (secure) tmp directory for tmp files.

{
  tmp=`(umask 077 && mktemp -d "./confXXXXXX") 2>/dev/null` &&
  test -n "$tmp" && test -d "$tmp"
}  ||
{
  tmp=./conf$$-$RANDOM
  (umask 077 && mkdir "$tmp")
} || as_fn_error "cannot create a temporary directory in ." "$LINENO" 5

# Set up the scripts for CONFIG_FILES section.
# No need to generate them if there are no CONFIG_FILES.
# This happens for instance with `./config.status config.h'.
if test -n "$CONFIG_FILES"; then


ac_cr=`echo X | tr X '\015'`
# On cygwin, bash can eat \r inside `` if the user requested igncr.
# But we know of no other shell where ac_cr would be empty at this
# point, so we can use a bashism as a fallback.
if test "x$ac_cr" = x; then
  eval ac_cr=\$\'\\r\'
fi
ac_cs_awk_cr=`$AWK 'BEGIN { print "a\rb" }' </dev/null 2>/dev/null`
if test "$ac_cs_awk_cr" = "a${ac_cr}b"; then
  ac_cs_awk_cr='\r'
else
  ac_cs_awk_cr=$ac_cr
fi

echo 'BEGIN {' >"$tmp/subs1.awk" &&
cat >>"$tmp/subs1.awk" <<\_ACAWK &&
S["am__EXEEXT_FALSE"]=""
S["am__EXEEXT_TRUE"]="#"
S["LTLIBOBJS"]=""
S["LIBOBJS"]=""
S["BUILD_GCC_PCH_FALSE"]=""
S["BUILD_GCC_PCH_TRUE"]="#"
S["pkgplugindir"]="$(pkglibdir)"
S["PANDORA_PLUGIN_DEP_LIBS"]="  -lcurl -lldap    ${top_builddir}/drizzled/algorithm/libhash.la    -lcurl  ${top_builddir}/plugin/innobase/libinnobase.la   ${top_builddir}/plugin/"\
"memory/libheap.la ${top_builddir}/plugin/myisam/libmyisam.la ${top_builddir}/drizzled/internal/libinternal.la ${top_builddir}/drizzled/algorithm/lib"\
"hash.la ${top_builddir}/drizzled/algorithm/libhash.la -lcurl             ${top_builddir}//drizzled/algorithm/libhash.la   -luuid"
S["pandora_plugin_defs"]=""
S["pandora_plugin_libs"]=" ${top_builddir}/plugin/libauth_all_plugin.la ${top_builddir}/plugin/libcatalog_plugin.la ${top_builddir}/plugin/libcollation_dictionary_plugin.la $"\
"{top_builddir}/plugin/libconsole_plugin.la ${top_builddir}/plugin/libdrizzle_protocol_plugin.la ${top_builddir}/plugin/liberror_dictionary_plugin.la"\
" ${top_builddir}/plugin/libfunction_engine_plugin.la ${top_builddir}/plugin/libinformation_schema_dictionary_plugin.la ${top_builddir}/plugin/libinn"\
"obase_plugin.la ${top_builddir}/plugin/libmath_functions_plugin.la ${top_builddir}/plugin/libmemory_plugin.la ${top_builddir}/plugin/libmyisam_plugi"\
"n.la ${top_builddir}/plugin/libmysql_protocol_plugin.la ${top_builddir}/plugin/libmysql_unix_socket_protocol_plugin.la ${top_builddir}/plugin/libpro"\
"tocol_dictionary_plugin.la ${top_builddir}/plugin/libregistry_dictionary_plugin.la ${top_builddir}/plugin/libreplication_dictionary_plugin.la ${top_"\
"builddir}/plugin/libschema_dictionary_plugin.la ${top_builddir}/plugin/libschema_engine_plugin.la ${top_builddir}/plugin/libsession_dictionary_plugi"\
"n.la ${top_builddir}/plugin/libshow_dictionary_plugin.la ${top_builddir}/plugin/libsignal_handler_plugin.la ${top_builddir}/plugin/libsleep_plugin.l"\
"a ${top_builddir}/plugin/libstatus_dictionary_plugin.la ${top_builddir}/plugin/libstring_functions_plugin.la ${top_builddir}/plugin/libtable_cache_d"\
"ictionary_plugin.la ${top_builddir}/plugin/libtransaction_log_plugin.la ${top_builddir}/plugin/libuser_locks_plugin.la ${top_builddir}/plugin/libuti"\
"lity_functions_plugin.la"
S["pandora_plugin_test_list"]="utility_functions,utility_dictionary,user_locks,trigger_dictionary,transaction_log,tableprototester,table_cache_dictionary,string_functions,storage_"\
"engine_api_tester,status_dictionary,sleep,slave,simple_user_policy,show_schema_proto,show_dictionary,session_dictionary,schema_engine,schema_diction"\
"ary,replication_dictionary,registry_dictionary,regex_policy,rand_function,performance_dictionary,pbms,mysql_protocol,myisam,memory,md5,logging_stats"\
",json_server,innobase,information_schema_dictionary,hello_world,hello_events,function_dictionary,filtered_replicator,error_dictionary,errmsg_stderr,"\
"debug,crc32,collation_dictionary,catalog,auth_test,auth_file,"
S["PANDORA_PLUGIN_LIST"]="version,uuid_function,syslog,substr_functions,show_schema_proto,reverse_function,rand_function,multi_thread,md5,logging_stats,length,hex_functions,e"\
"rrmsg_stderr,default_replicator,crc32,connection_id,compression,charlength,benchmark,ascii,"
S["PANDORA_BUILTIN_LOAD_SYMBOLS_LIST"]="_drizzled_utility_functions_plugin_,_drizzled_user_locks_plugin_,_drizzled_transaction_log_plugin_,_drizzled_table_cache_dictionary_plugin_,_drizzle"\
"d_string_functions_plugin_,_drizzled_status_dictionary_plugin_,_drizzled_sleep_plugin_,_drizzled_signal_handler_plugin_,_drizzled_show_dictionary_pl"\
"ugin_,_drizzled_session_dictionary_plugin_,_drizzled_schema_engine_plugin_,_drizzled_schema_dictionary_plugin_,_drizzled_replication_dictionary_plug"\
"in_,_drizzled_registry_dictionary_plugin_,_drizzled_protocol_dictionary_plugin_,_drizzled_mysql_unix_socket_protocol_plugin_,_drizzled_mysql_protoco"\
"l_plugin_,_drizzled_myisam_plugin_,_drizzled_memory_plugin_,_drizzled_math_functions_plugin_,_drizzled_innobase_plugin_,_drizzled_information_schema"\
"_dictionary_plugin_,_drizzled_function_engine_plugin_,_drizzled_error_dictionary_plugin_,_drizzled_drizzle_protocol_plugin_,_drizzled_console_plugin"\
"_,_drizzled_collation_dictionary_plugin_,_drizzled_catalog_plugin_,_drizzled_auth_all_plugin_"
S["PANDORA_BUILTIN_LOAD_LIST"]="utility_functions,user_locks,transaction_log,table_cache_dictionary,string_functions,status_dictionary,sleep,signal_handler,show_dictionary,session_"\
"dictionary,schema_engine,schema_dictionary,replication_dictionary,registry_dictionary,protocol_dictionary,mysql_unix_socket_protocol,mysql_protocol,"\
"myisam,memory,math_functions,innobase,information_schema_dictionary,function_engine,error_dictionary,drizzle_protocol,console,collation_dictionary,c"\
"atalog,auth_all"
S["PANDORA_BUILTIN_SYMBOLS_LIST"]="_drizzled_utility_functions_plugin_,_drizzled_user_locks_plugin_,_drizzled_transaction_log_plugin_,_drizzled_table_cache_dictionary_plugin_,_drizzle"\
"d_string_functions_plugin_,_drizzled_status_dictionary_plugin_,_drizzled_sleep_plugin_,_drizzled_signal_handler_plugin_,_drizzled_show_dictionary_pl"\
"ugin_,_drizzled_session_dictionary_plugin_,_drizzled_schema_engine_plugin_,_drizzled_schema_dictionary_plugin_,_drizzled_replication_dictionary_plug"\
"in_,_drizzled_registry_dictionary_plugin_,_drizzled_protocol_dictionary_plugin_,_drizzled_mysql_unix_socket_protocol_plugin_,_drizzled_mysql_protoco"\
"l_plugin_,_drizzled_myisam_plugin_,_drizzled_memory_plugin_,_drizzled_math_functions_plugin_,_drizzled_innobase_plugin_,_drizzled_information_schema"\
"_dictionary_plugin_,_drizzled_function_engine_plugin_,_drizzled_error_dictionary_plugin_,_drizzled_drizzle_protocol_plugin_,_drizzled_console_plugin"\
"_,_drizzled_collation_dictionary_plugin_,_drizzled_catalog_plugin_,_drizzled_auth_all_plugin_"
S["PANDORA_BUILTIN_LIST"]="utility_functions,user_locks,transaction_log,table_cache_dictionary,string_functions,status_dictionary,sleep,signal_handler,show_dictionary,session_"\
"dictionary,schema_engine,schema_dictionary,replication_dictionary,registry_dictionary,protocol_dictionary,mysql_unix_socket_protocol,mysql_protocol,"\
"myisam,memory,math_functions,innobase,information_schema_dictionary,function_engine,error_dictionary,drizzle_protocol,console,collation_dictionary,c"\
"atalog,auth_all"
S["BUILD_VERSION_PLUGIN_FALSE"]="#"
S["BUILD_VERSION_PLUGIN_TRUE"]=""
S["BUILD_VERSION_PLUGIN_SHARED_FALSE"]="#"
S["BUILD_VERSION_PLUGIN_SHARED_TRUE"]=""
S["BUILD_VERSION_PLUGIN_STATIC_FALSE"]=""
S["BUILD_VERSION_PLUGIN_STATIC_TRUE"]="#"
S["BUILD_UUID_FUNCTION_PLUGIN_FALSE"]="#"
S["BUILD_UUID_FUNCTION_PLUGIN_TRUE"]=""
S["BUILD_UUID_FUNCTION_PLUGIN_SHARED_FALSE"]="#"
S["BUILD_UUID_FUNCTION_PLUGIN_SHARED_TRUE"]=""
S["BUILD_UUID_FUNCTION_PLUGIN_STATIC_FALSE"]=""
S["BUILD_UUID_FUNCTION_PLUGIN_STATIC_TRUE"]="#"
S["BUILD_UTILITY_FUNCTIONS_PLUGIN_FALSE"]="#"
S["BUILD_UTILITY_FUNCTIONS_PLUGIN_TRUE"]=""
S["BUILD_UTILITY_FUNCTIONS_PLUGIN_SHARED_FALSE"]=""
S["BUILD_UTILITY_FUNCTIONS_PLUGIN_SHARED_TRUE"]="#"
S["BUILD_UTILITY_FUNCTIONS_PLUGIN_STATIC_FALSE"]="#"
S["BUILD_UTILITY_FUNCTIONS_PLUGIN_STATIC_TRUE"]=""
S["BUILD_UTILITY_DICTIONARY_PLUGIN_FALSE"]="#"
S["BUILD_UTILITY_DICTIONARY_PLUGIN_TRUE"]=""
S["BUILD_UTILITY_DICTIONARY_PLUGIN_SHARED_FALSE"]="#"
S["BUILD_UTILITY_DICTIONARY_PLUGIN_SHARED_TRUE"]=""
S["BUILD_UTILITY_DICTIONARY_PLUGIN_STATIC_FALSE"]=""
S["BUILD_UTILITY_DICTIONARY_PLUGIN_STATIC_TRUE"]="#"
S["BUILD_USER_LOCKS_PLUGIN_FALSE"]="#"
S["BUILD_USER_LOCKS_PLUGIN_TRUE"]=""
S["BUILD_USER_LOCKS_PLUGIN_SHARED_FALSE"]=""
S["BUILD_USER_LOCKS_PLUGIN_SHARED_TRUE"]="#"
S["BUILD_USER_LOCKS_PLUGIN_STATIC_FALSE"]="#"
S["BUILD_USER_LOCKS_PLUGIN_STATIC_TRUE"]=""
S["BUILD_TRIGGER_DICTIONARY_PLUGIN_FALSE"]="#"
S["BUILD_TRIGGER_DICTIONARY_PLUGIN_TRUE"]=""
S["BUILD_TRIGGER_DICTIONARY_PLUGIN_SHARED_FALSE"]="#"
S["BUILD_TRIGGER_DICTIONARY_PLUGIN_SHARED_TRUE"]=""
S["BUILD_TRIGGER_DICTIONARY_PLUGIN_STATIC_FALSE"]=""
S["BUILD_TRIGGER_DICTIONARY_PLUGIN_STATIC_TRUE"]="#"
S["BUILD_TRANSACTION_LOG_PLUGIN_FALSE"]="#"
S["BUILD_TRANSACTION_LOG_PLUGIN_TRUE"]=""
S["BUILD_TRANSACTION_LOG_PLUGIN_SHARED_FALSE"]=""
S["BUILD_TRANSACTION_LOG_PLUGIN_SHARED_TRUE"]="#"
S["BUILD_TRANSACTION_LOG_PLUGIN_STATIC_FALSE"]="#"
S["BUILD_TRANSACTION_LOG_PLUGIN_STATIC_TRUE"]=""
S["BUILD_TABLEPROTOTESTER_PLUGIN_FALSE"]="#"
S["BUILD_TABLEPROTOTESTER_PLUGIN_TRUE"]=""
S["BUILD_TABLEPROTOTESTER_PLUGIN_SHARED_FALSE"]="#"
S["BUILD_TABLEPROTOTESTER_PLUGIN_SHARED_TRUE"]=""
S["BUILD_TABLEPROTOTESTER_PLUGIN_STATIC_FALSE"]=""
S["BUILD_TABLEPROTOTESTER_PLUGIN_STATIC_TRUE"]="#"
S["BUILD_TABLE_CACHE_DICTIONARY_PLUGIN_FALSE"]="#"
S["BUILD_TABLE_CACHE_DICTIONARY_PLUGIN_TRUE"]=""
S["BUILD_TABLE_CACHE_DICTIONARY_PLUGIN_SHARED_FALSE"]=""
S["BUILD_TABLE_CACHE_DICTIONARY_PLUGIN_SHARED_TRUE"]="#"
S["BUILD_TABLE_CACHE_DICTIONARY_PLUGIN_STATIC_FALSE"]="#"
S["BUILD_TABLE_CACHE_DICTIONARY_PLUGIN_STATIC_TRUE"]=""
S["BUILD_SYSLOG_PLUGIN_FALSE"]="#"
S["BUILD_SYSLOG_PLUGIN_TRUE"]=""
S["BUILD_SYSLOG_PLUGIN_SHARED_FALSE"]="#"
S["BUILD_SYSLOG_PLUGIN_SHARED_TRUE"]=""
S["BUILD_SYSLOG_PLUGIN_STATIC_FALSE"]=""
S["BUILD_SYSLOG_PLUGIN_STATIC_TRUE"]="#"
S["BUILD_SUBSTR_FUNCTIONS_PLUGIN_FALSE"]="#"
S["BUILD_SUBSTR_FUNCTIONS_PLUGIN_TRUE"]=""
S["BUILD_SUBSTR_FUNCTIONS_PLUGIN_SHARED_FALSE"]="#"
S["BUILD_SUBSTR_FUNCTIONS_PLUGIN_SHARED_TRUE"]=""
S["BUILD_SUBSTR_FUNCTIONS_PLUGIN_STATIC_FALSE"]=""
S["BUILD_SUBSTR_FUNCTIONS_PLUGIN_STATIC_TRUE"]="#"
S["BUILD_STRING_FUNCTIONS_PLUGIN_FALSE"]="#"
S["BUILD_STRING_FUNCTIONS_PLUGIN_TRUE"]=""
S["BUILD_STRING_FUNCTIONS_PLUGIN_SHARED_FALSE"]=""
S["BUILD_STRING_FUNCTIONS_PLUGIN_SHARED_TRUE"]="#"
S["BUILD_STRING_FUNCTIONS_PLUGIN_STATIC_FALSE"]="#"
S["BUILD_STRING_FUNCTIONS_PLUGIN_STATIC_TRUE"]=""
S["BUILD_STORAGE_ENGINE_API_TESTER_PLUGIN_FALSE"]="#"
S["BUILD_STORAGE_ENGINE_API_TESTER_PLUGIN_TRUE"]=""
S["BUILD_STORAGE_ENGINE_API_TESTER_PLUGIN_SHARED_FALSE"]="#"
S["BUILD_STORAGE_ENGINE_API_TESTER_PLUGIN_SHARED_TRUE"]=""
S["BUILD_STORAGE_ENGINE_API_TESTER_PLUGIN_STATIC_FALSE"]=""
S["BUILD_STORAGE_ENGINE_API_TESTER_PLUGIN_STATIC_TRUE"]="#"
S["BUILD_STATUS_DICTIONARY_PLUGIN_FALSE"]="#"
S["BUILD_STATUS_DICTIONARY_PLUGIN_TRUE"]=""
S["BUILD_STATUS_DICTIONARY_PLUGIN_SHARED_FALSE"]=""
S["BUILD_STATUS_DICTIONARY_PLUGIN_SHARED_TRUE"]="#"
S["BUILD_STATUS_DICTIONARY_PLUGIN_STATIC_FALSE"]="#"
S["BUILD_STATUS_DICTIONARY_PLUGIN_STATIC_TRUE"]=""
S["BUILD_SLEEP_PLUGIN_FALSE"]="#"
S["BUILD_SLEEP_PLUGIN_TRUE"]=""
S["BUILD_SLEEP_PLUGIN_SHARED_FALSE"]=""
S["BUILD_SLEEP_PLUGIN_SHARED_TRUE"]="#"
S["BUILD_SLEEP_PLUGIN_STATIC_FALSE"]="#"
S["BUILD_SLEEP_PLUGIN_STATIC_TRUE"]=""
S["BUILD_SLAVE_PLUGIN_FALSE"]="#"
S["BUILD_SLAVE_PLUGIN_TRUE"]=""
S["BUILD_SLAVE_PLUGIN_SHARED_FALSE"]="#"
S["BUILD_SLAVE_PLUGIN_SHARED_TRUE"]=""
S["BUILD_SLAVE_PLUGIN_STATIC_FALSE"]=""
S["BUILD_SLAVE_PLUGIN_STATIC_TRUE"]="#"
S["BUILD_SIMPLE_USER_POLICY_PLUGIN_FALSE"]="#"
S["BUILD_SIMPLE_USER_POLICY_PLUGIN_TRUE"]=""
S["BUILD_SIMPLE_USER_POLICY_PLUGIN_SHARED_FALSE"]="#"
S["BUILD_SIMPLE_USER_POLICY_PLUGIN_SHARED_TRUE"]=""
S["BUILD_SIMPLE_USER_POLICY_PLUGIN_STATIC_FALSE"]=""
S["BUILD_SIMPLE_USER_POLICY_PLUGIN_STATIC_TRUE"]="#"
S["BUILD_SIGNAL_HANDLER_PLUGIN_FALSE"]="#"
S["BUILD_SIGNAL_HANDLER_PLUGIN_TRUE"]=""
S["BUILD_SIGNAL_HANDLER_PLUGIN_SHARED_FALSE"]=""
S["BUILD_SIGNAL_HANDLER_PLUGIN_SHARED_TRUE"]="#"
S["BUILD_SIGNAL_HANDLER_PLUGIN_STATIC_FALSE"]="#"
S["BUILD_SIGNAL_HANDLER_PLUGIN_STATIC_TRUE"]=""
S["BUILD_SHUTDOWN_FUNCTION_PLUGIN_FALSE"]="#"
S["BUILD_SHUTDOWN_FUNCTION_PLUGIN_TRUE"]=""
S["BUILD_SHUTDOWN_FUNCTION_PLUGIN_SHARED_FALSE"]="#"
S["BUILD_SHUTDOWN_FUNCTION_PLUGIN_SHARED_TRUE"]=""
S["BUILD_SHUTDOWN_FUNCTION_PLUGIN_STATIC_FALSE"]=""
S["BUILD_SHUTDOWN_FUNCTION_PLUGIN_STATIC_TRUE"]="#"
S["BUILD_SHOW_SCHEMA_PROTO_PLUGIN_FALSE"]="#"
S["BUILD_SHOW_SCHEMA_PROTO_PLUGIN_TRUE"]=""
S["BUILD_SHOW_SCHEMA_PROTO_PLUGIN_SHARED_FALSE"]="#"
S["BUILD_SHOW_SCHEMA_PROTO_PLUGIN_SHARED_TRUE"]=""
S["BUILD_SHOW_SCHEMA_PROTO_PLUGIN_STATIC_FALSE"]=""
S["BUILD_SHOW_SCHEMA_PROTO_PLUGIN_STATIC_TRUE"]="#"
S["BUILD_SHOW_DICTIONARY_PLUGIN_FALSE"]="#"
S["BUILD_SHOW_DICTIONARY_PLUGIN_TRUE"]=""
S["BUILD_SHOW_DICTIONARY_PLUGIN_SHARED_FALSE"]=""
S["BUILD_SHOW_DICTIONARY_PLUGIN_SHARED_TRUE"]="#"
S["BUILD_SHOW_DICTIONARY_PLUGIN_STATIC_FALSE"]="#"
S["BUILD_SHOW_DICTIONARY_PLUGIN_STATIC_TRUE"]=""
S["BUILD_SESSION_DICTIONARY_PLUGIN_FALSE"]="#"
S["BUILD_SESSION_DICTIONARY_PLUGIN_TRUE"]=""
S["BUILD_SESSION_DICTIONARY_PLUGIN_SHARED_FALSE"]=""
S["BUILD_SESSION_DICTIONARY_PLUGIN_SHARED_TRUE"]="#"
S["BUILD_SESSION_DICTIONARY_PLUGIN_STATIC_FALSE"]="#"
S["BUILD_SESSION_DICTIONARY_PLUGIN_STATIC_TRUE"]=""
S["BUILD_SCHEMA_ENGINE_PLUGIN_FALSE"]="#"
S["BUILD_SCHEMA_ENGINE_PLUGIN_TRUE"]=""
S["BUILD_SCHEMA_ENGINE_PLUGIN_SHARED_FALSE"]=""
S["BUILD_SCHEMA_ENGINE_PLUGIN_SHARED_TRUE"]="#"
S["BUILD_SCHEMA_ENGINE_PLUGIN_STATIC_FALSE"]="#"
S["BUILD_SCHEMA_ENGINE_PLUGIN_STATIC_TRUE"]=""
S["BUILD_SCHEMA_DICTIONARY_PLUGIN_FALSE"]="#"
S["BUILD_SCHEMA_DICTIONARY_PLUGIN_TRUE"]=""
S["BUILD_SCHEMA_DICTIONARY_PLUGIN_SHARED_FALSE"]=""
S["BUILD_SCHEMA_DICTIONARY_PLUGIN_SHARED_TRUE"]="#"
S["BUILD_SCHEMA_DICTIONARY_PLUGIN_STATIC_FALSE"]="#"
S["BUILD_SCHEMA_DICTIONARY_PLUGIN_STATIC_TRUE"]=""
S["BUILD_REVERSE_FUNCTION_PLUGIN_FALSE"]="#"
S["BUILD_REVERSE_FUNCTION_PLUGIN_TRUE"]=""
S["BUILD_REVERSE_FUNCTION_PLUGIN_SHARED_FALSE"]="#"
S["BUILD_REVERSE_FUNCTION_PLUGIN_SHARED_TRUE"]=""
S["BUILD_REVERSE_FUNCTION_PLUGIN_STATIC_FALSE"]=""
S["BUILD_REVERSE_FUNCTION_PLUGIN_STATIC_TRUE"]="#"
S["BUILD_REPLICATION_DICTIONARY_PLUGIN_FALSE"]="#"
S["BUILD_REPLICATION_DICTIONARY_PLUGIN_TRUE"]=""
S["BUILD_REPLICATION_DICTIONARY_PLUGIN_SHARED_FALSE"]=""
S["BUILD_REPLICATION_DICTIONARY_PLUGIN_SHARED_TRUE"]="#"
S["BUILD_REPLICATION_DICTIONARY_PLUGIN_STATIC_FALSE"]="#"
S["BUILD_REPLICATION_DICTIONARY_PLUGIN_STATIC_TRUE"]=""
S["BUILD_REGISTRY_DICTIONARY_PLUGIN_FALSE"]="#"
S["BUILD_REGISTRY_DICTIONARY_PLUGIN_TRUE"]=""
S["BUILD_REGISTRY_DICTIONARY_PLUGIN_SHARED_FALSE"]=""
S["BUILD_REGISTRY_DICTIONARY_PLUGIN_SHARED_TRUE"]="#"
S["BUILD_REGISTRY_DICTIONARY_PLUGIN_STATIC_FALSE"]="#"
S["BUILD_REGISTRY_DICTIONARY_PLUGIN_STATIC_TRUE"]=""
S["BUILD_REGEX_POLICY_PLUGIN_FALSE"]="#"
S["BUILD_REGEX_POLICY_PLUGIN_TRUE"]=""
S["BUILD_REGEX_POLICY_PLUGIN_SHARED_FALSE"]="#"
S["BUILD_REGEX_POLICY_PLUGIN_SHARED_TRUE"]=""
S["BUILD_REGEX_POLICY_PLUGIN_STATIC_FALSE"]=""
S["BUILD_REGEX_POLICY_PLUGIN_STATIC_TRUE"]="#"
S["BUILD_RAND_FUNCTION_PLUGIN_FALSE"]="#"
S["BUILD_RAND_FUNCTION_PLUGIN_TRUE"]=""
S["BUILD_RAND_FUNCTION_PLUGIN_SHARED_FALSE"]="#"
S["BUILD_RAND_FUNCTION_PLUGIN_SHARED_TRUE"]=""
S["BUILD_RAND_FUNCTION_PLUGIN_STATIC_FALSE"]=""
S["BUILD_RAND_FUNCTION_PLUGIN_STATIC_TRUE"]="#"
S["BUILD_RABBITMQ_PLUGIN_FALSE"]=""
S["BUILD_RABBITMQ_PLUGIN_TRUE"]="#"
S["BUILD_RABBITMQ_PLUGIN_SHARED_FALSE"]=""
S["BUILD_RABBITMQ_PLUGIN_SHARED_TRUE"]="#"
S["BUILD_RABBITMQ_PLUGIN_STATIC_FALSE"]=""
S["BUILD_RABBITMQ_PLUGIN_STATIC_TRUE"]="#"
S["RABBITMQ_BINARY"]="no"
S["LIBRABBITMQ_PREFIX"]=""
S["LTLIBRABBITMQ"]=""
S["LIBRABBITMQ"]=""
S["HAVE_LIBRABBITMQ"]="no"
S["BUILD_PROTOCOL_DICTIONARY_PLUGIN_FALSE"]="#"
S["BUILD_PROTOCOL_DICTIONARY_PLUGIN_TRUE"]=""
S["BUILD_PROTOCOL_DICTIONARY_PLUGIN_SHARED_FALSE"]=""
S["BUILD_PROTOCOL_DICTIONARY_PLUGIN_SHARED_TRUE"]="#"
S["BUILD_PROTOCOL_DICTIONARY_PLUGIN_STATIC_FALSE"]="#"
S["BUILD_PROTOCOL_DICTIONARY_PLUGIN_STATIC_TRUE"]=""
S["BUILD_PERFORMANCE_DICTIONARY_PLUGIN_FALSE"]="#"
S["BUILD_PERFORMANCE_DICTIONARY_PLUGIN_TRUE"]=""
S["BUILD_PERFORMANCE_DICTIONARY_PLUGIN_SHARED_FALSE"]="#"
S["BUILD_PERFORMANCE_DICTIONARY_PLUGIN_SHARED_TRUE"]=""
S["BUILD_PERFORMANCE_DICTIONARY_PLUGIN_STATIC_FALSE"]=""
S["BUILD_PERFORMANCE_DICTIONARY_PLUGIN_STATIC_TRUE"]="#"
S["BUILD_PBMS_PLUGIN_FALSE"]="#"
S["BUILD_PBMS_PLUGIN_TRUE"]=""
S["BUILD_PBMS_PLUGIN_SHARED_FALSE"]="#"
S["BUILD_PBMS_PLUGIN_SHARED_TRUE"]=""
S["BUILD_PBMS_PLUGIN_STATIC_FALSE"]=""
S["BUILD_PBMS_PLUGIN_STATIC_TRUE"]="#"
S["BUILD_MYSQL_UNIX_SOCKET_PROTOCOL_PLUGIN_FALSE"]="#"
S["BUILD_MYSQL_UNIX_SOCKET_PROTOCOL_PLUGIN_TRUE"]=""
S["BUILD_MYSQL_UNIX_SOCKET_PROTOCOL_PLUGIN_SHARED_FALSE"]=""
S["BUILD_MYSQL_UNIX_SOCKET_PROTOCOL_PLUGIN_SHARED_TRUE"]="#"
S["BUILD_MYSQL_UNIX_SOCKET_PROTOCOL_PLUGIN_STATIC_FALSE"]="#"
S["BUILD_MYSQL_UNIX_SOCKET_PROTOCOL_PLUGIN_STATIC_TRUE"]=""
S["BUILD_MYSQL_PROTOCOL_PLUGIN_FALSE"]="#"
S["BUILD_MYSQL_PROTOCOL_PLUGIN_TRUE"]=""
S["BUILD_MYSQL_PROTOCOL_PLUGIN_SHARED_FALSE"]=""
S["BUILD_MYSQL_PROTOCOL_PLUGIN_SHARED_TRUE"]="#"
S["BUILD_MYSQL_PROTOCOL_PLUGIN_STATIC_FALSE"]="#"
S["BUILD_MYSQL_PROTOCOL_PLUGIN_STATIC_TRUE"]=""
S["BUILD_MYISAM_PLUGIN_FALSE"]="#"
S["BUILD_MYISAM_PLUGIN_TRUE"]=""
S["BUILD_MYISAM_PLUGIN_SHARED_FALSE"]=""
S["BUILD_MYISAM_PLUGIN_SHARED_TRUE"]="#"
S["BUILD_MYISAM_PLUGIN_STATIC_FALSE"]="#"
S["BUILD_MYISAM_PLUGIN_STATIC_TRUE"]=""
S["BUILD_MULTI_THREAD_PLUGIN_FALSE"]="#"
S["BUILD_MULTI_THREAD_PLUGIN_TRUE"]=""
S["BUILD_MULTI_THREAD_PLUGIN_SHARED_FALSE"]="#"
S["BUILD_MULTI_THREAD_PLUGIN_SHARED_TRUE"]=""
S["BUILD_MULTI_THREAD_PLUGIN_STATIC_FALSE"]=""
S["BUILD_MULTI_THREAD_PLUGIN_STATIC_TRUE"]="#"
S["BUILD_MEMORY_PLUGIN_FALSE"]="#"
S["BUILD_MEMORY_PLUGIN_TRUE"]=""
S["BUILD_MEMORY_PLUGIN_SHARED_FALSE"]=""
S["BUILD_MEMORY_PLUGIN_SHARED_TRUE"]="#"
S["BUILD_MEMORY_PLUGIN_STATIC_FALSE"]="#"
S["BUILD_MEMORY_PLUGIN_STATIC_TRUE"]=""
S["BUILD_MEMCACHED_STATS_PLUGIN_FALSE"]=""
S["BUILD_MEMCACHED_STATS_PLUGIN_TRUE"]="#"
S["BUILD_MEMCACHED_STATS_PLUGIN_SHARED_FALSE"]=""
S["BUILD_MEMCACHED_STATS_PLUGIN_SHARED_TRUE"]="#"
S["BUILD_MEMCACHED_STATS_PLUGIN_STATIC_FALSE"]=""
S["BUILD_MEMCACHED_STATS_PLUGIN_STATIC_TRUE"]="#"
S["BUILD_MEMCACHED_FUNCTIONS_PLUGIN_FALSE"]=""
S["BUILD_MEMCACHED_FUNCTIONS_PLUGIN_TRUE"]="#"
S["BUILD_MEMCACHED_FUNCTIONS_PLUGIN_SHARED_FALSE"]=""
S["BUILD_MEMCACHED_FUNCTIONS_PLUGIN_SHARED_TRUE"]="#"
S["BUILD_MEMCACHED_FUNCTIONS_PLUGIN_STATIC_FALSE"]=""
S["BUILD_MEMCACHED_FUNCTIONS_PLUGIN_STATIC_TRUE"]="#"
S["HAVE_MEMCACHED_FALSE"]=""
S["HAVE_MEMCACHED_TRUE"]="#"
S["MEMCACHED_BINARY"]="no"
S["HAVE_LIBMEMCACHED_FALSE"]=""
S["HAVE_LIBMEMCACHED_TRUE"]="#"
S["LIBMEMCACHEDPROTOCOL_PREFIX"]=""
S["LTLIBMEMCACHEDPROTOCOL"]=""
S["LIBMEMCACHEDPROTOCOL"]=""
S["HAVE_LIBMEMCACHEDPROTOCOL"]="no"
S["LIBMEMCACHED_PREFIX"]=""
S["LTLIBMEMCACHED"]=""
S["LIBMEMCACHED"]=""
S["HAVE_LIBMEMCACHED"]="no"
S["BUILD_MD5_PLUGIN_FALSE"]="#"
S["BUILD_MD5_PLUGIN_TRUE"]=""
S["BUILD_MD5_PLUGIN_SHARED_FALSE"]="#"
S["BUILD_MD5_PLUGIN_SHARED_TRUE"]=""
S["BUILD_MD5_PLUGIN_STATIC_FALSE"]=""
S["BUILD_MD5_PLUGIN_STATIC_TRUE"]="#"
S["LIBGCRYPT_PREFIX"]=""
S["LTLIBGCRYPT"]="-lgcrypt"
S["LIBGCRYPT"]="-lgcrypt"
S["HAVE_LIBGCRYPT"]="yes"
S["BUILD_MATH_FUNCTIONS_PLUGIN_FALSE"]="#"
S["BUILD_MATH_FUNCTIONS_PLUGIN_TRUE"]=""
S["BUILD_MATH_FUNCTIONS_PLUGIN_SHARED_FALSE"]=""
S["BUILD_MATH_FUNCTIONS_PLUGIN_SHARED_TRUE"]="#"
S["BUILD_MATH_FUNCTIONS_PLUGIN_STATIC_FALSE"]="#"
S["BUILD_MATH_FUNCTIONS_PLUGIN_STATIC_TRUE"]=""
S["BUILD_LOGGING_STATS_PLUGIN_FALSE"]="#"
S["BUILD_LOGGING_STATS_PLUGIN_TRUE"]=""
S["BUILD_LOGGING_STATS_PLUGIN_SHARED_FALSE"]="#"
S["BUILD_LOGGING_STATS_PLUGIN_SHARED_TRUE"]=""
S["BUILD_LOGGING_STATS_PLUGIN_STATIC_FALSE"]=""
S["BUILD_LOGGING_STATS_PLUGIN_STATIC_TRUE"]="#"
S["BUILD_LOGGING_QUERY_PLUGIN_FALSE"]="#"
S["BUILD_LOGGING_QUERY_PLUGIN_TRUE"]=""
S["BUILD_LOGGING_QUERY_PLUGIN_SHARED_FALSE"]="#"
S["BUILD_LOGGING_QUERY_PLUGIN_SHARED_TRUE"]=""
S["BUILD_LOGGING_QUERY_PLUGIN_STATIC_FALSE"]=""
S["BUILD_LOGGING_QUERY_PLUGIN_STATIC_TRUE"]="#"
S["BUILD_LOGGING_GEARMAN_PLUGIN_FALSE"]=""
S["BUILD_LOGGING_GEARMAN_PLUGIN_TRUE"]="#"
S["BUILD_LOGGING_GEARMAN_PLUGIN_SHARED_FALSE"]=""
S["BUILD_LOGGING_GEARMAN_PLUGIN_SHARED_TRUE"]="#"
S["BUILD_LOGGING_GEARMAN_PLUGIN_STATIC_FALSE"]=""
S["BUILD_LOGGING_GEARMAN_PLUGIN_STATIC_TRUE"]="#"
S["BUILD_LENGTH_PLUGIN_FALSE"]="#"
S["BUILD_LENGTH_PLUGIN_TRUE"]=""
S["BUILD_LENGTH_PLUGIN_SHARED_FALSE"]="#"
S["BUILD_LENGTH_PLUGIN_SHARED_TRUE"]=""
S["BUILD_LENGTH_PLUGIN_STATIC_FALSE"]=""
S["BUILD_LENGTH_PLUGIN_STATIC_TRUE"]="#"
S["BUILD_JSON_SERVER_PLUGIN_FALSE"]="#"
S["BUILD_JSON_SERVER_PLUGIN_TRUE"]=""
S["BUILD_JSON_SERVER_PLUGIN_SHARED_FALSE"]="#"
S["BUILD_JSON_SERVER_PLUGIN_SHARED_TRUE"]=""
S["BUILD_JSON_SERVER_PLUGIN_STATIC_FALSE"]=""
S["BUILD_JSON_SERVER_PLUGIN_STATIC_TRUE"]="#"
S["HAVE_LIBEVENT_FALSE"]="#"
S["HAVE_LIBEVENT_TRUE"]=""
S["LIBEVENT_PREFIX"]=""
S["LTLIBEVENT"]="-levent"
S["LIBEVENT"]="-levent"
S["HAVE_LIBEVENT"]="yes"
S["BUILD_INNOBASE_PLUGIN_FALSE"]="#"
S["BUILD_INNOBASE_PLUGIN_TRUE"]=""
S["BUILD_INNOBASE_PLUGIN_SHARED_FALSE"]=""
S["BUILD_INNOBASE_PLUGIN_SHARED_TRUE"]="#"
S["BUILD_INNOBASE_PLUGIN_STATIC_FALSE"]="#"
S["BUILD_INNOBASE_PLUGIN_STATIC_TRUE"]=""
S["INNODB_DYNAMIC_CFLAGS"]="-DPANDORA_DYNAMIC_PLUGIN"
S["innodb_system_libs"]="-lrt"
S["HAVE_LIBAIO_FALSE"]="#"
S["HAVE_LIBAIO_TRUE"]=""
S["LIBAIO_PREFIX"]=""
S["LTLIBAIO"]="-laio"
S["LIBAIO"]="-laio"
S["HAVE_LIBAIO"]="yes"
S["HAVE_FLEX_FALSE"]="#"
S["HAVE_FLEX_TRUE"]=""
S["LEX"]="flex"
S["BUILD_INFORMATION_SCHEMA_DICTIONARY_PLUGIN_FALSE"]="#"
S["BUILD_INFORMATION_SCHEMA_DICTIONARY_PLUGIN_TRUE"]=""
S["BUILD_INFORMATION_SCHEMA_DICTIONARY_PLUGIN_SHARED_FALSE"]=""
S["BUILD_INFORMATION_SCHEMA_DICTIONARY_PLUGIN_SHARED_TRUE"]="#"
S["BUILD_INFORMATION_SCHEMA_DICTIONARY_PLUGIN_STATIC_FALSE"]="#"
S["BUILD_INFORMATION_SCHEMA_DICTIONARY_PLUGIN_STATIC_TRUE"]=""
S["BUILD_HTTP_FUNCTIONS_PLUGIN_FALSE"]="#"
S["BUILD_HTTP_FUNCTIONS_PLUGIN_TRUE"]=""
S["BUILD_HTTP_FUNCTIONS_PLUGIN_SHARED_FALSE"]="#"
S["BUILD_HTTP_FUNCTIONS_PLUGIN_SHARED_TRUE"]=""
S["BUILD_HTTP_FUNCTIONS_PLUGIN_STATIC_FALSE"]=""
S["BUILD_HTTP_FUNCTIONS_PLUGIN_STATIC_TRUE"]="#"
S["BUILD_HEX_FUNCTIONS_PLUGIN_FALSE"]="#"
S["BUILD_HEX_FUNCTIONS_PLUGIN_TRUE"]=""
S["BUILD_HEX_FUNCTIONS_PLUGIN_SHARED_FALSE"]="#"
S["BUILD_HEX_FUNCTIONS_PLUGIN_SHARED_TRUE"]=""
S["BUILD_HEX_FUNCTIONS_PLUGIN_STATIC_FALSE"]=""
S["BUILD_HEX_FUNCTIONS_PLUGIN_STATIC_TRUE"]="#"
S["BUILD_HELLO_WORLD_PLUGIN_FALSE"]="#"
S["BUILD_HELLO_WORLD_PLUGIN_TRUE"]=""
S["BUILD_HELLO_WORLD_PLUGIN_SHARED_FALSE"]="#"
S["BUILD_HELLO_WORLD_PLUGIN_SHARED_TRUE"]=""
S["BUILD_HELLO_WORLD_PLUGIN_STATIC_FALSE"]=""
S["BUILD_HELLO_WORLD_PLUGIN_STATIC_TRUE"]="#"
S["BUILD_HELLO_EVENTS_PLUGIN_FALSE"]="#"
S["BUILD_HELLO_EVENTS_PLUGIN_TRUE"]=""
S["BUILD_HELLO_EVENTS_PLUGIN_SHARED_FALSE"]="#"
S["BUILD_HELLO_EVENTS_PLUGIN_SHARED_TRUE"]=""
S["BUILD_HELLO_EVENTS_PLUGIN_STATIC_FALSE"]=""
S["BUILD_HELLO_EVENTS_PLUGIN_STATIC_TRUE"]="#"
S["BUILD_HAILDB_PLUGIN_FALSE"]=""
S["BUILD_HAILDB_PLUGIN_TRUE"]="#"
S["BUILD_HAILDB_PLUGIN_SHARED_FALSE"]=""
S["BUILD_HAILDB_PLUGIN_SHARED_TRUE"]="#"
S["BUILD_HAILDB_PLUGIN_STATIC_FALSE"]=""
S["BUILD_HAILDB_PLUGIN_STATIC_TRUE"]="#"
S["HAVE_LIBHAILDB_FALSE"]=""
S["HAVE_LIBHAILDB_TRUE"]="#"
S["LIBHAILDB_PREFIX"]=""
S["LTLIBHAILDB"]=""
S["LIBHAILDB"]=""
S["HAVE_LIBHAILDB"]="no"
S["BUILD_GEARMAN_UDF_PLUGIN_FALSE"]=""
S["BUILD_GEARMAN_UDF_PLUGIN_TRUE"]="#"
S["BUILD_GEARMAN_UDF_PLUGIN_SHARED_FALSE"]=""
S["BUILD_GEARMAN_UDF_PLUGIN_SHARED_TRUE"]="#"
S["BUILD_GEARMAN_UDF_PLUGIN_STATIC_FALSE"]=""
S["BUILD_GEARMAN_UDF_PLUGIN_STATIC_TRUE"]="#"
S["HAVE_LIBGEARMAN_FALSE"]=""
S["HAVE_LIBGEARMAN_TRUE"]="#"
S["LIBGEARMAN_PREFIX"]=""
S["LTLIBGEARMAN"]=""
S["LIBGEARMAN"]=""
S["HAVE_LIBGEARMAN"]="no"
S["BUILD_FUNCTION_ENGINE_PLUGIN_FALSE"]="#"
S["BUILD_FUNCTION_ENGINE_PLUGIN_TRUE"]=""
S["BUILD_FUNCTION_ENGINE_PLUGIN_SHARED_FALSE"]=""
S["BUILD_FUNCTION_ENGINE_PLUGIN_SHARED_TRUE"]="#"
S["BUILD_FUNCTION_ENGINE_PLUGIN_STATIC_FALSE"]="#"
S["BUILD_FUNCTION_ENGINE_PLUGIN_STATIC_TRUE"]=""
S["BUILD_FUNCTION_DICTIONARY_PLUGIN_FALSE"]="#"
S["BUILD_FUNCTION_DICTIONARY_PLUGIN_TRUE"]=""
S["BUILD_FUNCTION_DICTIONARY_PLUGIN_SHARED_FALSE"]="#"
S["BUILD_FUNCTION_DICTIONARY_PLUGIN_SHARED_TRUE"]=""
S["BUILD_FUNCTION_DICTIONARY_PLUGIN_STATIC_FALSE"]=""
S["BUILD_FUNCTION_DICTIONARY_PLUGIN_STATIC_TRUE"]="#"
S["BUILD_FILTERED_REPLICATOR_PLUGIN_FALSE"]="#"
S["BUILD_FILTERED_REPLICATOR_PLUGIN_TRUE"]=""
S["BUILD_FILTERED_REPLICATOR_PLUGIN_SHARED_FALSE"]="#"
S["BUILD_FILTERED_REPLICATOR_PLUGIN_SHARED_TRUE"]=""
S["BUILD_FILTERED_REPLICATOR_PLUGIN_STATIC_FALSE"]=""
S["BUILD_FILTERED_REPLICATOR_PLUGIN_STATIC_TRUE"]="#"
S["BUILD_ERROR_DICTIONARY_PLUGIN_FALSE"]="#"
S["BUILD_ERROR_DICTIONARY_PLUGIN_TRUE"]=""
S["BUILD_ERROR_DICTIONARY_PLUGIN_SHARED_FALSE"]=""
S["BUILD_ERROR_DICTIONARY_PLUGIN_SHARED_TRUE"]="#"
S["BUILD_ERROR_DICTIONARY_PLUGIN_STATIC_FALSE"]="#"
S["BUILD_ERROR_DICTIONARY_PLUGIN_STATIC_TRUE"]=""
S["BUILD_ERRMSG_STDERR_PLUGIN_FALSE"]="#"
S["BUILD_ERRMSG_STDERR_PLUGIN_TRUE"]=""
S["BUILD_ERRMSG_STDERR_PLUGIN_SHARED_FALSE"]="#"
S["BUILD_ERRMSG_STDERR_PLUGIN_SHARED_TRUE"]=""
S["BUILD_ERRMSG_STDERR_PLUGIN_STATIC_FALSE"]=""
S["BUILD_ERRMSG_STDERR_PLUGIN_STATIC_TRUE"]="#"
S["BUILD_DRIZZLE_PROTOCOL_PLUGIN_FALSE"]="#"
S["BUILD_DRIZZLE_PROTOCOL_PLUGIN_TRUE"]=""
S["BUILD_DRIZZLE_PROTOCOL_PLUGIN_SHARED_FALSE"]=""
S["BUILD_DRIZZLE_PROTOCOL_PLUGIN_SHARED_TRUE"]="#"
S["BUILD_DRIZZLE_PROTOCOL_PLUGIN_STATIC_FALSE"]="#"
S["BUILD_DRIZZLE_PROTOCOL_PLUGIN_STATIC_TRUE"]=""
S["BUILD_DEFAULT_REPLICATOR_PLUGIN_FALSE"]="#"
S["BUILD_DEFAULT_REPLICATOR_PLUGIN_TRUE"]=""
S["BUILD_DEFAULT_REPLICATOR_PLUGIN_SHARED_FALSE"]="#"
S["BUILD_DEFAULT_REPLICATOR_PLUGIN_SHARED_TRUE"]=""
S["BUILD_DEFAULT_REPLICATOR_PLUGIN_STATIC_FALSE"]=""
S["BUILD_DEFAULT_REPLICATOR_PLUGIN_STATIC_TRUE"]="#"
S["BUILD_DEBUG_PLUGIN_FALSE"]="#"
S["BUILD_DEBUG_PLUGIN_TRUE"]=""
S["BUILD_DEBUG_PLUGIN_SHARED_FALSE"]="#"
S["BUILD_DEBUG_PLUGIN_SHARED_TRUE"]=""
S["BUILD_DEBUG_PLUGIN_STATIC_FALSE"]=""
S["BUILD_DEBUG_PLUGIN_STATIC_TRUE"]="#"
S["BUILD_CRC32_PLUGIN_FALSE"]="#"
S["BUILD_CRC32_PLUGIN_TRUE"]=""
S["BUILD_CRC32_PLUGIN_SHARED_FALSE"]="#"
S["BUILD_CRC32_PLUGIN_SHARED_TRUE"]=""
S["BUILD_CRC32_PLUGIN_STATIC_FALSE"]=""
S["BUILD_CRC32_PLUGIN_STATIC_TRUE"]="#"
S["BUILD_CONSOLE_PLUGIN_FALSE"]="#"
S["BUILD_CONSOLE_PLUGIN_TRUE"]=""
S["BUILD_CONSOLE_PLUGIN_SHARED_FALSE"]=""
S["BUILD_CONSOLE_PLUGIN_SHARED_TRUE"]="#"
S["BUILD_CONSOLE_PLUGIN_STATIC_FALSE"]="#"
S["BUILD_CONSOLE_PLUGIN_STATIC_TRUE"]=""
S["BUILD_CONNECTION_ID_PLUGIN_FALSE"]="#"
S["BUILD_CONNECTION_ID_PLUGIN_TRUE"]=""
S["BUILD_CONNECTION_ID_PLUGIN_SHARED_FALSE"]="#"
S["BUILD_CONNECTION_ID_PLUGIN_SHARED_TRUE"]=""
S["BUILD_CONNECTION_ID_PLUGIN_STATIC_FALSE"]=""
S["BUILD_CONNECTION_ID_PLUGIN_STATIC_TRUE"]="#"
S["BUILD_COMPRESSION_PLUGIN_FALSE"]="#"
S["BUILD_COMPRESSION_PLUGIN_TRUE"]=""
S["BUILD_COMPRESSION_PLUGIN_SHARED_FALSE"]="#"
S["BUILD_COMPRESSION_PLUGIN_SHARED_TRUE"]=""
S["BUILD_COMPRESSION_PLUGIN_STATIC_FALSE"]=""
S["BUILD_COMPRESSION_PLUGIN_STATIC_TRUE"]="#"
S["BUILD_COLLATION_DICTIONARY_PLUGIN_FALSE"]="#"
S["BUILD_COLLATION_DICTIONARY_PLUGIN_TRUE"]=""
S["BUILD_COLLATION_DICTIONARY_PLUGIN_SHARED_FALSE"]=""
S["BUILD_COLLATION_DICTIONARY_PLUGIN_SHARED_TRUE"]="#"
S["BUILD_COLLATION_DICTIONARY_PLUGIN_STATIC_FALSE"]="#"
S["BUILD_COLLATION_DICTIONARY_PLUGIN_STATIC_TRUE"]=""
S["BUILD_COERCIBILITY_FUNCTION_PLUGIN_FALSE"]=""
S["BUILD_COERCIBILITY_FUNCTION_PLUGIN_TRUE"]="#"
S["BUILD_COERCIBILITY_FUNCTION_PLUGIN_SHARED_FALSE"]=""
S["BUILD_COERCIBILITY_FUNCTION_PLUGIN_SHARED_TRUE"]="#"
S["BUILD_COERCIBILITY_FUNCTION_PLUGIN_STATIC_FALSE"]=""
S["BUILD_COERCIBILITY_FUNCTION_PLUGIN_STATIC_TRUE"]="#"
S["BUILD_CHARLENGTH_PLUGIN_FALSE"]="#"
S["BUILD_CHARLENGTH_PLUGIN_TRUE"]=""
S["BUILD_CHARLENGTH_PLUGIN_SHARED_FALSE"]="#"
S["BUILD_CHARLENGTH_PLUGIN_SHARED_TRUE"]=""
S["BUILD_CHARLENGTH_PLUGIN_STATIC_FALSE"]=""
S["BUILD_CHARLENGTH_PLUGIN_STATIC_TRUE"]="#"
S["BUILD_CATALOG_PLUGIN_FALSE"]="#"
S["BUILD_CATALOG_PLUGIN_TRUE"]=""
S["BUILD_CATALOG_PLUGIN_SHARED_FALSE"]=""
S["BUILD_CATALOG_PLUGIN_SHARED_TRUE"]="#"
S["BUILD_CATALOG_PLUGIN_STATIC_FALSE"]="#"
S["BUILD_CATALOG_PLUGIN_STATIC_TRUE"]=""
S["BUILD_BENCHMARK_PLUGIN_FALSE"]="#"
S["BUILD_BENCHMARK_PLUGIN_TRUE"]=""
S["BUILD_BENCHMARK_PLUGIN_SHARED_FALSE"]="#"
S["BUILD_BENCHMARK_PLUGIN_SHARED_TRUE"]=""
S["BUILD_BENCHMARK_PLUGIN_STATIC_FALSE"]=""
S["BUILD_BENCHMARK_PLUGIN_STATIC_TRUE"]="#"
S["BUILD_AUTH_TEST_PLUGIN_FALSE"]="#"
S["BUILD_AUTH_TEST_PLUGIN_TRUE"]=""
S["BUILD_AUTH_TEST_PLUGIN_SHARED_FALSE"]="#"
S["BUILD_AUTH_TEST_PLUGIN_SHARED_TRUE"]=""
S["BUILD_AUTH_TEST_PLUGIN_STATIC_FALSE"]=""
S["BUILD_AUTH_TEST_PLUGIN_STATIC_TRUE"]="#"
S["BUILD_AUTH_PAM_PLUGIN_FALSE"]="#"
S["BUILD_AUTH_PAM_PLUGIN_TRUE"]=""
S["BUILD_AUTH_PAM_PLUGIN_SHARED_FALSE"]="#"
S["BUILD_AUTH_PAM_PLUGIN_SHARED_TRUE"]=""
S["BUILD_AUTH_PAM_PLUGIN_STATIC_FALSE"]=""
S["BUILD_AUTH_PAM_PLUGIN_STATIC_TRUE"]="#"
S["LIBPAM_PREFIX"]=""
S["LTLIBPAM"]="-lpam"
S["LIBPAM"]="-lpam"
S["HAVE_LIBPAM"]="yes"
S["BUILD_AUTH_LDAP_PLUGIN_FALSE"]="#"
S["BUILD_AUTH_LDAP_PLUGIN_TRUE"]=""
S["BUILD_AUTH_LDAP_PLUGIN_SHARED_FALSE"]="#"
S["BUILD_AUTH_LDAP_PLUGIN_SHARED_TRUE"]=""
S["BUILD_AUTH_LDAP_PLUGIN_STATIC_FALSE"]=""
S["BUILD_AUTH_LDAP_PLUGIN_STATIC_TRUE"]="#"
S["HAVE_LIBLDAP_FALSE"]="#"
S["HAVE_LIBLDAP_TRUE"]=""
S["LIBLDAP_PREFIX"]=""
S["LTLIBLDAP"]="-lldap"
S["LIBLDAP"]="-lldap"
S["HAVE_LIBLDAP"]="yes"
S["BUILD_AUTH_HTTP_PLUGIN_FALSE"]="#"
S["BUILD_AUTH_HTTP_PLUGIN_TRUE"]=""
S["BUILD_AUTH_HTTP_PLUGIN_SHARED_FALSE"]="#"
S["BUILD_AUTH_HTTP_PLUGIN_SHARED_TRUE"]=""
S["BUILD_AUTH_HTTP_PLUGIN_STATIC_FALSE"]=""
S["BUILD_AUTH_HTTP_PLUGIN_STATIC_TRUE"]="#"
S["HAVE_LIBCURL_FALSE"]="#"
S["HAVE_LIBCURL_TRUE"]=""
S["LIBCURL_PREFIX"]=""
S["LTLIBCURL"]="-lcurl"
S["LIBCURL"]="-lcurl"
S["HAVE_LIBCURL"]="yes"
S["BUILD_AUTH_FILE_PLUGIN_FALSE"]="#"
S["BUILD_AUTH_FILE_PLUGIN_TRUE"]=""
S["BUILD_AUTH_FILE_PLUGIN_SHARED_FALSE"]="#"
S["BUILD_AUTH_FILE_PLUGIN_SHARED_TRUE"]=""
S["BUILD_AUTH_FILE_PLUGIN_STATIC_FALSE"]=""
S["BUILD_AUTH_FILE_PLUGIN_STATIC_TRUE"]="#"
S["BUILD_AUTH_ALL_PLUGIN_FALSE"]="#"
S["BUILD_AUTH_ALL_PLUGIN_TRUE"]=""
S["BUILD_AUTH_ALL_PLUGIN_SHARED_FALSE"]=""
S["BUILD_AUTH_ALL_PLUGIN_SHARED_TRUE"]="#"
S["BUILD_AUTH_ALL_PLUGIN_STATIC_FALSE"]="#"
S["BUILD_AUTH_ALL_PLUGIN_STATIC_TRUE"]=""
S["BUILD_ASCII_PLUGIN_FALSE"]="#"
S["BUILD_ASCII_PLUGIN_TRUE"]=""
S["BUILD_ASCII_PLUGIN_SHARED_FALSE"]="#"
S["BUILD_ASCII_PLUGIN_SHARED_TRUE"]=""
S["BUILD_ASCII_PLUGIN_STATIC_FALSE"]=""
S["BUILD_ASCII_PLUGIN_STATIC_TRUE"]="#"
S["HAVE_LIBSQLITE3_FALSE"]="#"
S["HAVE_LIBSQLITE3_TRUE"]=""
S["LIBSQLITE3_PREFIX"]=""
S["LTLIBSQLITE3"]="-lsqlite3"
S["LIBSQLITE3"]="-lsqlite3"
S["HAVE_LIBSQLITE3"]="yes"
S["HAVE_BOOST_TEST_FALSE"]=""
S["HAVE_BOOST_TEST_TRUE"]="#"
S["LIBBOOST_UNIT_TEST_FRAMEWORK_PREFIX"]=""
S["LTLIBBOOST_UNIT_TEST_FRAMEWORK"]=""
S["LIBBOOST_UNIT_TEST_FRAMEWORK"]=""
S["HAVE_LIBBOOST_UNIT_TEST_FRAMEWORK"]="no"
S["LIBBOOST_UNIT_TEST_FRAMEWORK_MT_PREFIX"]=""
S["LTLIBBOOST_UNIT_TEST_FRAMEWORK_MT"]=""
S["LIBBOOST_UNIT_TEST_FRAMEWORK_MT"]=""
S["HAVE_LIBBOOST_UNIT_TEST_FRAMEWORK_MT"]="no"
S["OLDLIBDRIZZLE_CPPFLAGS"]="-I${top_builddir}/libdrizzle-1.0 -I${top_srcdir}/libdrizzle-1.0"
S["LIBDRIZZLE_CPPFLAGS"]="-I${top_builddir}/libdrizzle-2.0 -I${top_srcdir}/libdrizzle-2.0"
S["HAVE_BOOST_IOSTREAMS_FALSE"]=""
S["HAVE_BOOST_IOSTREAMS_TRUE"]="#"
S["LIBBOOST_IOSTREAMS_PREFIX"]=""
S["LTLIBBOOST_IOSTREAMS"]=""
S["LIBBOOST_IOSTREAMS"]=""
S["HAVE_LIBBOOST_IOSTREAMS"]="no"
S["LIBBOOST_IOSTREAMS_MT_PREFIX"]=""
S["LTLIBBOOST_IOSTREAMS_MT"]=""
S["LIBBOOST_IOSTREAMS_MT"]=""
S["HAVE_LIBBOOST_IOSTREAMS_MT"]="no"
S["HAVE_BOOST_FILESYSTEM_FALSE"]=""
S["HAVE_BOOST_FILESYSTEM_TRUE"]="#"
S["LIBBOOST_FILESYSTEM_PREFIX"]=""
S["LTLIBBOOST_FILESYSTEM"]=""
S["LIBBOOST_FILESYSTEM"]=""
S["HAVE_LIBBOOST_FILESYSTEM"]="no"
S["LIBBOOST_FILESYSTEM_MT_PREFIX"]=""
S["LTLIBBOOST_FILESYSTEM_MT"]=""
S["LIBBOOST_FILESYSTEM_MT"]=""
S["HAVE_LIBBOOST_FILESYSTEM_MT"]="no"
S["HAVE_BOOST_DATE_TIME_FALSE"]=""
S["HAVE_BOOST_DATE_TIME_TRUE"]="#"
S["LIBBOOST_DATE_TIME_PREFIX"]=""
S["LTLIBBOOST_DATE_TIME"]=""
S["LIBBOOST_DATE_TIME"]=""
S["HAVE_LIBBOOST_DATE_TIME"]="no"
S["LIBBOOST_DATE_TIME_MT_PREFIX"]=""
S["LTLIBBOOST_DATE_TIME_MT"]=""
S["LIBBOOST_DATE_TIME_MT"]=""
S["HAVE_LIBBOOST_DATE_TIME_MT"]="no"
S["HAVE_BOOST_REGEX_FALSE"]=""
S["HAVE_BOOST_REGEX_TRUE"]="#"
S["LIBBOOST_REGEX_PREFIX"]=""
S["LTLIBBOOST_REGEX"]=""
S["LIBBOOST_REGEX"]=""
S["HAVE_LIBBOOST_REGEX"]="no"
S["LIBBOOST_REGEX_MT_PREFIX"]=""
S["LTLIBBOOST_REGEX_MT"]=""
S["LIBBOOST_REGEX_MT"]=""
S["HAVE_LIBBOOST_REGEX_MT"]="no"
S["HAVE_BOOST_THREAD_FALSE"]=""
S["HAVE_BOOST_THREAD_TRUE"]="#"
S["LIBBOOST_THREAD_PREFIX"]=""
S["LTLIBBOOST_THREAD"]=""
S["LIBBOOST_THREAD"]=""
S["HAVE_LIBBOOST_THREAD"]="no"
S["LIBBOOST_THREAD_MT_PREFIX"]=""
S["LTLIBBOOST_THREAD_MT"]=""
S["LIBBOOST_THREAD_MT"]=""
S["HAVE_LIBBOOST_THREAD_MT"]="no"
S["BOOST_LIBS"]="              "
S["HAVE_BOOST_PROGRAM_OPTIONS_FALSE"]=""
S["HAVE_BOOST_PROGRAM_OPTIONS_TRUE"]="#"
S["LIBBOOST_PROGRAM_OPTIONS_PREFIX"]=""
S["LTLIBBOOST_PROGRAM_OPTIONS"]=""
S["LIBBOOST_PROGRAM_OPTIONS"]=""
S["HAVE_LIBBOOST_PROGRAM_OPTIONS"]="no"
S["LIBBOOST_PROGRAM_OPTIONS_MT_PREFIX"]=""
S["LTLIBBOOST_PROGRAM_OPTIONS_MT"]=""
S["LIBBOOST_PROGRAM_OPTIONS_MT"]=""
S["HAVE_LIBBOOST_PROGRAM_OPTIONS_MT"]="no"
S["HAVE_BOOST_FALSE"]=""
S["HAVE_BOOST_TRUE"]="#"
S["LIBC_PREFIX"]=""
S["LTLIBC"]=""
S["LIBC"]=""
S["HAVE_LIBC"]="yes"
S["HAVE_BISON_FALSE"]="#"
S["HAVE_BISON_TRUE"]=""
S["YACC"]="bison -y"
S["ALLOCA"]=""
S["HAVE_LIBDL_FALSE"]="#"
S["HAVE_LIBDL_TRUE"]=""
S["LIBDL_LIBS"]="-ldl "
S["HAVE_LIBREADLINE_FALSE"]=""
S["HAVE_LIBREADLINE_TRUE"]="#"
S["READLINE_LIBS"]=" -lreadline"
S["HAVE_LIBPCRE_FALSE"]="#"
S["HAVE_LIBPCRE_TRUE"]=""
S["LIBPCRE_PREFIX"]=""
S["LTLIBPCRE"]="-lpcre"
S["LIBPCRE"]="-lpcre"
S["HAVE_LIBPCRE"]="yes"
S["HAVE_LIBZ_FALSE"]="#"
S["HAVE_LIBZ_TRUE"]=""
S["LIBZ_PREFIX"]=""
S["LTLIBZ"]="-lz"
S["LIBZ"]="-lz"
S["HAVE_LIBZ"]="yes"
S["HAVE_LIBUUID_FALSE"]="#"
S["HAVE_LIBUUID_TRUE"]=""
S["LIBUUID_PREFIX"]=""
S["LTLIBUUID"]="-luuid"
S["LIBUUID"]="-luuid"
S["HAVE_LIBUUID"]="yes"
S["PROTOC"]="no"
S["LIBPROTOBUF_PREFIX"]=""
S["LTLIBPROTOBUF"]=" "
S["LIBPROTOBUF"]=" "
S["HAVE_LIBPROTOBUF"]="no"
S["PTHREAD_CFLAGS"]="-pthread"
S["PTHREAD_LIBS"]=""
S["PTHREAD_CC"]="gcc -std=gnu99"
S["acx_pthread_config"]=""
S["DRIZZLED_USER"]=""
S["GPERF"]=""
S["LD_VERSION_SCRIPT"]="-Wl,--version-script=$(top_srcdir)/config/drizzle.ver"
S["oldlibdrizzleincludedir"]="${includedir}/libdrizzle-1.0"
S["oldlibdrizzleinstalldir"]="${oldlibdrizzleincludedir}/libdrizzle"
S["libdrizzleincludedir"]="${includedir}/libdrizzle-2.0"
S["libdrizzleinstalldir"]="${libdrizzleincludedir}/libdrizzle"
S["OLDLIBDRIZZLE_LIBRARY_VERSION"]="2:0:1"
S["LIBDRIZZLE_LIBRARY_VERSION"]="3:0:0"
S["AM_LDFLAGS"]=""
S["AM_CPPFLAGS"]="-I$(top_srcdir) -I$(top_builddir) -g "
S["AM_CXXFLAGS"]="-pthread -pipe -std=gnu++98  -O2 -fvisibility=hidden -fvisibility-inlines-hidden  -pedantic -Wall -Wundef -Wshadow  -fdiagnostics-show-option -floop"\
"-parallelize-all -fno-strict-aliasing -Wno-strict-aliasing -Wextra -Wformat -Wno-format-nonliteral -Wno-format-security -Woverloaded-virtual -Wnon-v"\
"irtual-dtor -Wctor-dtor-privacy -Wno-long-long  -Wmissing-declarations -Wframe-larger-than=32768 -Wredundant-decls   "
S["AM_CFLAGS"]="-pthread -pipe  -O2 -fvisibility=hidden  -pedantic -Wall -Wundef -Wshadow  -fdiagnostics-show-option -floop-parallelize-all -fno-strict-aliasing -Wn"\
"o-strict-aliasing -Wextra -Wformat -Wno-format-nonliteral -Wno-format-security -Wstrict-prototypes -Wmissing-prototypes -Wredundant-decls -Wmissing-"\
"declarations -Wcast-align  -Wlogical-op    -DUNIV_LINUX"
S["BUILD_PO_FALSE"]=""
S["BUILD_PO_TRUE"]="#"
S["GETTEXT_PACKAGE"]="drizzle7"
S["DATADIRNAME"]="share"
S["ALL_LINGUAS"]=""
S["INTLTOOL_PERL"]="/usr/bin/perl"
S["INTLTOOL_POLICY_RULE"]="%.policy:    %.policy.in    $(INTLTOOL_MERGE) $(wildcard $(top_srcdir)/po/*.po) ; LC_ALL=C $(INTLTOOL_MERGE) -x -u -c $(top_builddir)/po/.intltool-m"\
"erge-cache $(top_srcdir)/po $< $@"
S["INTLTOOL_SERVICE_RULE"]="%.service: %.service.in   $(INTLTOOL_MERGE) $(wildcard $(top_srcdir)/po/*.po) ; LC_ALL=C $(INTLTOOL_MERGE) -d -u -c $(top_builddir)/po/.intltool-mer"\
"ge-cache $(top_srcdir)/po $< $@"
S["INTLTOOL_THEME_RULE"]="%.theme:     %.theme.in     $(INTLTOOL_MERGE) $(wildcard $(top_srcdir)/po/*.po) ; LC_ALL=C $(INTLTOOL_MERGE) -d -u -c $(top_builddir)/po/.intltool-m"\
"erge-cache $(top_srcdir)/po $< $@"
S["INTLTOOL_SCHEMAS_RULE"]="%.schemas:   %.schemas.in   $(INTLTOOL_MERGE) $(wildcard $(top_srcdir)/po/*.po) ; LC_ALL=C $(INTLTOOL_MERGE) -s -u -c $(top_builddir)/po/.intltool-m"\
"erge-cache $(top_srcdir)/po $< $@"
S["INTLTOOL_CAVES_RULE"]="%.caves:     %.caves.in     $(INTLTOOL_MERGE) $(wildcard $(top_srcdir)/po/*.po) ; LC_ALL=C $(INTLTOOL_MERGE) -d -u -c $(top_builddir)/po/.intltool-m"\
"erge-cache $(top_srcdir)/po $< $@"
S["INTLTOOL_XML_NOMERGE_RULE"]="%.xml:       %.xml.in       $(INTLTOOL_MERGE) ; LC_ALL=C $(INTLTOOL_MERGE) -x -u /tmp $< $@"
S["INTLTOOL_XML_RULE"]="%.xml:       %.xml.in       $(INTLTOOL_MERGE) $(wildcard $(top_srcdir)/po/*.po) ; LC_ALL=C $(INTLTOOL_MERGE) -x -u -c $(top_builddir)/po/.intltool-m"\
"erge-cache $(top_srcdir)/po $< $@"
S["INTLTOOL_KBD_RULE"]="%.kbd:       %.kbd.in       $(INTLTOOL_MERGE) $(wildcard $(top_srcdir)/po/*.po) ; LC_ALL=C $(INTLTOOL_MERGE) -x -u -m -c $(top_builddir)/po/.intltoo"\
"l-merge-cache $(top_srcdir)/po $< $@"
S["INTLTOOL_XAM_RULE"]="%.xam:       %.xml.in       $(INTLTOOL_MERGE) $(wildcard $(top_srcdir)/po/*.po) ; LC_ALL=C $(INTLTOOL_MERGE) -x -u -c $(top_builddir)/po/.intltool-m"\
"erge-cache $(top_srcdir)/po $< $@"
S["INTLTOOL_UI_RULE"]="%.ui:        %.ui.in        $(INTLTOOL_MERGE) $(wildcard $(top_srcdir)/po/*.po) ; LC_ALL=C $(INTLTOOL_MERGE) -x -u -c $(top_builddir)/po/.intltool-m"\
"erge-cache $(top_srcdir)/po $< $@"
S["INTLTOOL_SOUNDLIST_RULE"]="%.soundlist: %.soundlist.in $(INTLTOOL_MERGE) $(wildcard $(top_srcdir)/po/*.po) ; LC_ALL=C $(INTLTOOL_MERGE) -d -u -c $(top_builddir)/po/.intltool-m"\
"erge-cache $(top_srcdir)/po $< $@"
S["INTLTOOL_SHEET_RULE"]="%.sheet:     %.sheet.in     $(INTLTOOL_MERGE) $(wildcard $(top_srcdir)/po/*.po) ; LC_ALL=C $(INTLTOOL_MERGE) -x -u -c $(top_builddir)/po/.intltool-m"\
"erge-cache $(top_srcdir)/po $< $@"
S["INTLTOOL_SERVER_RULE"]="%.server:    %.server.in    $(INTLTOOL_MERGE) $(wildcard $(top_srcdir)/po/*.po) ; LC_ALL=C $(INTLTOOL_MERGE) -o -u -c $(top_builddir)/po/.intltool-m"\
"erge-cache $(top_srcdir)/po $< $@"
S["INTLTOOL_PONG_RULE"]="%.pong:      %.pong.in      $(INTLTOOL_MERGE) $(wildcard $(top_srcdir)/po/*.po) ; LC_ALL=C $(INTLTOOL_MERGE) -x -u -c $(top_builddir)/po/.intltool-m"\
"erge-cache $(top_srcdir)/po $< $@"
S["INTLTOOL_OAF_RULE"]="%.oaf:       %.oaf.in       $(INTLTOOL_MERGE) $(wildcard $(top_srcdir)/po/*.po) ; LC_ALL=C $(INTLTOOL_MERGE) -o -p $(top_srcdir)/po $< $@"
S["INTLTOOL_PROP_RULE"]="%.prop:      %.prop.in      $(INTLTOOL_MERGE) $(wildcard $(top_srcdir)/po/*.po) ; LC_ALL=C $(INTLTOOL_MERGE) -d -u -c $(top_builddir)/po/.intltool-m"\
"erge-cache $(top_srcdir)/po $< $@"
S["INTLTOOL_KEYS_RULE"]="%.keys:      %.keys.in      $(INTLTOOL_MERGE) $(wildcard $(top_srcdir)/po/*.po) ; LC_ALL=C $(INTLTOOL_MERGE) -k -u -c $(top_builddir)/po/.intltool-m"\
"erge-cache $(top_srcdir)/po $< $@"
S["INTLTOOL_DIRECTORY_RULE"]="%.directory: %.directory.in $(INTLTOOL_MERGE) $(wildcard $(top_srcdir)/po/*.po) ; LC_ALL=C $(INTLTOOL_MERGE) -d -u -c $(top_builddir)/po/.intltool-m"\
"erge-cache $(top_srcdir)/po $< $@"
S["INTLTOOL_DESKTOP_RULE"]="%.desktop:   %.desktop.in   $(INTLTOOL_MERGE) $(wildcard $(top_srcdir)/po/*.po) ; LC_ALL=C $(INTLTOOL_MERGE) -d -u -c $(top_builddir)/po/.intltool-m"\
"erge-cache $(top_srcdir)/po $< $@"
S["INTLTOOL_EXTRACT"]=""
S["INTLTOOL_MERGE"]=""
S["INTLTOOL_UPDATE"]=""
S["XGETTEXT_EXTRA_OPTIONS"]=""
S["MSGMERGE"]="/usr/bin/msgmerge"
S["XGETTEXT_015"]="/usr/bin/xgettext"
S["XGETTEXT"]="/usr/bin/xgettext"
S["GMSGFMT_015"]="/usr/bin/msgfmt"
S["MSGFMT_015"]="/usr/bin/msgfmt"
S["GMSGFMT"]="/usr/bin/msgfmt"
S["MSGFMT"]="/usr/bin/msgfmt"
S["GETTEXT_MACRO_VERSION"]="0.18"
S["USE_NLS"]="yes"
S["HAVE_RECENT_SPHINX_FALSE"]=""
S["HAVE_RECENT_SPHINX_TRUE"]="#"
S["HAVE_SPHINX_FALSE"]=""
S["HAVE_SPHINX_TRUE"]="#"
S["HAVE_DPKG_GENSYMBOLS_FALSE"]=""
S["HAVE_DPKG_GENSYMBOLS_TRUE"]="#"
S["SPHINXBUILD"]=":"
S["LCOV_GENHTML"]="echo genhtml not found"
S["LCOV"]="echo lcov not found"
S["DPKG_GENSYMBOLS"]=":"
S["PERL"]="perl"
S["DOXYGEN"]="doxygen"
S["HAVE_VALGRIND_FALSE"]=""
S["HAVE_VALGRIND_TRUE"]="#"
S["BETTER_MALLOC_LIBS"]=""
S["DTRACE_NEEDS_OBJECTS_FALSE"]=""
S["DTRACE_NEEDS_OBJECTS_TRUE"]="#"
S["HAVE_DTRACE_FALSE"]=""
S["HAVE_DTRACE_TRUE"]="#"
S["DTRACEFLAGS"]=""
S["DTRACE"]=""
S["INTLTOOL_WARNINGS"]=""
S["SPHINX_WARNINGS"]=""
S["GCOV_LIBS"]=""
S["NO_WERROR"]="-Wno-error"
S["PERMISSIVE_C_WARNINGS"]="-Wno-error -Wno-redundant-decls"
S["PERMISSIVE_WARNINGS"]="-Wno-error -Wno-unused-function -fpermissive"
S["BOOSTSKIP_WARNINGS"]=""
S["INNOBASE_SKIP_WARNINGS"]=""
S["PROTOSKIP_WARNINGS"]="-Wno-effc++ -Wno-shadow -Wno-missing-braces "
S["NO_OLD_STYLE_CAST"]=""
S["NO_EFF_CXX"]=""
S["NO_STRICT_ALIASING"]="-fno-strict-aliasing -Wno-strict-aliasing"
S["NO_SHADOW"]="-Wno-shadow"
S["NO_UNREACHED"]=""
S["NO_REDUNDANT_DECLS"]="-Wno-redundant-decls"
S["NO_CONVERSION"]=""
S["LIBC_P"]=""
S["HAVE_VISIBILITY"]="1"
S["NO_VISIBILITY"]="-fvisibility=default"
S["CXXFLAG_VISIBILITY"]="-fvisibility=hidden -fvisibility-inlines-hidden"
S["CFLAG_VISIBILITY"]="-fvisibility=hidden"
S["LIBM"]="-lm"
S["CXX_VERSION"]="g++ (SUSE Linux) 7.5.0"
S["CC_VERSION"]="gcc (SUSE Linux) 7.5.0"
S["CXX_STANDARD"]="-std=gnu++98"
S["CXXCPP"]="g++ -E"
S["OTOOL64"]=""
S["OTOOL"]=""
S["LIPO"]=""
S["NMEDIT"]=""
S["DSYMUTIL"]=""
S["lt_ECHO"]="echo"
S["RANLIB"]="ranlib"
S["AR"]="ar"
S["OBJDUMP"]="objdump"
S["LN_S"]="ln -s"
S["NM"]="/usr/bin/nm -B"
S["ac_ct_DUMPBIN"]=""
S["DUMPBIN"]=""
S["LD"]="/usr/x86_64-suse-linux/bin/ld -m elf_x86_64"
S["FGREP"]="/usr/bin/grep -F"
S["SED"]="/usr/bin/sed"
S["LIBTOOL"]="$(SHELL) $(top_builddir)/libtool"
S["PANDORA_OPTIMIZE_BITFIELD"]="1"
S["BUILD_WIN32_FALSE"]=""
S["BUILD_WIN32_TRUE"]="#"
S["TARGET_WINDOWS"]=""
S["TARGET_FREEBSD"]=""
S["TARGET_SOLARIS"]=""
S["TARGET_OSX"]=""
S["TARGET_LINUX"]="true"
S["am__fastdepCXX_FALSE"]="#"
S["am__fastdepCXX_TRUE"]=""
S["CXXDEPMODE"]="depmode=gcc3"
S["ac_ct_CXX"]="g++"
S["CXXFLAGS"]="-pthread "
S["CXX"]="g++"
S["PANDORA_HEX_VERSION"]="0x07000000"
S["PANDORA_RELEASE_ID"]="20110721"
S["PANDORA_RELEASE_VERSION"]="2011.07.21"
S["PANDORA_RELEASE_COMMENT"]="drizzle"
S["PANDORA_RELEASE_NODOTS_DATE"]="201107"
S["PANDORA_RELEASE_DATE"]="2011.07"
S["PANDORA_VC_BRANCH"]="drizzle"
S["PANDORA_VC_REVID"]="me@mark.atwood.name-20110704014029-msdso7k8gibt084t"
S["PANDORA_VC_REVNO"]="2359"
S["ISAINFO"]="no"
S["CXX45"]=""
S["CC45"]=""
S["CXX44"]=""
S["CC44"]=""
S["CXX_4_2"]=""
S["CC_4_2"]=""
S["EGREP"]="/usr/bin/grep -E"
S["GREP"]="/usr/bin/grep"
S["CPP"]="gcc -E"
S["am__fastdepCC_FALSE"]="#"
S["am__fastdepCC_TRUE"]=""
S["CCDEPMODE"]="depmode=gcc3"
S["AMDEPBACKSLASH"]="\\"
S["AMDEP_FALSE"]="#"
S["AMDEP_TRUE"]=""
S["am__quote"]=""
S["am__include"]="include"
S["DEPDIR"]=".deps"
S["OBJEXT"]="o"
S["EXEEXT"]=""
S["ac_ct_CC"]="gcc"
S["CPPFLAGS"]=""
S["LDFLAGS"]=" -Wl,--version-script=$(top_srcdir)/config/drizzle.ver"
S["CFLAGS"]=""
S["CC"]="gcc -std=gnu99"
S["AM_BACKSLASH"]="\\"
S["AM_DEFAULT_VERBOSITY"]="0"
S["am__untar"]="tar -xf -"
S["am__tar"]="tar --format=ustar -chf - \"$$tardir\""
S["AMTAR"]="${SHELL} /home/andrey/Code/nginx-builder.git/etc_src/drizzle7-2011.07.21/config/missing --run tar"
S["am__leading_dot"]="."
S["SET_MAKE"]=""
S["AWK"]="gawk"
S["mkdir_p"]="/usr/bin/mkdir -p"
S["MKDIR_P"]="/usr/bin/mkdir -p"
S["INSTALL_STRIP_PROGRAM"]="$(install_sh) -c -s"
S["STRIP"]="strip"
S["install_sh"]="${SHELL} /home/andrey/Code/nginx-builder.git/etc_src/drizzle7-2011.07.21/config/install-sh"
S["MAKEINFO"]="${SHELL} /home/andrey/Code/nginx-builder.git/etc_src/drizzle7-2011.07.21/config/missing --run makeinfo"
S["AUTOHEADER"]="${SHELL} /home/andrey/Code/nginx-builder.git/etc_src/drizzle7-2011.07.21/config/missing --run autoheader"
S["AUTOMAKE"]="${SHELL} /home/andrey/Code/nginx-builder.git/etc_src/drizzle7-2011.07.21/config/missing --run automake-1.11"
S["AUTOCONF"]="${SHELL} /home/andrey/Code/nginx-builder.git/etc_src/drizzle7-2011.07.21/config/missing --run autoconf"
S["ACLOCAL"]="${SHELL} /home/andrey/Code/nginx-builder.git/etc_src/drizzle7-2011.07.21/config/missing --run aclocal-1.11"
S["VERSION"]="7"
S["PACKAGE"]="drizzle7"
S["CYGPATH_W"]="echo"
S["am__isrc"]=""
S["INSTALL_DATA"]="${INSTALL} -m 644"
S["INSTALL_SCRIPT"]="${INSTALL}"
S["INSTALL_PROGRAM"]="${INSTALL}"
S["target_os"]="linux-gnu"
S["target_vendor"]="unknown"
S["target_cpu"]="x86_64"
S["target"]="x86_64-unknown-linux-gnu"
S["host_os"]="linux-gnu"
S["host_vendor"]="unknown"
S["host_cpu"]="x86_64"
S["host"]="x86_64-unknown-linux-gnu"
S["build_os"]="linux-gnu"
S["build_vendor"]="unknown"
S["build_cpu"]="x86_64"
S["build"]="x86_64-unknown-linux-gnu"
S["target_alias"]=""
S["host_alias"]=""
S["build_alias"]=""
S["LIBS"]=" "
S["ECHO_T"]=""
S["ECHO_N"]="-n"
S["ECHO_C"]=""
S["DEFS"]="-DHAVE_CONFIG_H"
S["mandir"]="${datarootdir}/man"
S["localedir"]="${datarootdir}/locale"
S["libdir"]="${exec_prefix}/lib64"
S["psdir"]="${docdir}"
S["pdfdir"]="${docdir}"
S["dvidir"]="${docdir}"
S["htmldir"]="${docdir}"
S["infodir"]="${datarootdir}/info"
S["docdir"]="${datarootdir}/doc/${PACKAGE_TARNAME}"
S["oldincludedir"]="/usr/include"
S["includedir"]="${prefix}/include"
S["localstatedir"]="${prefix}/var/drizzle"
S["sharedstatedir"]="${prefix}/com"
S["sysconfdir"]="${prefix}/etc"
S["datadir"]="${datarootdir}"
S["datarootdir"]="${prefix}/share"
S["libexecdir"]="${exec_prefix}/lib"
S["sbindir"]="${exec_prefix}/sbin"
S["bindir"]="${exec_prefix}/bin"
S["program_transform_name"]="s,x,x,"
S["prefix"]="/home/andrey/Code/nginx-builder.git/etc_src/drizzle7-2011.07.21/build"
S["exec_prefix"]="${prefix}"
S["PACKAGE_URL"]=""
S["PACKAGE_BUGREPORT"]="http://bugs.launchpad.net/drizzle"
S["PACKAGE_STRING"]="drizzle7 7"
S["PACKAGE_VERSION"]="7"
S["PACKAGE_TARNAME"]="drizzle7"
S["PACKAGE_NAME"]="drizzle7"
S["PATH_SEPARATOR"]=":"
S["SHELL"]="/bin/sh"
_ACAWK
cat >>"$tmp/subs1.awk" <<_ACAWK &&
  for (key in S) S_is_set[key] = 1
  FS = ""

}
{
  line = $ 0
  nfields = split(line, field, "@")
  substed = 0
  len = length(field[1])
  for (i = 2; i < nfields; i++) {
    key = field[i]
    keylen = length(key)
    if (S_is_set[key]) {
      value = S[key]
      line = substr(line, 1, len) "" value "" substr(line, len + keylen + 3)
      len += length(value) + length(field[++i])
      substed = 1
    } else
      len += 1 + keylen
  }

  print line
}

_ACAWK
if sed "s/$ac_cr//" < /dev/null > /dev/null 2>&1; then
  sed "s/$ac_cr\$//; s/$ac_cr/$ac_cs_awk_cr/g"
else
  cat
fi < "$tmp/subs1.awk" > "$tmp/subs.awk" \
  || as_fn_error "could not setup config files machinery" "$LINENO" 5
fi # test -n "$CONFIG_FILES"

# Set up the scripts for CONFIG_HEADERS section.
# No need to generate them if there are no CONFIG_HEADERS.
# This happens for instance with `./config.status Makefile'.
if test -n "$CONFIG_HEADERS"; then
cat >"$tmp/defines.awk" <<\_ACAWK ||
BEGIN {
D["PACKAGE_NAME"]=" \"drizzle7\""
D["PACKAGE_TARNAME"]=" \"drizzle7\""
D["PACKAGE_VERSION"]=" \"7\""
D["PACKAGE_STRING"]=" \"drizzle7 7\""
D["PACKAGE_BUGREPORT"]=" \"http://bugs.launchpad.net/drizzle\""
D["PACKAGE_URL"]=" \"\""
D["STDC_HEADERS"]=" 1"
D["HAVE_SYS_TYPES_H"]=" 1"
D["HAVE_SYS_STAT_H"]=" 1"
D["HAVE_STDLIB_H"]=" 1"
D["HAVE_STRING_H"]=" 1"
D["HAVE_MEMORY_H"]=" 1"
D["HAVE_STRINGS_H"]=" 1"
D["HAVE_INTTYPES_H"]=" 1"
D["HAVE_STDINT_H"]=" 1"
D["HAVE_UNISTD_H"]=" 1"
D["__EXTENSIONS__"]=" 1"
D["_ALL_SOURCE"]=" 1"
D["_GNU_SOURCE"]=" 1"
D["_POSIX_PTHREAD_SEMANTICS"]=" 1"
D["_TANDEM_SOURCE"]=" 1"
D["PANDORA_RELEASE_VERSION"]=" \"2011.07.21\""
D["HAVE_DLFCN_H"]=" 1"
D["LT_OBJDIR"]=" \".libs/\""
D["HAVE_VISIBILITY"]=" 1"
D["PACKAGE"]=" \"drizzle7\""
D["VERSION"]=" \"7\""
D["DRIZZLE7_VC_REVNO"]=" 2359"
D["DRIZZLE7_VC_REVID"]=" \"me@mark.atwood.name-20110704014029-msdso7k8gibt084t\""
D["DRIZZLE7_VC_BRANCH"]=" \"drizzle\""
D["DRIZZLE7_RELEASE_DATE"]=" \"2011.07\""
D["DRIZZLE7_RELEASE_NODOTS_DATE"]=" 201107"
D["DRIZZLE7_RELEASE_COMMENT"]=" \"drizzle\""
D["DRIZZLE7_RELEASE_VERSION"]=" \"2011.07.21\""
D["DRIZZLE7_RELEASE_ID"]=" 20110721"
D["HOST_VENDOR"]=" \"unknown\""
D["HOST_OS"]=" \"linux-gnu\""
D["HOST_CPU"]=" \"x86_64\""
D["TARGET_VENDOR"]=" \"unknown\""
D["TARGET_OS"]=" \"linux-gnu\""
D["TARGET_CPU"]=" \"x86_64\""
D["TARGET_OS_LINUX"]=" 1"
D["STDCXX_98_HEADERS"]=" /**/"
D["CSTDINT_H"]=" <tr1/cstdint>"
D["__STDC_LIMIT_MACROS"]=" 1"
D["CINTTYPES_H"]=" <tr1/cinttypes>"
D["restrict"]=" __restrict"
D["TIME_WITH_SYS_TIME"]=" 1"
D["HAVE_CLOCK_GETTIME"]=" 1"
D["HAVE_SYS_SOCKET_H"]=" 1"
D["SIZEOF_OFF_T"]=" 8"
D["SIZEOF_SIZE_T"]=" 8"
D["SIZEOF_SIZE_T"]=" 8"
D["SIZEOF_LONG_LONG"]=" 8"
D["SIZEOF_LONG_LONG"]=" 8"
D["HAVE_DECL_MADVISE"]=" 0"
D["HAVE_GCC_ATOMIC_BUILTINS"]=" 1"
D["HAVE_ASSERT_H"]=" 1"
D["HAVE_LIBINTL_H"]=" 1"
D["HAVE_PTHREAD"]=" 1"
D["HAVE_PTHREAD_YIELD_ZERO_ARG"]=" 1"
D["HAVE_PTHREAD_ATTR_GETSTACKSIZE"]=" 1"
D["HAVE_PTHREAD_ATTR_SETSCHEDPARAM"]=" 1"
D["HAVE_PTHREAD_ATTR_SETSTACKSIZE"]=" 1"
D["HAVE_PTHREAD_KEY_DELETE"]=" 1"
D["HAVE_PTHREAD_RWLOCK_RDLOCK"]=" 1"
D["HAVE_PTHREAD_SETSCHEDPARAM"]=" 1"
D["HAVE_PTHREAD_SIGMASK"]=" 1"
D["HAVE_READDIR_R"]=" 1"
D["HAVE_SIGWAIT"]=" 1"
D["HAVE_PTHREAD_ATTR_SETSCOPE"]=" 1"
D["HAVE_PTHREAD_YIELD_ZERO_ARG"]=" 1"
D["HAVE_UUID_UUID_H"]=" 1"
D["HAVE_LIBUUID"]=" 1"
D["HAVE_LIBZ"]=" 1"
D["HAVE_LIBPCRE"]=" 1"
D["PCRE_HEADER"]=" <pcre.h>"
D["HAVE_LIBREADLINE"]=" 1"
D["HAVE_READLINE_READLINE_H"]=" 1"
D["HAVE_READLINE_HISTORY"]=" 1"
D["HAVE_READLINE_HISTORY_H"]=" 1"
D["HAVE_RL_COMPENTRY"]=" 1"
D["HAVE_WORKING_RL_COMPENTRY"]=" 1"
D["HAVE_RL_COMPLETION"]=" 1"
D["GWINSZ_IN_SYS_IOCTL"]=" 1"
D["HAVE_LIBDL"]=" 1"
D["HAVE_DLOPEN"]=" 1"
D["HAVE_UTIME_H"]=" 1"
D["HAVE_STDLIB_H"]=" 1"
D["HAVE_UNISTD_H"]=" 1"
D["HAVE_SYS_PARAM_H"]=" 1"
D["HAVE_ALLOCA_H"]=" 1"
D["HAVE_ALLOCA"]=" 1"
D["HAVE_UTIME_NULL"]=" 1"
D["HAVE_VPRINTF"]=" 1"
D["HAVE_FDATASYNC"]=" 1"
D["HAVE_BACKTRACE"]=" 1"
D["HAVE_BACKTRACE_SYMBOLS"]=" 1"
D["HAVE_BACKTRACE_SYMBOLS_FD"]=" 1"
D["HAVE_DIRENT_H"]=" 1"
D["STDC_HEADERS"]=" 1"
D["HAVE_SYS_WAIT_H"]=" 1"
D["HAVE__BOOL"]=" 1"
D["HAVE_STDBOOL_H"]=" 1"
D["HAVE_SYS_TYPES_H"]=" 1"
D["HAVE_FPU_CONTROL_H"]=" 1"
D["HAVE_SYS_SELECT_H"]=" 1"
D["HAVE_UTIME_H"]=" 1"
D["HAVE_SYS_MMAN_H"]=" 1"
D["HAVE_SCHED_H"]=" 1"
D["HAVE_SYS_PRCTL_H"]=" 1"
D["HAVE_EXECINFO_H"]=" 1"
D["HAVE_LOCALE_H"]=" 1"
D["HAVE_TERMCAP_H"]=" 1"
D["HAVE_TERMIO_H"]=" 1"
D["HAVE_TERMIOS_H"]=" 1"
D["HAVE_ASM_TERMBITS_H"]=" 1"
D["HAVE_PATHS_H"]=" 1"
D["HAVE_CURSES_H"]=" 1"
D["HAVE_TERM_H"]=" 1"
D["HAVE_UINT"]=" 1"
D["HAVE_ULONG"]=" 1"
D["HAVE_CXXABI_H"]=" 1"
D["HAVE_ABI_CXA_DEMANGLE"]=" 1"
D["HAVE_LIBC"]=" 1"
D["HAVE_LIBC"]=" 1"
D["HAVE_LIBC"]=" 1"
D["HAVE_LIBC"]=" 1"
D["HAVE_LIBC"]=" 1"
D["HAVE_LIBC"]=" 1"
D["BOOST_FILESYSTEM_DEPRECATED"]=" 1"
D["HAVE_LIBC"]=" 1"
D["HAVE_LIBC"]=" 1"
D["HAVE_LIBSQLITE3"]=" 1"
D["HAVE_LIBCURL"]=" 1"
D["HAVE_LIBLDAP"]=" 1"
D["HAVE_LIBAIO_H"]=" 1"
D["HAVE_LIBAIO"]=" 1"
D["LINUX_NATIVE_AIO"]=" 1"
D["HAVE_GETPAGESIZE"]=" 1"
D["HAVE_MMAP"]=" 1"
D["HAVE_LIBEVENT"]=" 1"
D["HAVE_EVENT_BASE_NEW"]=" 1"
D["HAVE_EVENT_BASE_FREE"]=" 1"
D["HAVE_EVENT_BASE_GET_METHOD"]=" 1"
D["MEMCACHED_BINARY"]=" \"no\""
D["HAVE_LIBPAM"]=" 1"
D["HAVE_AIO_H"]=" 1"
D["HAVE_SCHED_H"]=" 1"
D["SIZEOF_INT"]=" 4"
D["SIZEOF_LONG"]=" 8"
D["SIZEOF_VOIDP"]=" 8"
D["HAVE_SCHED_YIELD"]=" 1"
D["HAVE_FDATASYNC"]=" 1"
D["HAVE_LOCALTIME_R"]=" 1"
D["HAVE_PREAD"]=" 1"
D["HAVE_UNAME"]=" 1"
D["HAVE_MUNMAP"]=" 1"
D["HAVE_MEMCHR"]=" 1"
D["HAVE_GETPAGESIZE"]=" 1"
D["HAVE_BZERO"]=" 1"
D["HAVE_ATOMIC_PTHREAD_T"]=" 1"
D["HAVE_ATTR_HIDDEN"]=" 1"
D["IB_HAVE_PAUSE_INSTRUCTION"]=" 1"
D["HAVE_LIBGCRYPT"]=" 1"
  for (key in D) D_is_set[key] = 1
  FS = ""
}
/^[\t ]*#[\t ]*(define|undef)[\t ]+[_abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ][_abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789]*([\t (]|$)/ {
  line = $ 0
  split(line, arg, " ")
  if (arg[1] == "#") {
    defundef = arg[2]
    mac1 = arg[3]
  } else {
    defundef = substr(arg[1], 2)
    mac1 = arg[2]
  }
  split(mac1, mac2, "(") #)
  macro = mac2[1]
  prefix = substr(line, 1, index(line, defundef) - 1)
  if (D_is_set[macro]) {
    # Preserve the white space surrounding the "#".
    print prefix "define", macro P[macro] D[macro]
    next
  } else {
    # Replace #undef with comments.  This is necessary, for example,
    # in the case of _POSIX_SOURCE, which is predefined and required
    # on some systems where configure will not decide to define it.
    if (defundef == "undef") {
      print "/*", prefix defundef, macro, "*/"
      next
    }
  }
}
{ print }
_ACAWK
  as_fn_error "could not setup config headers machinery" "$LINENO" 5
fi # test -n "$CONFIG_HEADERS"


eval set X "  :F $CONFIG_FILES  :H $CONFIG_HEADERS    :C $CONFIG_COMMANDS"
shift
for ac_tag
do
  case $ac_tag in
  :[FHLC]) ac_mode=$ac_tag; continue;;
  esac
  case $ac_mode$ac_tag in
  :[FHL]*:*);;
  :L* | :C*:*) as_fn_error "invalid tag \`$ac_tag'" "$LINENO" 5;;
  :[FH]-) ac_tag=-:-;;
  :[FH]*) ac_tag=$ac_tag:$ac_tag.in;;
  esac
  ac_save_IFS=$IFS
  IFS=:
  set x $ac_tag
  IFS=$ac_save_IFS
  shift
  ac_file=$1
  shift

  case $ac_mode in
  :L) ac_source=$1;;
  :[FH])
    ac_file_inputs=
    for ac_f
    do
      case $ac_f in
      -) ac_f="$tmp/stdin";;
      *) # Look for the file first in the build tree, then in the source tree
	 # (if the path is not absolute).  The absolute path cannot be DOS-style,
	 # because $ac_f cannot contain `:'.
	 test -f "$ac_f" ||
	   case $ac_f in
	   [\\/$]*) false;;
	   *) test -f "$srcdir/$ac_f" && ac_f="$srcdir/$ac_f";;
	   esac ||
	   as_fn_error "cannot find input file: \`$ac_f'" "$LINENO" 5;;
      esac
      case $ac_f in *\'*) ac_f=`$as_echo "$ac_f" | sed "s/'/'\\\\\\\\''/g"`;; esac
      as_fn_append ac_file_inputs " '$ac_f'"
    done

    # Let's still pretend it is `configure' which instantiates (i.e., don't
    # use $as_me), people would be surprised to read:
    #    /* config.h.  Generated by config.status.  */
    configure_input='Generated from '`
	  $as_echo "$*" | sed 's|^[^:]*/||;s|:[^:]*/|, |g'
	`' by configure.'
    if test x"$ac_file" != x-; then
      configure_input="$ac_file.  $configure_input"
      { $as_echo "$as_me:${as_lineno-$LINENO}: creating $ac_file" >&5
$as_echo "$as_me: creating $ac_file" >&6;}
    fi
    # Neutralize special characters interpreted by sed in replacement strings.
    case $configure_input in #(
    *\&* | *\|* | *\\* )
       ac_sed_conf_input=`$as_echo "$configure_input" |
       sed 's/[\\\\&|]/\\\\&/g'`;; #(
    *) ac_sed_conf_input=$configure_input;;
    esac

    case $ac_tag in
    *:-:* | *:-) cat >"$tmp/stdin" \
      || as_fn_error "could not create $ac_file" "$LINENO" 5 ;;
    esac
    ;;
  esac

  ac_dir=`$as_dirname -- "$ac_file" ||
$as_expr X"$ac_file" : 'X\(.*[^/]\)//*[^/][^/]*/*$' \| \
	 X"$ac_file" : 'X\(//\)[^/]' \| \
	 X"$ac_file" : 'X\(//\)$' \| \
	 X"$ac_file" : 'X\(/\)' \| . 2>/dev/null ||
$as_echo X"$ac_file" |
    sed '/^X\(.*[^/]\)\/\/*[^/][^/]*\/*$/{
	    s//\1/
	    q
	  }
	  /^X\(\/\/\)[^/].*/{
	    s//\1/
	    q
	  }
	  /^X\(\/\/\)$/{
	    s//\1/
	    q
	  }
	  /^X\(\/\).*/{
	    s//\1/
	    q
	  }
	  s/.*/./; q'`
  as_dir="$ac_dir"; as_fn_mkdir_p
  ac_builddir=.

case "$ac_dir" in
.) ac_dir_suffix= ac_top_builddir_sub=. ac_top_build_prefix= ;;
*)
  ac_dir_suffix=/`$as_echo "$ac_dir" | sed 's|^\.[\\/]||'`
  # A ".." for each directory in $ac_dir_suffix.
  ac_top_builddir_sub=`$as_echo "$ac_dir_suffix" | sed 's|/[^\\/]*|/..|g;s|/||'`
  case $ac_top_builddir_sub in
  "") ac_top_builddir_sub=. ac_top_build_prefix= ;;
  *)  ac_top_build_prefix=$ac_top_builddir_sub/ ;;
  esac ;;
esac
ac_abs_top_builddir=$ac_pwd
ac_abs_builddir=$ac_pwd$ac_dir_suffix
# for backward compatibility:
ac_top_builddir=$ac_top_build_prefix

case $srcdir in
  .)  # We are building in place.
    ac_srcdir=.
    ac_top_srcdir=$ac_top_builddir_sub
    ac_abs_top_srcdir=$ac_pwd ;;
  [\\/]* | ?:[\\/]* )  # Absolute name.
    ac_srcdir=$srcdir$ac_dir_suffix;
    ac_top_srcdir=$srcdir
    ac_abs_top_srcdir=$srcdir ;;
  *) # Relative name.
    ac_srcdir=$ac_top_build_prefix$srcdir$ac_dir_suffix
    ac_top_srcdir=$ac_top_build_prefix$srcdir
    ac_abs_top_srcdir=$ac_pwd/$srcdir ;;
esac
ac_abs_srcdir=$ac_abs_top_srcdir$ac_dir_suffix


  case $ac_mode in
  :F)
  #
  # CONFIG_FILE
  #

  case $INSTALL in
  [\\/$]* | ?:[\\/]* ) ac_INSTALL=$INSTALL ;;
  *) ac_INSTALL=$ac_top_build_prefix$INSTALL ;;
  esac
  ac_MKDIR_P=$MKDIR_P
  case $MKDIR_P in
  [\\/$]* | ?:[\\/]* ) ;;
  */*) ac_MKDIR_P=$ac_top_build_prefix$MKDIR_P ;;
  esac
# If the template does not know about datarootdir, expand it.
# FIXME: This hack should be removed a few years after 2.60.
ac_datarootdir_hack=; ac_datarootdir_seen=
ac_sed_dataroot='
/datarootdir/ {
  p
  q
}
/@datadir@/p
/@docdir@/p
/@infodir@/p
/@localedir@/p
/@mandir@/p'
case `eval "sed -n \"\$ac_sed_dataroot\" $ac_file_inputs"` in
*datarootdir*) ac_datarootdir_seen=yes;;
*@datadir@*|*@docdir@*|*@infodir@*|*@localedir@*|*@mandir@*)
  { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: $ac_file_inputs seems to ignore the --datarootdir setting" >&5
$as_echo "$as_me: WARNING: $ac_file_inputs seems to ignore the --datarootdir setting" >&2;}
  ac_datarootdir_hack='
  s&@datadir@&${datarootdir}&g
  s&@docdir@&${datarootdir}/doc/${PACKAGE_TARNAME}&g
  s&@infodir@&${datarootdir}/info&g
  s&@localedir@&${datarootdir}/locale&g
  s&@mandir@&${datarootdir}/man&g
  s&\${datarootdir}&${prefix}/share&g' ;;
esac
ac_sed_extra="/^[	 ]*VPATH[	 ]*=/{
s/:*\$(srcdir):*/:/
s/:*\${srcdir}:*/:/
s/:*@srcdir@:*/:/
s/^\([^=]*=[	 ]*\):*/\1/
s/:*$//
s/^[^=]*=[	 ]*$//
}

:t
/@[a-zA-Z_][a-zA-Z_0-9]*@/!b
s|@configure_input@|$ac_sed_conf_input|;t t
s&@top_builddir@&$ac_top_builddir_sub&;t t
s&@top_build_prefix@&$ac_top_build_prefix&;t t
s&@srcdir@&$ac_srcdir&;t t
s&@abs_srcdir@&$ac_abs_srcdir&;t t
s&@top_srcdir@&$ac_top_srcdir&;t t
s&@abs_top_srcdir@&$ac_abs_top_srcdir&;t t
s&@builddir@&$ac_builddir&;t t
s&@abs_builddir@&$ac_abs_builddir&;t t
s&@abs_top_builddir@&$ac_abs_top_builddir&;t t
s&@INSTALL@&$ac_INSTALL&;t t
s&@MKDIR_P@&$ac_MKDIR_P&;t t
$ac_datarootdir_hack
"
eval sed \"\$ac_sed_extra\" "$ac_file_inputs" | $AWK -f "$tmp/subs.awk" >$tmp/out \
  || as_fn_error "could not create $ac_file" "$LINENO" 5

test -z "$ac_datarootdir_hack$ac_datarootdir_seen" &&
  { ac_out=`sed -n '/\${datarootdir}/p' "$tmp/out"`; test -n "$ac_out"; } &&
  { ac_out=`sed -n '/^[	 ]*datarootdir[	 ]*:*=/p' "$tmp/out"`; test -z "$ac_out"; } &&
  { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: $ac_file contains a reference to the variable \`datarootdir'
which seems to be undefined.  Please make sure it is defined." >&5
$as_echo "$as_me: WARNING: $ac_file contains a reference to the variable \`datarootdir'
which seems to be undefined.  Please make sure it is defined." >&2;}

  rm -f "$tmp/stdin"
  case $ac_file in
  -) cat "$tmp/out" && rm -f "$tmp/out";;
  *) rm -f "$ac_file" && mv "$tmp/out" "$ac_file";;
  esac \
  || as_fn_error "could not create $ac_file" "$LINENO" 5
 ;;
  :H)
  #
  # CONFIG_HEADER
  #
  if test x"$ac_file" != x-; then
    {
      $as_echo "/* $configure_input  */" \
      && eval '$AWK -f "$tmp/defines.awk"' "$ac_file_inputs"
    } >"$tmp/config.h" \
      || as_fn_error "could not create $ac_file" "$LINENO" 5
    if diff "$ac_file" "$tmp/config.h" >/dev/null 2>&1; then
      { $as_echo "$as_me:${as_lineno-$LINENO}: $ac_file is unchanged" >&5
$as_echo "$as_me: $ac_file is unchanged" >&6;}
    else
      rm -f "$ac_file"
      mv "$tmp/config.h" "$ac_file" \
	|| as_fn_error "could not create $ac_file" "$LINENO" 5
    fi
  else
    $as_echo "/* $configure_input  */" \
      && eval '$AWK -f "$tmp/defines.awk"' "$ac_file_inputs" \
      || as_fn_error "could not create -" "$LINENO" 5
  fi
# Compute "$ac_file"'s index in $config_headers.
_am_arg="$ac_file"
_am_stamp_count=1
for _am_header in $config_headers :; do
  case $_am_header in
    $_am_arg | $_am_arg:* )
      break ;;
    * )
      _am_stamp_count=`expr $_am_stamp_count + 1` ;;
  esac
done
echo "timestamp for $_am_arg" >`$as_dirname -- "$_am_arg" ||
$as_expr X"$_am_arg" : 'X\(.*[^/]\)//*[^/][^/]*/*$' \| \
	 X"$_am_arg" : 'X\(//\)[^/]' \| \
	 X"$_am_arg" : 'X\(//\)$' \| \
	 X"$_am_arg" : 'X\(/\)' \| . 2>/dev/null ||
$as_echo X"$_am_arg" |
    sed '/^X\(.*[^/]\)\/\/*[^/][^/]*\/*$/{
	    s//\1/
	    q
	  }
	  /^X\(\/\/\)[^/].*/{
	    s//\1/
	    q
	  }
	  /^X\(\/\/\)$/{
	    s//\1/
	    q
	  }
	  /^X\(\/\).*/{
	    s//\1/
	    q
	  }
	  s/.*/./; q'`/stamp-h$_am_stamp_count
 ;;

  :C)  { $as_echo "$as_me:${as_lineno-$LINENO}: executing $ac_file commands" >&5
$as_echo "$as_me: executing $ac_file commands" >&6;}
 ;;
  esac


  case $ac_file$ac_mode in
    "depfiles":C) test x"$AMDEP_TRUE" != x"" || {
  # Autoconf 2.62 quotes --file arguments for eval, but not when files
  # are listed without --file.  Let's play safe and only enable the eval
  # if we detect the quoting.
  case $CONFIG_FILES in
  *\'*) eval set x "$CONFIG_FILES" ;;
  *)   set x $CONFIG_FILES ;;
  esac
  shift
  for mf
  do
    # Strip MF so we end up with the name of the file.
    mf=`echo "$mf" | sed -e 's/:.*$//'`
    # Check whether this is an Automake generated Makefile or not.
    # We used to match only the files named `Makefile.in', but
    # some people rename them; so instead we look at the file content.
    # Grep'ing the first line is not enough: some people post-process
    # each Makefile.in and add a new line on top of each file to say so.
    # Grep'ing the whole file is not good either: AIX grep has a line
    # limit of 2048, but all sed's we know have understand at least 4000.
    if sed -n 's,^#.*generated by automake.*,X,p' "$mf" | grep X >/dev/null 2>&1; then
      dirpart=`$as_dirname -- "$mf" ||
$as_expr X"$mf" : 'X\(.*[^/]\)//*[^/][^/]*/*$' \| \
	 X"$mf" : 'X\(//\)[^/]' \| \
	 X"$mf" : 'X\(//\)$' \| \
	 X"$mf" : 'X\(/\)' \| . 2>/dev/null ||
$as_echo X"$mf" |
    sed '/^X\(.*[^/]\)\/\/*[^/][^/]*\/*$/{
	    s//\1/
	    q
	  }
	  /^X\(\/\/\)[^/].*/{
	    s//\1/
	    q
	  }
	  /^X\(\/\/\)$/{
	    s//\1/
	    q
	  }
	  /^X\(\/\).*/{
	    s//\1/
	    q
	  }
	  s/.*/./; q'`
    else
      continue
    fi
    # Extract the definition of DEPDIR, am__include, and am__quote
    # from the Makefile without running `make'.
    DEPDIR=`sed -n 's/^DEPDIR = //p' < "$mf"`
    test -z "$DEPDIR" && continue
    am__include=`sed -n 's/^am__include = //p' < "$mf"`
    test -z "am__include" && continue
    am__quote=`sed -n 's/^am__quote = //p' < "$mf"`
    # When using ansi2knr, U may be empty or an underscore; expand it
    U=`sed -n 's/^U = //p' < "$mf"`
    # Find all dependency output files, they are included files with
    # $(DEPDIR) in their names.  We invoke sed twice because it is the
    # simplest approach to changing $(DEPDIR) to its actual value in the
    # expansion.
    for file in `sed -n "
      s/^$am__include $am__quote\(.*(DEPDIR).*\)$am__quote"'$/\1/p' <"$mf" | \
	 sed -e 's/\$(DEPDIR)/'"$DEPDIR"'/g' -e 's/\$U/'"$U"'/g'`; do
      # Make sure the directory exists.
      test -f "$dirpart/$file" && continue
      fdir=`$as_dirname -- "$file" ||
$as_expr X"$file" : 'X\(.*[^/]\)//*[^/][^/]*/*$' \| \
	 X"$file" : 'X\(//\)[^/]' \| \
	 X"$file" : 'X\(//\)$' \| \
	 X"$file" : 'X\(/\)' \| . 2>/dev/null ||
$as_echo X"$file" |
    sed '/^X\(.*[^/]\)\/\/*[^/][^/]*\/*$/{
	    s//\1/
	    q
	  }
	  /^X\(\/\/\)[^/].*/{
	    s//\1/
	    q
	  }
	  /^X\(\/\/\)$/{
	    s//\1/
	    q
	  }
	  /^X\(\/\).*/{
	    s//\1/
	    q
	  }
	  s/.*/./; q'`
      as_dir=$dirpart/$fdir; as_fn_mkdir_p
      # echo "creating $dirpart/$file"
      echo '# dummy' > "$dirpart/$file"
    done
  done
}
 ;;
    "libtool":C)

    # See if we are running on zsh, and set the options which allow our
    # commands through without removal of \ escapes.
    if test -n "${ZSH_VERSION+set}" ; then
      setopt NO_GLOB_SUBST
    fi

    cfgfile="${ofile}T"
    trap "$RM \"$cfgfile\"; exit 1" 1 2 15
    $RM "$cfgfile"

    cat <<_LT_EOF >> "$cfgfile"
#! $SHELL

# `$ECHO "$ofile" | sed 's%^.*/%%'` - Provide generalized library-building support services.
# Generated automatically by $as_me ($PACKAGE$TIMESTAMP) $VERSION
# Libtool was configured on host `(hostname || uname -n) 2>/dev/null | sed 1q`:
# NOTE: Changes made to this file will be lost: look at ltmain.sh.
#
#   Copyright (C) 1996, 1997, 1998, 1999, 2000, 2001, 2003, 2004, 2005,
#                 2006, 2007, 2008 Free Software Foundation, Inc.
#   Written by Gordon Matzigkeit, 1996
#
#   This file is part of GNU Libtool.
#
# GNU Libtool is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License as
# published by the Free Software Foundation; either version 2 of
# the License, or (at your option) any later version.
#
# As a special exception to the GNU General Public License,
# if you distribute this file as part of a program or library that
# is built using GNU Libtool, you may include this file under the
# same distribution terms that you use for the rest of that program.
#
# GNU Libtool is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with GNU Libtool; see the file COPYING.  If not, a copy
# can be downloaded from http://www.gnu.org/licenses/gpl.html, or
# obtained by writing to the Free Software Foundation, Inc.,
# 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.


# The names of the tagged configurations supported by this script.
available_tags="CXX "

# ### BEGIN LIBTOOL CONFIG

# Whether or not to build static libraries.
build_old_libs=$enable_static

# Which release of libtool.m4 was used?
macro_version=$macro_version
macro_revision=$macro_revision

# Whether or not to build shared libraries.
build_libtool_libs=$enable_shared

# What type of objects to build.
pic_mode=$pic_mode

# Whether or not to optimize for fast installation.
fast_install=$enable_fast_install

# The host system.
host_alias=$host_alias
host=$host
host_os=$host_os

# The build system.
build_alias=$build_alias
build=$build
build_os=$build_os

# A sed program that does not truncate output.
SED=$lt_SED

# Sed that helps us avoid accidentally triggering echo(1) options like -n.
Xsed="\$SED -e 1s/^X//"

# A grep program that handles long lines.
GREP=$lt_GREP

# An ERE matcher.
EGREP=$lt_EGREP

# A literal string matcher.
FGREP=$lt_FGREP

# A BSD- or MS-compatible name lister.
NM=$lt_NM

# Whether we need soft or hard links.
LN_S=$lt_LN_S

# What is the maximum length of a command?
max_cmd_len=$max_cmd_len

# Object file suffix (normally "o").
objext=$ac_objext

# Executable file suffix (normally "").
exeext=$exeext

# whether the shell understands "unset".
lt_unset=$lt_unset

# turn spaces into newlines.
SP2NL=$lt_lt_SP2NL

# turn newlines into spaces.
NL2SP=$lt_lt_NL2SP

# How to create reloadable object files.
reload_flag=$lt_reload_flag
reload_cmds=$lt_reload_cmds

# An object symbol dumper.
OBJDUMP=$lt_OBJDUMP

# Method to check whether dependent libraries are shared objects.
deplibs_check_method=$lt_deplibs_check_method

# Command to use when deplibs_check_method == "file_magic".
file_magic_cmd=$lt_file_magic_cmd

# The archiver.
AR=$lt_AR
AR_FLAGS=$lt_AR_FLAGS

# A symbol stripping program.
STRIP=$lt_STRIP

# Commands used to install an old-style archive.
RANLIB=$lt_RANLIB
old_postinstall_cmds=$lt_old_postinstall_cmds
old_postuninstall_cmds=$lt_old_postuninstall_cmds

# A C compiler.
LTCC=$lt_CC

# LTCC compiler flags.
LTCFLAGS=$lt_CFLAGS

# Take the output of nm and produce a listing of raw symbols and C names.
global_symbol_pipe=$lt_lt_cv_sys_global_symbol_pipe

# Transform the output of nm in a proper C declaration.
global_symbol_to_cdecl=$lt_lt_cv_sys_global_symbol_to_cdecl

# Transform the output of nm in a C name address pair.
global_symbol_to_c_name_address=$lt_lt_cv_sys_global_symbol_to_c_name_address

# Transform the output of nm in a C name address pair when lib prefix is needed.
global_symbol_to_c_name_address_lib_prefix=$lt_lt_cv_sys_global_symbol_to_c_name_address_lib_prefix

# The name of the directory that contains temporary libtool files.
objdir=$objdir

# Shell to use when invoking shell scripts.
SHELL=$lt_SHELL

# An echo program that does not interpret backslashes.
ECHO=$lt_ECHO

# Used to examine libraries when file_magic_cmd begins with "file".
MAGIC_CMD=$MAGIC_CMD

# Must we lock files when doing compilation?
need_locks=$lt_need_locks

# Tool to manipulate archived DWARF debug symbol files on Mac OS X.
DSYMUTIL=$lt_DSYMUTIL

# Tool to change global to local symbols on Mac OS X.
NMEDIT=$lt_NMEDIT

# Tool to manipulate fat objects and archives on Mac OS X.
LIPO=$lt_LIPO

# ldd/readelf like tool for Mach-O binaries on Mac OS X.
OTOOL=$lt_OTOOL

# ldd/readelf like tool for 64 bit Mach-O binaries on Mac OS X 10.4.
OTOOL64=$lt_OTOOL64

# Old archive suffix (normally "a").
libext=$libext

# Shared library suffix (normally ".so").
shrext_cmds=$lt_shrext_cmds

# The commands to extract the exported symbol list from a shared archive.
extract_expsyms_cmds=$lt_extract_expsyms_cmds

# Variables whose values should be saved in libtool wrapper scripts and
# restored at link time.
variables_saved_for_relink=$lt_variables_saved_for_relink

# Do we need the "lib" prefix for modules?
need_lib_prefix=$need_lib_prefix

# Do we need a version for libraries?
need_version=$need_version

# Library versioning type.
version_type=$version_type

# Shared library runtime path variable.
runpath_var=$runpath_var

# Shared library path variable.
shlibpath_var=$shlibpath_var

# Is shlibpath searched before the hard-coded library search path?
shlibpath_overrides_runpath=$shlibpath_overrides_runpath

# Format of library name prefix.
libname_spec=$lt_libname_spec

# List of archive names.  First name is the real one, the rest are links.
# The last name is the one that the linker finds with -lNAME
library_names_spec=$lt_library_names_spec

# The coded name of the library, if different from the real name.
soname_spec=$lt_soname_spec

# Command to use after installation of a shared archive.
postinstall_cmds=$lt_postinstall_cmds

# Command to use after uninstallation of a shared archive.
postuninstall_cmds=$lt_postuninstall_cmds

# Commands used to finish a libtool library installation in a directory.
finish_cmds=$lt_finish_cmds

# As "finish_cmds", except a single script fragment to be evaled but
# not shown.
finish_eval=$lt_finish_eval

# Whether we should hardcode library paths into libraries.
hardcode_into_libs=$hardcode_into_libs

# Compile-time system search path for libraries.
sys_lib_search_path_spec=$lt_sys_lib_search_path_spec

# Run-time system search path for libraries.
sys_lib_dlsearch_path_spec=$lt_sys_lib_dlsearch_path_spec

# Whether dlopen is supported.
dlopen_support=$enable_dlopen

# Whether dlopen of programs is supported.
dlopen_self=$enable_dlopen_self

# Whether dlopen of statically linked programs is supported.
dlopen_self_static=$enable_dlopen_self_static

# Commands to strip libraries.
old_striplib=$lt_old_striplib
striplib=$lt_striplib


# The linker used to build libraries.
LD=$lt_LD

# Commands used to build an old-style archive.
old_archive_cmds=$lt_old_archive_cmds

# A language specific compiler.
CC=$lt_compiler

# Is the compiler the GNU compiler?
with_gcc=$GCC

# Compiler flag to turn off builtin functions.
no_builtin_flag=$lt_lt_prog_compiler_no_builtin_flag

# How to pass a linker flag through the compiler.
wl=$lt_lt_prog_compiler_wl

# Additional compiler flags for building library objects.
pic_flag=$lt_lt_prog_compiler_pic

# Compiler flag to prevent dynamic linking.
link_static_flag=$lt_lt_prog_compiler_static

# Does compiler simultaneously support -c and -o options?
compiler_c_o=$lt_lt_cv_prog_compiler_c_o

# Whether or not to add -lc for building shared libraries.
build_libtool_need_lc=$archive_cmds_need_lc

# Whether or not to disallow shared libs when runtime libs are static.
allow_libtool_libs_with_static_runtimes=$enable_shared_with_static_runtimes

# Compiler flag to allow reflexive dlopens.
export_dynamic_flag_spec=$lt_export_dynamic_flag_spec

# Compiler flag to generate shared objects directly from archives.
whole_archive_flag_spec=$lt_whole_archive_flag_spec

# Whether the compiler copes with passing no objects directly.
compiler_needs_object=$lt_compiler_needs_object

# Create an old-style archive from a shared archive.
old_archive_from_new_cmds=$lt_old_archive_from_new_cmds

# Create a temporary old-style archive to link instead of a shared archive.
old_archive_from_expsyms_cmds=$lt_old_archive_from_expsyms_cmds

# Commands used to build a shared archive.
archive_cmds=$lt_archive_cmds
archive_expsym_cmds=$lt_archive_expsym_cmds

# Commands used to build a loadable module if different from building
# a shared archive.
module_cmds=$lt_module_cmds
module_expsym_cmds=$lt_module_expsym_cmds

# Whether we are building with GNU ld or not.
with_gnu_ld=$lt_with_gnu_ld

# Flag that allows shared libraries with undefined symbols to be built.
allow_undefined_flag=$lt_allow_undefined_flag

# Flag that enforces no undefined symbols.
no_undefined_flag=$lt_no_undefined_flag

# Flag to hardcode \$libdir into a binary during linking.
# This must work even if \$libdir does not exist
hardcode_libdir_flag_spec=$lt_hardcode_libdir_flag_spec

# If ld is used when linking, flag to hardcode \$libdir into a binary
# during linking.  This must work even if \$libdir does not exist.
hardcode_libdir_flag_spec_ld=$lt_hardcode_libdir_flag_spec_ld

# Whether we need a single "-rpath" flag with a separated argument.
hardcode_libdir_separator=$lt_hardcode_libdir_separator

# Set to "yes" if using DIR/libNAME\${shared_ext} during linking hardcodes
# DIR into the resulting binary.
hardcode_direct=$hardcode_direct

# Set to "yes" if using DIR/libNAME\${shared_ext} during linking hardcodes
# DIR into the resulting binary and the resulting library dependency is
# "absolute",i.e impossible to change by setting \${shlibpath_var} if the
# library is relocated.
hardcode_direct_absolute=$hardcode_direct_absolute

# Set to "yes" if using the -LDIR flag during linking hardcodes DIR
# into the resulting binary.
hardcode_minus_L=$hardcode_minus_L

# Set to "yes" if using SHLIBPATH_VAR=DIR during linking hardcodes DIR
# into the resulting binary.
hardcode_shlibpath_var=$hardcode_shlibpath_var

# Set to "yes" if building a shared library automatically hardcodes DIR
# into the library and all subsequent libraries and executables linked
# against it.
hardcode_automatic=$hardcode_automatic

# Set to yes if linker adds runtime paths of dependent libraries
# to runtime path list.
inherit_rpath=$inherit_rpath

# Whether libtool must link a program against all its dependency libraries.
link_all_deplibs=$link_all_deplibs

# Fix the shell variable \$srcfile for the compiler.
fix_srcfile_path=$lt_fix_srcfile_path

# Set to "yes" if exported symbols are required.
always_export_symbols=$always_export_symbols

# The commands to list exported symbols.
export_symbols_cmds=$lt_export_symbols_cmds

# Symbols that should not be listed in the preloaded symbols.
exclude_expsyms=$lt_exclude_expsyms

# Symbols that must always be exported.
include_expsyms=$lt_include_expsyms

# Commands necessary for linking programs (against libraries) with templates.
prelink_cmds=$lt_prelink_cmds

# Specify filename containing input files.
file_list_spec=$lt_file_list_spec

# How to hardcode a shared library path into an executable.
hardcode_action=$hardcode_action

# The directories searched by this compiler when creating a shared library.
compiler_lib_search_dirs=$lt_compiler_lib_search_dirs

# Dependencies to place before and after the objects being linked to
# create a shared library.
predep_objects=$lt_predep_objects
postdep_objects=$lt_postdep_objects
predeps=$lt_predeps
postdeps=$lt_postdeps

# The library search path used internally by the compiler when linking
# a shared library.
compiler_lib_search_path=$lt_compiler_lib_search_path

# ### END LIBTOOL CONFIG

_LT_EOF

  case $host_os in
  aix3*)
    cat <<\_LT_EOF >> "$cfgfile"
# AIX sometimes has problems with the GCC collect2 program.  For some
# reason, if we set the COLLECT_NAMES environment variable, the problems
# vanish in a puff of smoke.
if test "X${COLLECT_NAMES+set}" != Xset; then
  COLLECT_NAMES=
  export COLLECT_NAMES
fi
_LT_EOF
    ;;
  esac


ltmain="$ac_aux_dir/ltmain.sh"


  # We use sed instead of cat because bash on DJGPP gets confused if
  # if finds mixed CR/LF and LF-only lines.  Since sed operates in
  # text mode, it properly converts lines to CR/LF.  This bash problem
  # is reportedly fixed, but why not run on old versions too?
  sed '/^# Generated shell functions inserted here/q' "$ltmain" >> "$cfgfile" \
    || (rm -f "$cfgfile"; exit 1)

  case $xsi_shell in
  yes)
    cat << \_LT_EOF >> "$cfgfile"

# func_dirname file append nondir_replacement
# Compute the dirname of FILE.  If nonempty, add APPEND to the result,
# otherwise set result to NONDIR_REPLACEMENT.
func_dirname ()
{
  case ${1} in
    */*) func_dirname_result="${1%/*}${2}" ;;
    *  ) func_dirname_result="${3}" ;;
  esac
}

# func_basename file
func_basename ()
{
  func_basename_result="${1##*/}"
}

# func_dirname_and_basename file append nondir_replacement
# perform func_basename and func_dirname in a single function
# call:
#   dirname:  Compute the dirname of FILE.  If nonempty,
#             add APPEND to the result, otherwise set result
#             to NONDIR_REPLACEMENT.
#             value returned in "$func_dirname_result"
#   basename: Compute filename of FILE.
#             value retuned in "$func_basename_result"
# Implementation must be kept synchronized with func_dirname
# and func_basename. For efficiency, we do not delegate to
# those functions but instead duplicate the functionality here.
func_dirname_and_basename ()
{
  case ${1} in
    */*) func_dirname_result="${1%/*}${2}" ;;
    *  ) func_dirname_result="${3}" ;;
  esac
  func_basename_result="${1##*/}"
}

# func_stripname prefix suffix name
# strip PREFIX and SUFFIX off of NAME.
# PREFIX and SUFFIX must not contain globbing or regex special
# characters, hashes, percent signs, but SUFFIX may contain a leading
# dot (in which case that matches only a dot).
func_stripname ()
{
  # pdksh 5.2.14 does not do ${X%$Y} correctly if both X and Y are
  # positional parameters, so assign one to ordinary parameter first.
  func_stripname_result=${3}
  func_stripname_result=${func_stripname_result#"${1}"}
  func_stripname_result=${func_stripname_result%"${2}"}
}

# func_opt_split
func_opt_split ()
{
  func_opt_split_opt=${1%%=*}
  func_opt_split_arg=${1#*=}
}

# func_lo2o object
func_lo2o ()
{
  case ${1} in
    *.lo) func_lo2o_result=${1%.lo}.${objext} ;;
    *)    func_lo2o_result=${1} ;;
  esac
}

# func_xform libobj-or-source
func_xform ()
{
  func_xform_result=${1%.*}.lo
}

# func_arith arithmetic-term...
func_arith ()
{
  func_arith_result=$(( $* ))
}

# func_len string
# STRING may not start with a hyphen.
func_len ()
{
  func_len_result=${#1}
}

_LT_EOF
    ;;
  *) # Bourne compatible functions.
    cat << \_LT_EOF >> "$cfgfile"

# func_dirname file append nondir_replacement
# Compute the dirname of FILE.  If nonempty, add APPEND to the result,
# otherwise set result to NONDIR_REPLACEMENT.
func_dirname ()
{
  # Extract subdirectory from the argument.
  func_dirname_result=`$ECHO "X${1}" | $Xsed -e "$dirname"`
  if test "X$func_dirname_result" = "X${1}"; then
    func_dirname_result="${3}"
  else
    func_dirname_result="$func_dirname_result${2}"
  fi
}

# func_basename file
func_basename ()
{
  func_basename_result=`$ECHO "X${1}" | $Xsed -e "$basename"`
}


# func_stripname prefix suffix name
# strip PREFIX and SUFFIX off of NAME.
# PREFIX and SUFFIX must not contain globbing or regex special
# characters, hashes, percent signs, but SUFFIX may contain a leading
# dot (in which case that matches only a dot).
# func_strip_suffix prefix name
func_stripname ()
{
  case ${2} in
    .*) func_stripname_result=`$ECHO "X${3}" \
           | $Xsed -e "s%^${1}%%" -e "s%\\\\${2}\$%%"`;;
    *)  func_stripname_result=`$ECHO "X${3}" \
           | $Xsed -e "s%^${1}%%" -e "s%${2}\$%%"`;;
  esac
}

# sed scripts:
my_sed_long_opt='1s/^\(-[^=]*\)=.*/\1/;q'
my_sed_long_arg='1s/^-[^=]*=//'

# func_opt_split
func_opt_split ()
{
  func_opt_split_opt=`$ECHO "X${1}" | $Xsed -e "$my_sed_long_opt"`
  func_opt_split_arg=`$ECHO "X${1}" | $Xsed -e "$my_sed_long_arg"`
}

# func_lo2o object
func_lo2o ()
{
  func_lo2o_result=`$ECHO "X${1}" | $Xsed -e "$lo2o"`
}

# func_xform libobj-or-source
func_xform ()
{
  func_xform_result=`$ECHO "X${1}" | $Xsed -e 's/\.[^.]*$/.lo/'`
}

# func_arith arithmetic-term...
func_arith ()
{
  func_arith_result=`expr "$@"`
}

# func_len string
# STRING may not start with a hyphen.
func_len ()
{
  func_len_result=`expr "$1" : ".*" 2>/dev/null || echo $max_cmd_len`
}

_LT_EOF
esac

case $lt_shell_append in
  yes)
    cat << \_LT_EOF >> "$cfgfile"

# func_append var value
# Append VALUE to the end of shell variable VAR.
func_append ()
{
  eval "$1+=\$2"
}
_LT_EOF
    ;;
  *)
    cat << \_LT_EOF >> "$cfgfile"

# func_append var value
# Append VALUE to the end of shell variable VAR.
func_append ()
{
  eval "$1=\$$1\$2"
}

_LT_EOF
    ;;
  esac


  sed -n '/^# Generated shell functions inserted here/,$p' "$ltmain" >> "$cfgfile" \
    || (rm -f "$cfgfile"; exit 1)

  mv -f "$cfgfile" "$ofile" ||
    (rm -f "$ofile" && cp "$cfgfile" "$ofile" && rm -f "$cfgfile")
  chmod +x "$ofile"


    cat <<_LT_EOF >> "$ofile"

# ### BEGIN LIBTOOL TAG CONFIG: CXX

# The linker used to build libraries.
LD=$lt_LD_CXX

# Commands used to build an old-style archive.
old_archive_cmds=$lt_old_archive_cmds_CXX

# A language specific compiler.
CC=$lt_compiler_CXX

# Is the compiler the GNU compiler?
with_gcc=$GCC_CXX

# Compiler flag to turn off builtin functions.
no_builtin_flag=$lt_lt_prog_compiler_no_builtin_flag_CXX

# How to pass a linker flag through the compiler.
wl=$lt_lt_prog_compiler_wl_CXX

# Additional compiler flags for building library objects.
pic_flag=$lt_lt_prog_compiler_pic_CXX

# Compiler flag to prevent dynamic linking.
link_static_flag=$lt_lt_prog_compiler_static_CXX

# Does compiler simultaneously support -c and -o options?
compiler_c_o=$lt_lt_cv_prog_compiler_c_o_CXX

# Whether or not to add -lc for building shared libraries.
build_libtool_need_lc=$archive_cmds_need_lc_CXX

# Whether or not to disallow shared libs when runtime libs are static.
allow_libtool_libs_with_static_runtimes=$enable_shared_with_static_runtimes_CXX

# Compiler flag to allow reflexive dlopens.
export_dynamic_flag_spec=$lt_export_dynamic_flag_spec_CXX

# Compiler flag to generate shared objects directly from archives.
whole_archive_flag_spec=$lt_whole_archive_flag_spec_CXX

# Whether the compiler copes with passing no objects directly.
compiler_needs_object=$lt_compiler_needs_object_CXX

# Create an old-style archive from a shared archive.
old_archive_from_new_cmds=$lt_old_archive_from_new_cmds_CXX

# Create a temporary old-style archive to link instead of a shared archive.
old_archive_from_expsyms_cmds=$lt_old_archive_from_expsyms_cmds_CXX

# Commands used to build a shared archive.
archive_cmds=$lt_archive_cmds_CXX
archive_expsym_cmds=$lt_archive_expsym_cmds_CXX

# Commands used to build a loadable module if different from building
# a shared archive.
module_cmds=$lt_module_cmds_CXX
module_expsym_cmds=$lt_module_expsym_cmds_CXX

# Whether we are building with GNU ld or not.
with_gnu_ld=$lt_with_gnu_ld_CXX

# Flag that allows shared libraries with undefined symbols to be built.
allow_undefined_flag=$lt_allow_undefined_flag_CXX

# Flag that enforces no undefined symbols.
no_undefined_flag=$lt_no_undefined_flag_CXX

# Flag to hardcode \$libdir into a binary during linking.
# This must work even if \$libdir does not exist
hardcode_libdir_flag_spec=$lt_hardcode_libdir_flag_spec_CXX

# If ld is used when linking, flag to hardcode \$libdir into a binary
# during linking.  This must work even if \$libdir does not exist.
hardcode_libdir_flag_spec_ld=$lt_hardcode_libdir_flag_spec_ld_CXX

# Whether we need a single "-rpath" flag with a separated argument.
hardcode_libdir_separator=$lt_hardcode_libdir_separator_CXX

# Set to "yes" if using DIR/libNAME\${shared_ext} during linking hardcodes
# DIR into the resulting binary.
hardcode_direct=$hardcode_direct_CXX

# Set to "yes" if using DIR/libNAME\${shared_ext} during linking hardcodes
# DIR into the resulting binary and the resulting library dependency is
# "absolute",i.e impossible to change by setting \${shlibpath_var} if the
# library is relocated.
hardcode_direct_absolute=$hardcode_direct_absolute_CXX

# Set to "yes" if using the -LDIR flag during linking hardcodes DIR
# into the resulting binary.
hardcode_minus_L=$hardcode_minus_L_CXX

# Set to "yes" if using SHLIBPATH_VAR=DIR during linking hardcodes DIR
# into the resulting binary.
hardcode_shlibpath_var=$hardcode_shlibpath_var_CXX

# Set to "yes" if building a shared library automatically hardcodes DIR
# into the library and all subsequent libraries and executables linked
# against it.
hardcode_automatic=$hardcode_automatic_CXX

# Set to yes if linker adds runtime paths of dependent libraries
# to runtime path list.
inherit_rpath=$inherit_rpath_CXX

# Whether libtool must link a program against all its dependency libraries.
link_all_deplibs=$link_all_deplibs_CXX

# Fix the shell variable \$srcfile for the compiler.
fix_srcfile_path=$lt_fix_srcfile_path_CXX

# Set to "yes" if exported symbols are required.
always_export_symbols=$always_export_symbols_CXX

# The commands to list exported symbols.
export_symbols_cmds=$lt_export_symbols_cmds_CXX

# Symbols that should not be listed in the preloaded symbols.
exclude_expsyms=$lt_exclude_expsyms_CXX

# Symbols that must always be exported.
include_expsyms=$lt_include_expsyms_CXX

# Commands necessary for linking programs (against libraries) with templates.
prelink_cmds=$lt_prelink_cmds_CXX

# Specify filename containing input files.
file_list_spec=$lt_file_list_spec_CXX

# How to hardcode a shared library path into an executable.
hardcode_action=$hardcode_action_CXX

# The directories searched by this compiler when creating a shared library.
compiler_lib_search_dirs=$lt_compiler_lib_search_dirs_CXX

# Dependencies to place before and after the objects being linked to
# create a shared library.
predep_objects=$lt_predep_objects_CXX
postdep_objects=$lt_postdep_objects_CXX
predeps=$lt_predeps_CXX
postdeps=$lt_postdeps_CXX

# The library search path used internally by the compiler when linking
# a shared library.
compiler_lib_search_path=$lt_compiler_lib_search_path_CXX

# ### END LIBTOOL TAG CONFIG: CXX
_LT_EOF

 ;;
    "po-directories":C)
    for ac_file in $CONFIG_FILES; do
      # Support "outfile[:infile[:infile...]]"
      case "$ac_file" in
        *:*) ac_file=`echo "$ac_file"|sed 's%:.*%%'` ;;
      esac
      # PO directories have a Makefile.in generated from Makefile.in.in.
      case "$ac_file" in */Makefile.in)
        # Adjust a relative srcdir.
        ac_dir=`echo "$ac_file"|sed 's%/[^/][^/]*$%%'`
        ac_dir_suffix="/`echo "$ac_dir"|sed 's%^\./%%'`"
        ac_dots=`echo "$ac_dir_suffix"|sed 's%/[^/]*%../%g'`
        # In autoconf-2.13 it is called $ac_given_srcdir.
        # In autoconf-2.50 it is called $srcdir.
        test -n "$ac_given_srcdir" || ac_given_srcdir="$srcdir"
        case "$ac_given_srcdir" in
          .)  top_srcdir=`echo $ac_dots|sed 's%/$%%'` ;;
          /*) top_srcdir="$ac_given_srcdir" ;;
          *)  top_srcdir="$ac_dots$ac_given_srcdir" ;;
        esac
        # Treat a directory as a PO directory if and only if it has a
        # POTFILES.in file. This allows packages to have multiple PO
        # directories under different names or in different locations.
        if test -f "$ac_given_srcdir/$ac_dir/POTFILES.in"; then
          rm -f "$ac_dir/POTFILES"
          test -n "$as_me" && echo "$as_me: creating $ac_dir/POTFILES" || echo "creating $ac_dir/POTFILES"
          cat "$ac_given_srcdir/$ac_dir/POTFILES.in" | sed -e "/^#/d" -e "/^[ 	]*\$/d" -e "s,.*,     $top_srcdir/& \\\\," | sed -e "\$s/\(.*\) \\\\/\1/" > "$ac_dir/POTFILES"
          POMAKEFILEDEPS="POTFILES.in"
          # ALL_LINGUAS, POFILES, UPDATEPOFILES, DUMMYPOFILES, GMOFILES depend
          # on $ac_dir but don't depend on user-specified configuration
          # parameters.
          if test -f "$ac_given_srcdir/$ac_dir/LINGUAS"; then
            # The LINGUAS file contains the set of available languages.
            if test -n "$OBSOLETE_ALL_LINGUAS"; then
              test -n "$as_me" && echo "$as_me: setting ALL_LINGUAS in configure.in is obsolete" || echo "setting ALL_LINGUAS in configure.in is obsolete"
            fi
            ALL_LINGUAS_=`sed -e "/^#/d" -e "s/#.*//" "$ac_given_srcdir/$ac_dir/LINGUAS"`
            # Hide the ALL_LINGUAS assigment from automake < 1.5.
            eval 'ALL_LINGUAS''=$ALL_LINGUAS_'
            POMAKEFILEDEPS="$POMAKEFILEDEPS LINGUAS"
          else
            # The set of available languages was given in configure.in.
            # Hide the ALL_LINGUAS assigment from automake < 1.5.
            eval 'ALL_LINGUAS''=$OBSOLETE_ALL_LINGUAS'
          fi
          # Compute POFILES
          # as      $(foreach lang, $(ALL_LINGUAS), $(srcdir)/$(lang).po)
          # Compute UPDATEPOFILES
          # as      $(foreach lang, $(ALL_LINGUAS), $(lang).po-update)
          # Compute DUMMYPOFILES
          # as      $(foreach lang, $(ALL_LINGUAS), $(lang).nop)
          # Compute GMOFILES
          # as      $(foreach lang, $(ALL_LINGUAS), $(srcdir)/$(lang).gmo)
          case "$ac_given_srcdir" in
            .) srcdirpre= ;;
            *) srcdirpre='$(srcdir)/' ;;
          esac
          POFILES=
          UPDATEPOFILES=
          DUMMYPOFILES=
          GMOFILES=
          for lang in $ALL_LINGUAS; do
            POFILES="$POFILES $srcdirpre$lang.po"
            UPDATEPOFILES="$UPDATEPOFILES $lang.po-update"
            DUMMYPOFILES="$DUMMYPOFILES $lang.nop"
            GMOFILES="$GMOFILES $srcdirpre$lang.gmo"
          done
          # CATALOGS depends on both $ac_dir and the user's LINGUAS
          # environment variable.
          INST_LINGUAS=
          if test -n "$ALL_LINGUAS"; then
            for presentlang in $ALL_LINGUAS; do
              useit=no
              if test "%UNSET%" != "$LINGUAS"; then
                desiredlanguages="$LINGUAS"
              else
                desiredlanguages="$ALL_LINGUAS"
              fi
              for desiredlang in $desiredlanguages; do
                # Use the presentlang catalog if desiredlang is
                #   a. equal to presentlang, or
                #   b. a variant of presentlang (because in this case,
                #      presentlang can be used as a fallback for messages
                #      which are not translated in the desiredlang catalog).
                case "$desiredlang" in
                  "$presentlang"*) useit=yes;;
                esac
              done
              if test $useit = yes; then
                INST_LINGUAS="$INST_LINGUAS $presentlang"
              fi
            done
          fi
          CATALOGS=
          if test -n "$INST_LINGUAS"; then
            for lang in $INST_LINGUAS; do
              CATALOGS="$CATALOGS $lang.gmo"
            done
          fi
          test -n "$as_me" && echo "$as_me: creating $ac_dir/Makefile" || echo "creating $ac_dir/Makefile"
          sed -e "/^POTFILES =/r $ac_dir/POTFILES" -e "/^# Makevars/r $ac_given_srcdir/$ac_dir/Makevars" -e "s|@POFILES@|$POFILES|g" -e "s|@UPDATEPOFILES@|$UPDATEPOFILES|g" -e "s|@DUMMYPOFILES@|$DUMMYPOFILES|g" -e "s|@GMOFILES@|$GMOFILES|g" -e "s|@CATALOGS@|$CATALOGS|g" -e "s|@POMAKEFILEDEPS@|$POMAKEFILEDEPS|g" "$ac_dir/Makefile.in" > "$ac_dir/Makefile"
          for f in "$ac_given_srcdir/$ac_dir"/Rules-*; do
            if test -f "$f"; then
              case "$f" in
                *.orig | *.bak | *~) ;;
                *) cat "$f" >> "$ac_dir/Makefile" ;;
              esac
            fi
          done
        fi
        ;;
      esac
    done ;;
    "po/stamp-it":C)
    if  ! grep "^# INTLTOOL_MAKEFILE$" "po/Makefile.in" > /dev/null ; then
       { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: po/Makefile.in.in was not created by intltoolize." >&5
$as_echo "$as_me: WARNING: po/Makefile.in.in was not created by intltoolize." >&2;}
    else
	    rm -f "po/stamp-it" "po/stamp-it.tmp" "po/POTFILES" "po/Makefile.tmp"
	    >"po/stamp-it.tmp"
	    sed '/^#/d
		 s/^[[].*] *//
		 /^[ 	]*$/d
		'"s|^|	$ac_top_srcdir/|" \
	      "$srcdir/po/POTFILES.in" | sed '$!s/$/ \\/' >"po/POTFILES"

	    sed '/^POTFILES =/,/[^\\]$/ {
			/^POTFILES =/!d
			r po/POTFILES
		  }
		 ' "po/Makefile.in" >"po/Makefile"
	    rm -f "po/Makefile.tmp"
	    mv "po/stamp-it.tmp" "po/stamp-it"
    fi
   ;;

  esac
done # for ac_tag


as_fn_exit 0
