#!/bin/bash

# save and run
# ngx_install

PARENTF=`pwd`
NGINXV='nginx-1.16.1'
IS_LOCAL=1


main() {
    notice "ngx_install for $NGINXV"
    notice "from parent folder $PARENTF"
    notice "IS_LOCAL $IS_LOCAL"
    
    pushd 'opt/luajit2.git'
        mkdir build
        
        notice 'make luajit2.git'
        make -j2
        make install PREFIX=$PARENTF/opt/luajit2.git/build
    popd
    
    pushd 'sregex.git'
        notice 'make sregex.git'
        make clean
        rm -rf build ; mkdir build
        
        if [ $IS_LOCAL == 1 ]; then
            make -j4 PREFIX=$PARENTF/sregex.git/build
            make install PREFIX=$PARENTF/sregex.git/build
        else
            make -j4
            make install
        fi
    popd
    
    pushd 'drizzle7-2011.07.21'
        notice 'make drizzle7-2011.07.21'
        rm -rf build ; mkdir build
        
        if [ $IS_LOCAL == 1 ]; then
            ./configure --without-server --prefix=$PARENTF/drizzle7-2011.07.21/build
        else
            ./configure --without-server
        fi
        
        make libdrizzle-1.0 -j4
        make install-libdrizzle-1.0 -j4
    popd
    
    pushd 'opt/lua-cjson.git'
        notice 'make opt/lua-cjson.git'
        
        echo
        echo "export LUA_INCLUDE_DIR=\"$PARENTF/opt/luajit2.git/src\" && make -j4"
        echo
        export LUA_INCLUDE_DIR="$PARENTF/opt/luajit2.git/src" && make -j4
        
        read -p "Press [Enter] key to continue..."
    popd
    
    echo
    notice "save these strings:"
    if [ $IS_LOCAL == 1 ]; then
        local LB="$PARENTF/opt/lua-resty-core.git/lib/?.lua;"
        LB="$LB$PARENTF/opt/lua-resty-lrucache.git/lib/?.lua;"
        LB="$LB$PARENTF/opt/lua-resty-redis.git/lib/?.lua;"
        LB="$LB$PARENTF/opt/lua-resty-mysql.git/lib/?.lua;"
        LB="$LB$PARENTF/opt/lua-ssl-nginx-module.git/lib/?.lua;"
        
        LB="$LB$PARENTF/opt/lua-resty-signal.git/lib/?.lua;"
        LB="$LB$PARENTF/opt/lua-tablepool.git/lib/?.lua;"
        LB="$LB$PARENTF/opt/lua-resty-shell.git/lib/?.lua;"
        
        local CLB="$PARENTF/opt/lua-cjson.git/?.so;"
        CLB="$CLB$PARENTF/opt/lua-resty-signal.git/?.so;"
        
        echo "lua_package_path \"$LB;\";"
        echo "lua_package_cpath \"$CLB;\";"
    else
        local LB="/opt/lua-resty-core.git/lib/?.lua;"
        LB="$LB/opt/lua-resty-lrucache.git/lib/?.lua;"
        LB="$LB/opt/lua-resty-redis.git/lib/?.lua;"
        LB="$LB/opt/lua-resty-mysql.git/lib/?.lua;"
        LB="$LB/opt/lua-ssl-nginx-module.git/lib/?.lua;"
        
        local CLB="/opt/lua-cjson.git/?.so;"
        CLB="$CLB/opt/lua-resty-signal.git/?.so;"
        
        echo "lua_package_path \"$LB;\";"
        echo "lua_package_cpath \"$CLB;\";"
    fi
    echo
    read -p "Press [Enter] key to continue..."
    
    make_configure
    
}

# ------------------------------------------------------------------------------

make_configure() {
    
    local PREFIX=""
    local CONF_PATH=""
    local PID_PATH=""
    local ERROR_LOG=""
    local HTTP_LOG=""
    local CLIENT_BODY_TEMP=""
    local PROXY_TEMP_PATH=""
    local FASTCGI_TEMP_PATH=""
    local UWSGI_TEMP_PATH=""
    local SCGI_TEMP_PATH=""
    local LUAJIT2_BUILD_LIB=""
    local LUAJIT2_SRC=""
    
    if [ $IS_LOCAL == 1 ]; then
        mkdir -p $PARENTF/build/{tmp,proxy,fastcgi,uwsgi,scgi}
        PREFIX="$PARENTF/build/"
        CONF_PATH="$PREFIX/conf/nginx.conf"
        PID_PATH="$PREFIX/logs/nginx.pid"
        ERROR_LOG="$PREFIX/logs/error.log"
        HTTP_LOG="$PREFIX/logs/access.log"
        CLIENT_BODY_TEMP="$PREFIX/tmp/"
        PROXY_TEMP_PATH="$PREFIX/proxy/"
        FASTCGI_TEMP_PATH="$PREFIX/fastcgi/"
        UWSGI_TEMP_PATH="$PREFIX/uwsgi/"
        SCGI_TEMP_PATH="$PREFIX/scgi/"
        LUAJIT2_BUILD_LIB="$PARENTF/opt/luajit2.git/build/lib"
        LUAJIT2_SRC="$PARENTF/opt/luajit2.git/src"
    else
        PREFIX="/usr/local/$NGINXV"
        CONF_PATH="/etc/$NGINXV/nginx.conf"
        PID_PATH="/var/run/nginx/nginx.pid"
        ERROR_LOG="/var/log/nginx/error.log"
        HTTP_LOG="/var/log/nginx/access.log"
        CLIENT_BODY_TEMP="/var/lib/nginx/tmp/"
        PROXY_TEMP_PATH="/var/lib/nginx/proxy/"
        FASTCGI_TEMP_PATH="/var/lib/nginx/fastcgi/"
        UWSGI_TEMP_PATH="/var/lib/nginx/uwsgi/"
        SCGI_TEMP_PATH="/var/lib/nginx/scgi/"
        LUAJIT2_BUILD_LIB="/opt/luajit2.git/build/lib"
        LUAJIT2_SRC="/opt/luajit2.git/src"
    fi
    
    WITH_OPENSSL=""
    if [ -d openssl-OpenSSL_1_1_1d ]; then
        WITH_OPENSSL="--with-openssl=$PARENTF/openssl-OpenSSL_1_1_1d --with-openssl-opt='enable-tls1_3'"
    fi
    
cat << L10HEREDOC > $NGINXV/nginx_configuration
#!/bin/bash

./configure \\
--with-cc-opt="-Wno-sign-compare -Wno-string-plus-int -Wno-deprecated-declarations -Wno-unused-parameter -Wno-unused-const-variable -Wno-conditional-uninitialized -Wno-mismatched-tags -Wno-sometimes-uninitialized -Wno-parentheses-equality -Wno-tautological-compare -Wno-self-assign -Wno-deprecated-register -Wno-deprecated -Wno-invalid-source-encoding -Wno-pointer-sign -Wno-parentheses -Wno-enum-conversion -Wno-c++11-compat-deprecated-writable-strings -Wno-write-strings" \\
--with-ld-opt="-Wl,-rpath,$LUAJIT2_BUILD_LIB" \\
--prefix=$PREFIX \\
--conf-path=$CONF_PATH \\
--pid-path=$PID_PATH \\
--error-log-path=$ERROR_LOG \\
--http-log-path=$HTTP_LOG \\
--http-client-body-temp-path=$CLIENT_BODY_TEMP \\
--http-proxy-temp-path=$PROXY_TEMP_PATH \\
--http-fastcgi-temp-path=$FASTCGI_TEMP_PATH \\
--http-uwsgi-temp-path=$UWSGI_TEMP_PATH \\
--http-scgi-temp-path=$SCGI_TEMP_PATH \\
--user=nginx \\
--group=nginx \\
--with-stream \\
--with-stream_ssl_module \\
--with-stream_ssl_preread_module \\
--with-threads \\
--with-file-aio \\
--with-http_ssl_module $WITH_OPENSSL \\
--with-http_v2_module \\
--with-http_realip_module \\
--with-http_addition_module \\
--with-http_image_filter_module \\
--with-http_geoip_module \\
--with-http_sub_module \\
--with-http_mp4_module \\
--with-http_gunzip_module \\
--with-http_gzip_static_module \\
--with-http_random_index_module \\
--with-http_secure_link_module \\
--with-http_stub_status_module \\
--with-pcre \\
--with-pcre-jit \\
--with-libatomic \\
--add-module=../memc-nginx-module.git/ \\
--add-module=../lua-nginx-module.git/ \\
--add-module=../ngx_devel_kit.git/ \\
--add-module=../redis2-nginx-module.git/ \\
--add-module=../echo-nginx-module.git/ \\
--add-module=../form-input-nginx-module.git/ \\
--add-module=../set-misc-nginx-module.git/ \\
--add-module=../nginx-upload-module.git/ \\
--add-module=../ngx_cache_purge.git/ \\
--add-module=../headers-more-nginx-module.git/ \\
--add-module=../naxsi.git/naxsi_src/ \\
--add-module=../replace-filter-nginx-module.git/ \\
--add-module=../rds-json-nginx-module.git/ \\
--add-module=../rds-csv-nginx-module.git/ \\
--add-module=../drizzle-nginx-module.git/ \\
--add-module=../ngx_postgres.git/ \\
--add-module=../njs.git/nginx/ \\
--add-module=../stream-lua-nginx-module.git/ \\
--add-module=../xss-nginx-module.git/ \\


L10HEREDOC
    
    chmod +x "$NGINXV/nginx_configuration"
    
    notice "export these environment:"
    echo "unset LUAJIT_LIB && unset LUAJIT_INC"
    echo "unset SREGEX_LIB && unset SREGEX_INC"
    echo "unset LIBDRIZZLE_INC && unset LIBDRIZZLE_LIB"
    echo
    echo "export LUAJIT_LIB=$LUAJIT2_BUILD_LIB && export LUAJIT_INC=$LUAJIT2_SRC"
    
    if [ $IS_LOCAL == 1 ]; then
        echo "export SREGEX_LIB=../sregex.git/build/lib && export SREGEX_INC=../sregex.git/src"
        echo "export LIBDRIZZLE_INC=../drizzle7-2011.07.21/build/include/libdrizzle-1.0 && export LIBDRIZZLE_LIB=../drizzle7-2011.07.21/build/lib64/"
    fi
    notice
    
    notice 'run ./nginx_configuration'
    notice 'make -j4 && make install'
    notice
    
    
    cd $NGINXV && exec bash
    
    
}

# ------------------------------------------------------------------------------

notice() {
    builtin echo -en "\033[1m"
    echo "NOTICE: $@"
    builtin echo -en "\033[0m"
}

success() {
    builtin echo -en "\033[1;32m"
    echo "SUCCESS: $@"
    builtin echo -en "\033[0m"
}

warn() {
    builtin echo -en "\033[1;33m"
    echo "WARN: $@"
    builtin echo -en "\033[0m"
}

err() {
    builtin echo -en "\033[1;31m"
    echo "ERR: $@"
    builtin echo -en "\033[0m"
    exit 1
}

fatal() {
    builtin echo -en "\033[1;31m"
    echo "FATAL: $@"
    builtin echo -en "\033[0m"
    exit 1
}

# ------------------------------------------------------------------------------

main
